[[release-notes-2.0.0-beta1]]
== 2.0.0-beta1 Release Notes

[[breaking-2.0.0-beta1]]
[float]
=== Breaking changes

Aggregations::
* Removed unused factor parameter in DateHistogramBuilder {pull}12850[#12850] (issue: {issue}6490[#6490])
* Aggregation: Removed Old Script Java API from metrics aggregations {pull}12236[#12236]
* Change the default `min_doc_count` to 0 on histograms. {pull}10904[#10904]
* Speed up include/exclude in terms aggregations with regexps, using Lucene regular expressions {pull}10418[#10418] (issues: {issue}7526[#7526], {issue}9848[#9848])
* Clean up time zone options for `date_histogram` {pull}9637[#9637] (issue: {issue}9062[#9062])
* Add `offset` to date_histogram, replacing `pre_offsest` and `post_offset` {pull}9597[#9597] (issue: {issue}9062[#9062])
* Facets: Removal from master. {pull}7337[#7337]
* Changed the respnose structure of the percentiles aggregation {pull}6079[#6079] (issue: {issue}5870[#5870])

Aliases::
* Throw exception if `index` is null or missing when creating an alias {pull}8240[#8240] (issues: {issue}7863[#7863], {issue}7976[#7976])

Allocation::
* Default delayed allocation timeout to 1m from 0 {pull}12166[#12166]
* Remove old 0.90 shard allocator {pull}10889[#10889]
* Enable DiskThresholdDecider by default, change default limits to 85/90% {pull}6204[#6204] (issues: {issue}6200[#6200], {issue}6201[#6201])

Analysis::
* Add multi-valued text support to the analyzer API {pull}10847[#10847] (issue: {issue}3023[#3023])
* Term positions in analyze API should start at 1, not 0 {pull}10771[#10771]
* Improvements to StemmerTokenFilter {pull}6452[#6452]

Bulk::
* Remove Bulk UDP  {pull}7595[#7595]

CAT API::
* Filtered out non data-nodes in relevant cat api {pull}9287[#9287]
* Default _cat APIs to verbose {pull}8927[#8927] (issue: {issue}8922[#8922])

CRUD::
* Remove core delete-by-query implementation {pull}10859[#10859] (issue: {issue}10067[#10067])
* Remove `async` replication {pull}10171[#10171] (issue: {issue}10114[#10114])
* Remove async replication from the docs and REST spec {pull}10162[#10162] (issue: {issue}10114[#10114])
* Delete api: remove broadcast delete if routing is missing when required {pull}10136[#10136] (issue: {issue}9123[#9123])
* Version types `EXTERNAL` & `EXTERNAL_GTE` test for version equality in read operation & disallow them in the Update API {pull}5929[#5929] (issues: {issue}5661[#5661], {issue}5663[#5663])

Cache::
* Make ordinals start at 0. {pull}5946[#5946] (issue: {issue}5871[#5871])

Circuit Breakers::
* Add HierarchyCircuitBreakerService {pull}6739[#6739] (issue: {issue}6129[#6129])

Cluster::
* Remove `_shutdown` API {pull}10831[#10831]
* Cluster State API: Remove index template filtering {pull}6020[#6020] (issue: {issue}4954[#4954])

Core::
* Remove MergeScheduler pluggability {pull}11585[#11585]
* Don't allow indices containing too-old segments to be opened {pull}11072[#11072] (issues: {issue}10215[#10215], {issue}11095[#11095])
* Remove Restart API and remove Node#stop() {pull}9921[#9921] (issue: {issue}9841[#9841])
* Remove component settings from AbstractComponent {pull}9919[#9919]
* Refactor settings filtering, adding regex support {pull}9748[#9748] (issue: {issue}6295[#6295])
* Cut over to Path API for file deletion {pull}8366[#8366]
* Switch to murmurhash3 to route documents to shards. {pull}7954[#7954]
* Resiliency: Throw exception if the JVM will corrupt data. {pull}7580[#7580]
* Remove deprecated gateways {pull}5520[#5520] (issue: {issue}5422[#5422])

Discovery::

* Default to unicast discovery, with default host list of 127.0.0.1, [::1] {pull}12999[#12999] (issue: {issue}12993[#12993])

Engine::
* Remove full flush / FlushType.NEW_WRITER {pull}9559[#9559]

Exceptions::
* Generify Index and Shard exceptions {pull}12023[#12023]
* Streamline use of IndexClosedException introduced with #6475 {pull}6990[#6990] (issues: {issue}6475[#6475], {issue}6988[#6988])
* Thread pool rejection status code should be 429 {pull}6629[#6629] (issue: {issue}6627[#6627])

Fielddata::
* Fielddata: Remove soft/resident caches. {pull}7443[#7443]

Highlighting::
* Wildcard field names in highlighting should only return fields that can be highlighted {pull}11364[#11364] (issue: {issue}9881[#9881])
* Remove XPostingsHighlighter in favour of Lucene's PostingsHighlighter {pull}11077[#11077] (issue: {issue}10625[#10625])
* `require_field_match` now defaults to `true` {pull}11067[#11067] (issue: {issue}10627[#10627])

Index APIs::
* Change behaviour of indices segments api to allow no indices {pull}9219[#9219] (issue: {issue}5856[#5856])
* REST API: Removed support for aliases as part of index settings {pull}5545[#5545]

Index Templates::
* Remove file based index templates {pull}11052[#11052] (issue: {issue}10870[#10870])
* GET templates doesn't honor the `flat_settings` parameter. {pull}6672[#6672] (issue: {issue}6671[#6671])

Internal::
* Flatten SearchService and clean up build-in registration {pull}12807[#12807] (issue: {issue}12783[#12783])
* Consolidate shard level abstractions {pull}11847[#11847]
* Bake in TieredMergePolicy {pull}11588[#11588]
* Remove Translog interface {pull}10988[#10988]
* Remove InternalNode class and use Node directly {pull}9844[#9844]
* Remove OperationRouting abstraction {pull}9085[#9085]
* Drop support for state written pre 0.90 {pull}8850[#8850]
* Remove some more bwc code {pull}8778[#8778]
* Remove optional original indices {pull}8777[#8777] (issue: {issue}7406[#7406])
* Remove runtime version checks {pull}8768[#8768]
* Remove NoneGateway, NoneGatewayAllocator, & NoneGatewayModule {pull}8537[#8537]
* Simplify reading / writing from and to BlobContainer {pull}7551[#7551]
* Refactor guice startup {pull}7289[#7289]
* Fixed filters execution order and fix potential concurrency issue in filter chains {pull}7023[#7023] (issues: {issue}7019[#7019], {issue}7021[#7021])
* Make transport action name available in TransportAction base class {pull}6860[#6860]
* Cleanup Rest Response {pull}5612[#5612]
* Remove `Releasable` in favor of `Closeable`  [ISSUE] {pull}5423[#5423]

Java API::
* Java api: remove execution from TermsQueryBuilder as it has no effect {pull}12884[#12884]
* Enhancement/terms lookup fixes {pull}12870[#12870]
* Centralize admin implementations and action execution {pull}10955[#10955]
* Automatically thread client based action listeners {pull}10940[#10940]
* Remove redundant BytesQueryBuilder in favour of using WrapperQueryBuilder internally {pull}10919[#10919]
* Aggregations: Clean up response API for Aggregations {pull}9221[#9221]
* QueryBuilders cleanup (add and deprecate) {pull}8667[#8667] (issue: {issue}8721[#8721])
* Remove operationThreaded setter from ExplainRequestBuilder {pull}7186[#7186]
* Remove unnecessary intermediate interfaces {pull}6517[#6517] (issue: {issue}4355[#4355])
* Unify IndicesOptions constants {pull}6068[#6068] (issue: {issue}6059[#6059])
* Remove operation threading from broadcast actions {pull}6044[#6044]
* Remove search operation threading option {pull}6042[#6042]
* Make Create/Update/Delete classes less mutable {pull}5939[#5939] (issue: {issue}5917[#5917])

Logging::
* Truncate log messages at 10,000 characters by default {pull}11050[#11050]

Mapping::
* Disallow type names to start with dots for new indices except for .percolator {pull}12561[#12561] (issue: {issue}12560[#12560])
* Remove ability to configure _index {pull}12356[#12356] (issues: {issue}12027[#12027], {issue}12329[#12329])
* Enforce field names do not contain dot {pull}12068[#12068]
* Restrict fields with the same name in different types to have the same core settings {pull}11812[#11812] (issue: {issue}8871[#8871])
* Lockdown `_timestamp` field {pull}11794[#11794] (issues: {issue}6730[#6730], {issue}8143[#8143])
* Remove the `compress`/`compress_threshold` options of the BinaryFieldMapper {pull}11280[#11280]
* Remove ability to set the value of meta fields inside `_source` {pull}11074[#11074] (issue: {issue}11051[#11051])
* Remove file based default mappings {pull}10870[#10870] (issue: {issue}10620[#10620])
* Validate dynamic mappings updates on the master node. {pull}10634[#10634] (issues: {issue}8650[#8650], {issue}8688[#8688])
* Remove delete mapping API {pull}10231[#10231] (issue: {issue}8877[#8877])
* Lock down `_ttl` field {pull}9914[#9914] (issue: {issue}8143[#8143])
* Lock down `_size` field {pull}9913[#9913] (issue: {issue}8143[#8143])
* Lock down `_field_names` field {pull}9912[#9912] (issue: {issue}8143[#8143])
* Remove `_boost` field {pull}9897[#9897] (issue: {issue}8875[#8875])
* Lock down `_routing` field {pull}9895[#9895] (issue: {issue}8143[#8143])
* Lock down `_index` field {pull}9870[#9870] (issue: {issue}8143[#8143])
* Lock down `_type` field {pull}9869[#9869] (issue: {issue}8143[#8143])
* Lock down `_id` field {pull}9842[#9842] (issue: {issue}8143[#8143])
* Lock down `_uid` field {pull}9836[#9836] (issue: {issue}8143[#8143])
* Remove the ability to have custom per-field postings and doc values formats. {pull}9741[#9741] (issue: {issue}8746[#8746])
* Remove support for new indexes using `path` setting in object/nested fields or `index_name` in any field {pull}9570[#9570] (issue: {issue}6677[#6677])
* Remove type prefix support from field names in queries {pull}9492[#9492] (issue: {issue}8872[#8872])
* Remove `index_analyzer` setting to simplify analyzer logic {pull}9451[#9451] (issue: {issue}9371[#9371])
* Remove type level default analyzers {pull}9430[#9430] (issues: {issue}8874[#8874], {issue}9365[#9365])
* Remove `_analyzer` field {pull}9381[#9381] (issue: {issue}9279[#9279])
* Remove fieldSearchAnalyzer and fieldSearchQuoteAnalyzer from MapperService. {pull}9262[#9262]
* Remove `allow_type_wrapper` setting {pull}9185[#9185]
* Add doc values support to boolean fields. {pull}7961[#7961] (issues: {issue}4678[#4678], {issue}7851[#7851])
* Remove unsupported `postings_format` / `doc_values_format` {pull}7604[#7604] (issues: {issue}7238[#7238], {issue}7566[#7566])
* Mappings: Update mapping on master in async manner {pull}6648[#6648]
* The binary field shouldn't be stored by default, because it is already available in the _source {pull}4957[#4957]

More Like This::
* Remove `percent_terms_to_match` {pull}11030[#11030]
* Remove the MLT API {pull}11003[#11003] (issue: {issue}10736[#10736])

NOT CLASSIFIED::
* Rivers removal. {pull}11568[#11568]

Network::
* Move multicast discovery to a plugin {pull}13027[#13027] (issues: {issue}12993[#12993], {issue}12999[#12999], {issue}13019[#13019])
* Ban java serialization {pull}11910[#11910]
* Default to binding to loopback address {pull}11483[#11483] (issues: {issue}11300[#11300], {issue}7077[#7077])
* Remove unsafe options {pull}10360[#10360]
* Remove references to the thrift and memcached transport plugins {pull}10169[#10169] (issue: {issue}10166[#10166])

Packaging::
* Remove Environment.homeFile() {pull}12351[#12351]
* Startup: Remove getopt parsing in shell script, use java CLITool {pull}12165[#12165]

Parent/Child::
* Remove the `top_children` query {pull}11028[#11028] (issue: {issue}11022[#11022])
* Refactoring parent/child to improve memory consumption and query execution. {pull}6511[#6511] (issues: {issue}10135[#10135], {issue}10485[#10485], {issue}6107[#6107], {issue}8134[#8134])

Plugins::
* Simplify Plugin API for constructing modules {pull}12952[#12952]
* Use 'name' from plugin descriptor file to determine plugin name {pull}12775[#12775] (issue: {issue}12715[#12715])
* make java.version mandatory for jvm plugins {pull}12424[#12424]
* Adapt pluginmanager to the new world {pull}12408[#12408]
* Refactor pluginservice {pull}12367[#12367] (issue: {issue}11917[#11917])
* CLITool: Port PluginManager to use CLITool {pull}12290[#12290]
* One single (global) way to register custom query parsers {pull}11481[#11481]
* Don't overwrite plugin configuration when removing/upgrading plugins {pull}7890[#7890] (issue: {issue}5064[#5064])

Query DSL::
* Don't allow fuzziness specified as a % and require edits [0,2] instead {pull}12229[#12229] (issue: {issue}10638[#10638])
* Remove filter parsers. {pull}10985[#10985]
* Deprecate the `limit` filter. {pull}10532[#10532]
* Remove `fuzzy_like_this` query {pull}10391[#10391]
* Function Score: Refactor RandomScoreFunction to be consistent, and return values in range [0.0, 1.0] {pull}7446[#7446] (issue: {issue}6907[#6907])
* Remove `numeric_range` filter {pull}7242[#7242] (issues: {issue}4034[#4034], {issue}7108[#7108])
* Remove `custom_score` and `custom_boost_factor` queries {pull}5076[#5076]

REST::
* Cluster state: return `routing_nodes` only when requested through specific flag {pull}10486[#10486] (issue: {issue}10412[#10412])
* Remove jsonp support and associated tests {pull}9242[#9242] (issue: {issue}9108[#9108])
* Remove `status` code from main action `/` {pull}8865[#8865]
* Add all meta fields to the top level json document in search response {pull}8131[#8131]
* Security: Disable JSONP by default {pull}6795[#6795]
* Removed Index Status API {pull}6062[#6062] (issue: {issue}4854[#4854])

Recovery::
* Decouple recoveries from engine flush {pull}10624[#10624]
* RecoveryState clean up {pull}9811[#9811] (issue: {issue}6644[#6644])

Scripting::
* Remove deprecated script APIs {pull}11619[#11619]
* Add script type and script name to error messages {pull}11449[#11449] (issue: {issue}6653[#6653])
* Added a new script construct {pull}10649[#10649]
* Remove deprecated methods from ScriptService {pull}10476[#10476]
* Remove support for `script.disable_dynamic` setting {pull}10286[#10286] (issue: {issue}10116[#10116])
* Cleanup ScriptService & friends in preparation for #6418 {pull}9992[#9992] (issue: {issue}6418[#6418])
* Removed deprecated script parameter names {pull}9815[#9815]
* Disable dynamic Groovy scripting by marking Groovy as not sandboxed [ISSUE] {pull}9655[#9655]
* Created a parameter parser to standardise script options {pull}7977[#7977]
* Script with `_score`: remove dependency of DocLookup and scorer {pull}7819[#7819] (issues: {issue}7043[#7043], {issue}7487[#7487])
* Remove MVEL as a built-in scripting language {pull}6610[#6610]
* Switch to Groovy as the default scripting language {pull}6571[#6571] (issue: {issue}6233[#6233])
* Disable dynamic scripting by default {pull}5943[#5943] (issue: {issue}5853[#5853])

Search::
* Cut over to the Lucene filter cache {pull}10897[#10897]
* Remove terms filter lookup cache. {pull}9056[#9056]
* Fix script fields to be returned as a multivalued field when they produce a list {pull}8592[#8592] (issue: {issue}3015[#3015])
* Remove partial fields {pull}8133[#8133]
* Only return aggregations on the first page with scroll and forbidden with scan {pull}7497[#7497] (issue: {issue}1642[#1642])

Settings::
* Do not permit multiple settings files {pull}13043[#13043] (issue: {issue}13042[#13042])
* change CORS allow origin default to allow no origins {pull}11890[#11890] (issue: {issue}11169[#11169])
* Require units for time and byte-sized settings, take 2 {pull}11437[#11437] (issues: {issue}10888[#10888], {issue}7616[#7616], {issue}7633[#7633])
* Remove `mapping.date.round_ceil` setting for date math parsing {pull}8889[#8889] (issues: {issue}8556[#8556], {issue}8598[#8598])
* Add a `index.query.parse.allow_unmapped_fields` setting that fails if queries refer to unmapped fields. {pull}6928[#6928] (issue: {issue}6664[#6664])
* Change default filter cache to 10% and circuit breaker to 60% {pull}5990[#5990]

Shadow Replicas::
* Remove the `node.enable_custom_paths` setting {pull}12837[#12837] (issue: {issue}12776[#12776])
* Add `path.shared_data`, change `index.data_path` to be relative {pull}11065[#11065]

Snapshot/Restore::
* Url repository should respect repo.path for file urls {pull}11687[#11687]
* Fix FSRepository location configuration {pull}11157[#11157] (issues: {issue}10828[#10828], {issue}11068[#11068])
* Remove obsolete `expand_wildcards_open` and  `expand_wildcards_close` options {pull}10744[#10744] (issues: {issue}10743[#10743], {issue}6097[#6097])
* Automatic verification of all files that are being snapshotted with Snapshot/Restore {pull}7159[#7159] (issue: {issue}5593[#5593])
* Add Partial snapshot state {pull}5793[#5793] (issue: {issue}5792[#5792])

Stats::
* Remove network stats & info {pull}12054[#12054]
* Update fs stats {pull}12053[#12053]
* Update OS stats {pull}12049[#12049]
* Update process stats {pull}12043[#12043]
* Remove sigar completely {pull}12010[#12010]
* Replacing sigar {pull}11995[#11995] (issue: {issue}11034[#11034])
* Removed `id_cache` from stats and cat apis. {pull}11183[#11183] (issue: {issue}5269[#5269])
* Cleanup JVM info and stats {pull}10553[#10553]
* Add human readable `start_time` and `refresh_interval` {pull}5544[#5544] (issue: {issue}5280[#5280])
* Migrating NodesInfo API to use plugins instead of singular plugin {pull}5072[#5072]

Store::
* Simplify IndexStore and friends {pull}10773[#10773]
* Remove `memory`/ `ram` store {pull}8536[#8536]
* Remove the in memory buffer Lucene store/directory [ISSUE] {pull}4994[#4994]

Term Vectors::
* More consistent naming for term vector[s] {pull}8484[#8484]


[[deprecation-2.0.0-beta1]]
[float]
=== Deprecations

Fielddata::
* Remove non-default fielddata formats. {pull}11669[#11669]

Geo::
* Deprecate `validate_*` and `normalize_*` {pull}10248[#10248] (issue: {issue}10170[#10170])

NOT CLASSIFIED::
* Deprecate rivers {pull}10503[#10503]
* Warning in documentation for deprecation of rivers {pull}10423[#10423] (issue: {issue}10345[#10345])

Settings::
* Remove `index.fail_on_merge_failure` {pull}10088[#10088] (issue: {issue}10084[#10084])
* Remove dangling indices settings, always import it {pull}10016[#10016]


[[feature-2.0.0-beta1]]
[float]
=== New features

Aggregations::
* Add HDRHistogram as an option in percentiles and percentile_ranks aggregations {pull}12362[#12362] (issue: {issue}8324[#8324])
* Aggregations: Adds other bucket to filters aggregation {pull}11948[#11948] (issue: {issue}11289[#11289])
* Aggregations: Pipeline Aggregation to filter buckets based on a script {pull}11941[#11941]
* Adds cumulative sum aggregation {pull}11825[#11825]
* Allow users to perform simple arithmetic operations on histogram aggregations {pull}11601[#11601] (issue: {issue}11029[#11029])
* Aggregations: add serial differencing pipeline aggregation {pull}11196[#11196] (issue: {issue}10190[#10190])
* Add Holt-Winters to moving_avg aggregation {pull}11043[#11043]
* Make it possible to configure missing values. {pull}11042[#11042] (issue: {issue}5324[#5324])
* Adding Sum Bucket Aggregation {pull}11013[#11013] (issue: {issue}11007[#11007])
* Adding Average Bucket Aggregation {pull}11010[#11010] (issue: {issue}11006[#11006])
* min_bucket aggregation {pull}10900[#10900] (issue: {issue}9999[#9999])
* Pipeline aggregations: Ability to perform computations on aggregations {pull}10568[#10568] (issues: {issue}10000[#10000], {issue}10002[#10002], {issue}9293[#9293], {issue}9876[#9876])
* Sampler aggregation  {pull}10221[#10221] (issue: {issue}8108[#8108])
* `PercentageScore` heuristic for significant_terms {pull}9747[#9747] (issue: {issue}9720[#9720])
* Return the sum of the doc counts of other buckets in terms aggregations. {pull}8213[#8213]
* Significant terms: add scriptable significance heuristic {pull}7850[#7850]
* Scriptable Metrics Aggregation {pull}7075[#7075] (issue: {issue}5923[#5923])
* Added pre and post offset to histogram aggregation {pull}6980[#6980] (issue: {issue}6605[#6605])
* Added Filters aggregation {pull}6974[#6974] (issues: {issue}6118[#6118], {issue}6119[#6119])
* Add children aggregation {pull}6936[#6936]
* Significant Terms: Add google normalized distance and chi square  {pull}6858[#6858]
* Infrastructure for changing easily the significance terms heuristic {pull}6561[#6561]
* Added percentile rank aggregation {pull}6432[#6432] (issue: {issue}6386[#6386])
* Deferred aggregations prevent combinatorial explosion  {pull}6128[#6128]
* Support bounding box aggregation on geo_shape/geo_point data types. [ISSUE] {pull}5634[#5634]
* Add reverse nested aggregation  [ISSUE] {pull}5485[#5485]
* Cardinality aggregation [ISSUE] {pull}5426[#5426]
* Percentiles aggregation [ISSUE] {pull}5323[#5323]
* Significant_terms aggregation  {pull}5146[#5146]
* Add preserve original token option to ASCIIFolding {pull}5115[#5115] (issue: {issue}4931[#4931])
* Add script support to value_count aggregations. {pull}5007[#5007] (issue: {issue}5001[#5001])

Allocation::
* Cancel replica recovery on another sync option copy found {pull}12421[#12421]
* Optional Delayed Allocation on Node leave {pull}11712[#11712]

Analysis::
* Add `keep_types` for filtering by token type {pull}7120[#7120]
* Add uppercase token filter {pull}5539[#5539]

CAT API::
* Add _cat/nodeattrs API {pull}12534[#12534] (issue: {issue}8000[#8000])
* Add wildcard support for header names {pull}11367[#11367] (issue: {issue}10811[#10811])
* Show open and closed indices in _cat/indices {pull}7936[#7936] (issue: {issue}7907[#7907])
* Add /_cat/fielddata to display fielddata usage {pull}6086[#6086] (issue: {issue}4593[#4593])
* Add _cat/plugins endpoint [ISSUE] {pull}4824[#4824]
* Add _cat/segments [ISSUE] {pull}4711[#4711]

CRUD::
* Update API: Add support for scripted upserts. {pull}7144[#7144]
* Update API - allow scripted upserts [ISSUE] {pull}7143[#7143]
* Update API: Detect noop updates when using doc {pull}6862[#6862] (issue: {issue}6822[#6822])
* Introducing VersionType.FORCE & VersionType.EXTERNAL_GTE {pull}4993[#4993] (issues: {issue}2946[#2946], {issue}4213[#4213])

Cache::
* Query Cache: Support shard level query response caching {pull}7161[#7161]

Circuit Breakers::
* Allow setting individual breakers to "noop" breakers {pull}8135[#8135]
* Add NoopCircuitBreaker used in NoneCircuitBreakerService {pull}8063[#8063]

Core::
* Expose auto-IO-throttle from Lucene's ConcurrentMergeScheduler {pull}9243[#9243] (issue: {issue}9133[#9133])
* Switch auto-generated IDs to Flake IDs from random UUIDs {pull}7531[#7531] (issues: {issue}5941[#5941], {issue}6004[#6004])

Dates::
* Added epoch date formats to configure parsing of unix dates {pull}11453[#11453] (issues: {issue}10971[#10971], {issue}5328[#5328])

Index APIs::
* Add date math support in index names {pull}12209[#12209] (issue: {issue}12059[#12059])
* Added GET Index API {pull}7234[#7234] (issue: {issue}4069[#4069])
* Force single-segment merges [ISSUE] {pull}5243[#5243]
* Create index to support aliases [ISSUE] {pull}4920[#4920]
* Add Recovery API. {pull}4802[#4802] (issue: {issue}4637[#4637])

Index Templates::
* Made template filtering generic and extensible {pull}7454[#7454] (issue: {issue}7459[#7459])
* Added support for aliases to index templates {pull}5180[#5180] (issues: {issue}1825[#1825], {issue}2739[#2739])

Indexed Scripts/Templates::
* Allow search templates stored in an index to be retrieved and used at search time {pull}5921[#5921] (issues: {issue}5484[#5484], {issue}5637[#5637])

Internal::
* Added an option to add arbitrary headers to the client requests {pull}7127[#7127]

Java API::
* Improved Suggest Client API {pull}7507[#7507] (issue: {issue}7435[#7435])

Logging::
* Infra for deprecation logging {pull}11285[#11285] (issue: {issue}11033[#11033])
* Infra for deprecation logging {pull}11033[#11033]
* Add ability to specify a SizeBasedTriggeringPolicy for log configuration {pull}10373[#10373] (issue: {issue}10371[#10371])

Mapping::
* Bring back `numeric_resolution` {pull}10420[#10420] (issue: {issue}10072[#10072])
* Add new `default` option for timestamp field {pull}7036[#7036] (issue: {issue}4718[#4718])
* Add transform to document before index. {pull}6599[#6599] (issue: {issue}6566[#6566])
* Add doc values for binary field {pull}5669[#5669]

More Like This::
* Add an `unlike` parameter {pull}8674[#8674]
* Support for artificial documents in MLT query {pull}7725[#7725]

Percolator::
* Enable percolation of nested documents {pull}5082[#5082]

Plugin Delete By Query::
* Add delete-by-query plugin {pull}11516[#11516]

Plugins::
* add list parse methods to XContentParser {pull}10455[#10455]
* Migration advisory plugin  [ISSUE] {pull}10214[#10214]

Query DSL::
* Query DSL: Add `filter` clauses to `bool` queries. {pull}11142[#11142]
* Add span within/containing queries. {pull}10913[#10913]
* Add time_zone setting for query_string {pull}8164[#8164] (issue: {issue}7880[#7880])
* Add `format` support for date range filter and queries {pull}7821[#7821] (issue: {issue}7189[#7189])
* Add `min_score` parameter to function score query to only match docs above this threshold {pull}7814[#7814] (issue: {issue}6952[#6952])
* Function score multi values {pull}5940[#5940] (issue: {issue}3960[#3960])
* Add the `field_value_factor` function to the function_score query {pull}5519[#5519]
* Added `cross_fields` type to multi_match query {pull}5005[#5005] (issue: {issue}2959[#2959])
* Allow for executing queries based on pre-defined templates [ISSUE] {pull}4879[#4879]

REST::
* API: Add response filtering with `filter_path` parameter {pull}10980[#10980] (issue: {issue}7401[#7401])
* Render REST errors in a structural way {pull}10643[#10643] (issue: {issue}3303[#3303])
* Add CBOR data format support {pull}5509[#5509] (issue: {issue}4860[#4860])

Recovery::
* Add basic recovery prioritization to GatewayAllocator {pull}11975[#11975] (issue: {issue}11787[#11787])
* Move index sealing terminology to synced flush {pull}11336[#11336] (issues: {issue}10032[#10032], {issue}11179[#11179], {issue}11251[#11251])
* Seal indices for faster recovery  {pull}11179[#11179] (issue: {issue}10032[#10032])

Scripting::
* Add Multi-Valued Field Methods to Expressions {pull}11105[#11105]
* Add support for fine-grained settings {pull}10116[#10116] (issues: {issue}10274[#10274], {issue}6418[#6418])
* Add script engine for Lucene expressions {pull}6819[#6819] (issue: {issue}6818[#6818])
* Add Groovy as a scripting language, add groovy sandboxing {pull}6233[#6233]
* Add Groovy as a scripting language, switching default from Mvel -> Groovy {pull}6106[#6106]

Search::
* Validate API: provide more verbose explanation {pull}10147[#10147] (issues: {issue}1412[#1412], {issue}88247[#88247])
* Add inner hits to nested and parent/child queries {pull}8153[#8153] (issues: {issue}3022[#3022], {issue}3152[#3152])
* Sorting: Allow _geo_distance to handle many to many geo point distance {pull}7097[#7097] (issue: {issue}3926[#3926])
* Add search-exists API to check if any matching documents exist for a given query {pull}7026[#7026] (issue: {issue}6995[#6995])
* Add an option to early terminate document collection when searching/counting {pull}6885[#6885] (issue: {issue}6876[#6876])
* Sequential rescores [ISSUE] {pull}4748[#4748]

Search Templates::
* Search Templates: Adds API endpoint to render search templates as a response {pull}11570[#11570] (issue: {issue}6821[#6821])

Settings::
* Add ability to prompt for selected settings on startup {pull}10918[#10918] (issue: {issue}10838[#10838])
* `bootstrap.mlockall` for Windows (VirtualLock) {pull}10887[#10887] (issues: {issue}8480[#8480], {issue}9186[#9186], {issue}9923[#9923])
* Add `checksum` option for `index.shard.check_on_startup` {pull}9183[#9183]

Shadow Replicas::
* Allow shards on shared filesystems to be recovered on any node {pull}10960[#10960] (issue: {issue}10932[#10932])
* Shadow replicas on shared filesystems {pull}9727[#9727] (issue: {issue}8976[#8976])

Stats::
* Add script compilation stats {pull}12733[#12733] (issue: {issue}12673[#12673])
* Add OS name to _nodes and _cluster/nodes {pull}11807[#11807]
* Add an API to locate unrecovered shards and their state {pull}11545[#11545] (issue: {issue}10952[#10952])
* Cluster Health: Add wait time for pending task and recovery percentage {pull}11393[#11393] (issue: {issue}10805[#10805])
* Add field stats api {pull}10523[#10523]

Store::
* Add index.data_path setting {pull}9033[#9033] (issues: {issue}8819[#8819], {issue}8976[#8976])
* Add `best_compression` option for indices {pull}8863[#8863]

Suggesters::
* Phrase Suggester: Add option to filter out phrase suggestions {pull}6773[#6773] (issue: {issue}3482[#3482])
* ContextSuggester {pull}4044[#4044] (issue: {issue}3959[#3959])

Term Vectors::
* Return term vectors as part of the search response {pull}10729[#10729] (issue: {issue}10823[#10823])
* Support terms filtering {pull}9561[#9561]

Top Hits::
* Add top_hits aggregation {pull}6124[#6124]

Upgrade API::
* Add API to upgrade old Lucene indices to the latest version {pull}7922[#7922] (issue: {issue}7884[#7884])


[[enhancement-2.0.0-beta1]]
[float]
=== Enhancements

Aggregations::
* Make ValueParser.DateMath aware of timezone setting {pull}12886[#12886] (issue: {issue}12278[#12278])
* Fix setting timezone on default DateTime formatter {pull}12581[#12581] (issue: {issue}12531[#12531])
* Aggregations: Add better validation of moving_avg model settings {pull}12280[#12280]
* Aggregations: Adds a new GapPolicy - NONE {pull}11951[#11951]
* Aggregations: Makes ValueFormat and ValueFormatter never null {pull}11943[#11943] (issue: {issue}10594[#10594])
* Add cost minimizer to tune `moving_avg` parameters {pull}11881[#11881]
* Aggregations: moving_avg model parser should accept any numeric {pull}11778[#11778] (issue: {issue}11487[#11487])
* Renaming reducers to Pipeline Aggregators {pull}11275[#11275]
* Improve `include`/`exclude` clause list speed and scalability {pull}11188[#11188] (issue: {issue}11176[#11176])
* Remove pointless term frequency lookups. {pull}11094[#11094] (issue: {issue}11093[#11093])
* Rename Moving Average models to their "common" names {pull}10964[#10964]
* Derivative Aggregation x-axis units normalisation {pull}10898[#10898]
* Added context for significant_terms scoring {pull}10633[#10633] (issue: {issue}10613[#10613])
* Removed aggregations from ReduceContext {pull}10509[#10509]
* Format bucket key_as_string in `date_histogram` according to `time_zone` {pull}9744[#9744] (issue: {issue}9710[#9710])
* Refactor aggregations to use lucene5-style collectors. {pull}9544[#9544] (issues: {issue}6477[#6477], {issue}9098[#9098])
* Add `offset` option to histogram aggregation {pull}9505[#9505] (issue: {issue}9417[#9417])
* Unify histogram implementations {pull}9446[#9446]
* Internal simplifications. {pull}9097[#9097]
* Numeric metric aggregations are now formattable {pull}9032[#9032] (issue: {issue}6812[#6812])
* Adds methods to get to/from as Strings for Range Aggs {pull}9026[#9026] (issue: {issue}9003[#9003])
* Made the `nested`, `reverse_nested` and `children` aggs ignore unmapped nested fields or unmapped child / parent types. {pull}8808[#8808] (issue: {issue}8760[#8760])
* Do not sort histogram buckets on shards. {pull}8797[#8797]
* Make `size` property parsing inconsistent {pull}8645[#8645] (issue: {issue}6061[#6061])
* Do not take deleted documents into account in aggregations filters. {pull}8540[#8540]
* Added getProperty method to Aggregations {pull}8421[#8421]
* Meta data support with each aggregation request/response {pull}8279[#8279] (issue: {issue}6465[#6465])
* Buckets can now be serialized outside of an Aggregation {pull}8113[#8113] (issue: {issue}8110[#8110])
* Support for arrays of numeric values in include/exclude clauses {pull}7727[#7727] (issue: {issue}7714[#7714])
* Add ability to sort on multiple criteria {pull}7662[#7662] (issues: {issue}6917[#6917], {issue}7588[#7588])
* Encapsulate AggregationBuilder name and make getter public {pull}7425[#7425]
* Merge LongTermsAggregator and DoubleTermsAggregator. {pull}7279[#7279]
* Remove the logic to optionally sort/dedup values on the fly. {pull}7276[#7276]
* Make the list of buckets for terms and histogram returned as a java.util.List. {pull}7275[#7275]
* Stops direct subclassing of InternalNumericMetricsAggregation {pull}7058[#7058]
* Better JSON output scoping {pull}6985[#6985] (issue: {issue}7004[#7004])
* Better heuristic for setting default `shard_size` in terms aggregation {pull}6960[#6960] (issue: {issue}6857[#6857])
* Added an option to show the upper bound of the error for the terms aggregation {pull}6778[#6778] (issue: {issue}6696[#6696])
* Extend allowed characters in aggregation name [ISSUE] {pull}6702[#6702]
* Moved BucketsAggregator#docCounts field to IntArray {pull}6529[#6529]
* GlobalOrdinalsStringTermsAggregator is inefficient for high-cardinality fields [ISSUE] {pull}6518[#6518]
* Remove `ordinals` execution hint. {pull}6499[#6499]
* Delegation of nextReader calls {pull}6477[#6477]
* Add `shard_min_doc_count` parameter to terms aggregation {pull}6143[#6143] (issues: {issue}5998[#5998], {issue}6041[#6041])
* Add `shard_min_doc_count` parameter for significant terms similar to `shard_size` {pull}6041[#6041]
* Add `include`/`exclude` support to global ordinals based terms and significant terms aggregations {pull}6000[#6000]
* Lower the initial sizing of sub aggregations. {pull}5994[#5994]
* Improve the way sub-aggregations are collected. {pull}5975[#5975]
* Add global ordinal based implementations for significant terms aggregation {pull}5970[#5970]
* Use collectExistingBucket() if a bucket already exists {pull}5955[#5955]
* Significant_terms agg: added option for a backgroundFilter  {pull}5944[#5944]
* Improve terms aggregation to perform the segment ordinal to global ordinal lookup post segment collection {pull}5895[#5895]
* Remove abstraction in the percentiles aggregation. {pull}5859[#5859]
* Instantiate facets/aggregations during the QUERY phase. {pull}5821[#5821]
* Aggregation cleanup {pull}5699[#5699]
* Aggregations cleanup {pull}5614[#5614]
* Refactor common code for unmapped aggregators into `NonCollectingAggregator`. {pull}5528[#5528]
* Significant_terms agg only creates term frequency cache when necessary  {pull}5459[#5459] (issue: {issue}5450[#5450])
* Added `extended_bounds` support for date_/histogram aggs {pull}5444[#5444] (issue: {issue}5224[#5224])
* Make aggregations CacheRecycler-free. {pull}5419[#5419] (issue: {issue}4929[#4929])
* Added support for sorting buckets based on sub aggregation down the current hierarchy {pull}5340[#5340] (issue: {issue}5253[#5253])
* Terms aggs: only use ordinals on low-cardinality fields by default. {pull}5304[#5304] (issue: {issue}5303[#5303])
* Rest API needs to be consistent across all multi-bucket aggs [ISSUE] {pull}4926[#4926]
* cleanup of aggregations api {pull}4894[#4894] (issue: {issue}4922[#4922])

Aliases::
* Don't require fields in alias filters to exist in the mapping {pull}12150[#12150]
* Parse aliases at search time and never cache parsed alias filters {pull}11930[#11930] (issue: {issue}10485[#10485])

Allocation::
* Add `expectedShardSize` to ShardRouting and use it in path.data allocation {pull}12947[#12947] (issue: {issue}11271[#11271])
* Make RoutingNodes read-only by default {pull}12690[#12690]
* Avoid extra reroutes of delayed shards in RoutingService {pull}12678[#12678] (issues: {issue}12456[#12456], {issue}12515[#12515], {issue}12532[#12532])
* Reroute shards when a node goes under disk watermarks {pull}12452[#12452] (issue: {issue}12422[#12422])
* No need to find replica copy when index is created {pull}12435[#12435]
* Adapt IndicesClusterStateService to use allocation ids {pull}12397[#12397] (issues: {issue}12242[#12242], {issue}12387[#12387])
* Simplify handling of ignored unassigned shards {pull}12339[#12339]
* Initial Refactor Gateway Allocator {pull}12335[#12335]
* Use recently added allocation ids for shard started/failed {pull}12299[#12299] (issue: {issue}12242[#12242])
* Unique allocation id {pull}12242[#12242]
* Allow shards to be allocated if leftover shard from different index exists {pull}12237[#12237] (issue: {issue}10677[#10677])
* Simplify assignToNode to only do initializing {pull}12235[#12235]
* Simplify ShardRouting and centralize move to unassigned {pull}11634[#11634]
* When using `recover_on_any_node` on shared filesystem, respect Deciders {pull}11168[#11168]
* Async fetch of shard started and store during allocation {pull}11101[#11101] (issue: {issue}9502[#9502])
* Verify shards index UUID when fetching started shards {pull}10200[#10200]
* Early terminate if the cluster can't be rebalanced {pull}9162[#9162]
* Speed-up disk-threshold decider {pull}8803[#8803] (issue: {issue}6372[#6372])
* DiskThresholdDecider#remain(...) should take shards relocating away into account {pull}8659[#8659] (issue: {issue}8538[#8538])
* Take percentage watermarks into account for reroute listener {pull}8382[#8382] (issues: {issue}8367[#8367], {issue}8368[#8368])
* Reroute shards automatically when high disk watermark is exceeded {pull}8270[#8270] (issue: {issue}8146[#8146])
* Add rebalance enabled allocation decider {pull}8190[#8190] (issue: {issue}7288[#7288])
* Add option to take currently relocating shards' sizes into account {pull}7785[#7785] (issues: {issue}6168[#6168], {issue}7753[#7753])
* Allow primaries that have never been allocated to be allocated if under the low watermark {pull}6209[#6209] (issue: {issue}6196[#6196])
* Add explanations for all AllocationDeciders {pull}4934[#4934] (issues: {issue}2483[#2483], {issue}4380[#4380])
* Make shard balancing deterministic if weights are identical {pull}4866[#4866]

Analysis::
* Document and test custom analyzer `position_offset_gap` {pull}10934[#10934] (issue: {issue}1812[#1812])
* Expose Latvian analyzer {pull}7542[#7542]
* Improve Hunspell error messages {pull}6850[#6850]
* Share numeric date analyzer instances between mappings {pull}6843[#6843]
* Add missing pre built analysis components {pull}6770[#6770]
* PatternAnalyzer should use PatternTokenFilter instead [ISSUE] {pull}6717[#6717]
* More resource efficient analysis wrapping usage {pull}6714[#6714]
* Add additional Analyzers, Tokenizers, and TokenFilters from Lucene {pull}6693[#6693] (issue: {issue}5935[#5935])
* Use non analyzed token stream optimization everywhere {pull}6001[#6001]
* Add support for char filters in the analyze API {pull}5148[#5148]

Bulk::
* Add support for retrieving fields in bulk updates {pull}12114[#12114] (issue: {issue}11527[#11527])

CAT API::
* Add scroll stats to cat API {pull}12331[#12331] (issue: {issue}12330[#12330])
* Add option to `_cat/indices` to return index creation date #11524 {pull}11688[#11688] (issue: {issue}11524[#11524])
* Add node id to _cat apis {pull}10246[#10246] (issue: {issue}10226[#10226])
* Mark shadow replicas with 's' in _cat/shards output {pull}10023[#10023] (issue: {issue}9772[#9772])
* Add total index memory in `_cat/indices` {pull}7824[#7824] (issue: {issue}7008[#7008])
* Add file descriptor details to cat/nodes {pull}7655[#7655] (issue: {issue}7652[#7652])
* Add configured thread pool sizes to _cat/thread_pool [ISSUE] {pull}5366[#5366]
* Added thread pool cat api {pull}4906[#4906] (issue: {issue}4907[#4907])
* RestTable.renderValue() doesn't know about tera and peta [ISSUE] {pull}4871[#4871]
* Clean up cat headers {pull}4853[#4853] (issue: {issue}4852[#4852])

CRUD::
* Allow GET access to _all field (return value was always null before) {pull}6924[#6924]
* Remove backward compatibility layer introduced in #6149 {pull}6229[#6229] (issue: {issue}6149[#6149])
* Provide more context variables in update scripts {pull}5724[#5724] (issues: {issue}1607[#1607], {issue}2230[#2230], {issue}2231[#2231])

Cache::
* Left over from the `query_cache` to `request_cache` rename {pull}12478[#12478]
* Rename caches. {pull}11893[#11893] (issue: {issue}11569[#11569])
* Give the filter cache a smaller maximum number of cached filters. {pull}11833[#11833]
* Remove the query parser cache. {pull}10856[#10856]
* Don't use the fixed bitset filter cache for child nested level filters, but the regular filter cache instead {pull}9740[#9740] (issue: {issue}8810[#8810])
* Use a smaller expected size when serializing query results {pull}9485[#9485]
* Use correct number of bytes in query cache accounting {pull}9479[#9479]
* Use a 1024 byte minimum weight for filter cache entries {pull}8304[#8304] (issues: {issue}8249[#8249], {issue}8268[#8268])
* Immediately remove filter cache entries on cache clear {pull}8289[#8289] (issue: {issue}8285[#8285])
* Add hit and miss count to Query Cache {pull}7355[#7355]
* Warmer (search) to support query cache {pull}7326[#7326]
* Add a request level flag to control Query Cache {pull}7167[#7167]
* Add a periodic cleanup thread for IndexFieldCache caches {pull}7015[#7015] (issue: {issue}7010[#7010])

Circuit Breakers::
* Add support for registering custom circuit breaker {pull}8795[#8795]
* Circuit Breakers: Log if CircuitBreaker is tripping {pull}8050[#8050]
* Include name of the field that caused a circuit break in the log and exception message {pull}5841[#5841] (issue: {issue}5718[#5718])
* Increase RamAccountingTermsEnum flush size from 1mb to 5mb {pull}5335[#5335]
* Add circuit breaker for parent/child id cache {pull}5325[#5325] (issue: {issue}5325[#5325])
* Add circuit breaker functionality to parent/child id field data cache [ISSUE] {pull}5276[#5276]

Cluster::
* Remove double call to elect primaries {pull}12147[#12147]
* Rename MetaData.uuid -> MetaData.clusterUUID and IndexMetaData.uuid-> IndexMetaData.indexUUID {pull}11914[#11914] (issue: {issue}11831[#11831])
* Add MetaData.uuid to ClusterState.toXContent {pull}11832[#11832]
* Remove scheduled routing {pull}11776[#11776]
* Reset registeredNextDelaySetting on reroute {pull}11759[#11759]
* Add Unassigned meta data {pull}11653[#11653]
* Remove deprecated METADATA cluster block level {pull}10779[#10779] (issue: {issue}9203[#9203])
* Make `routing_nodes` an independent metric option in cluster state api {pull}10412[#10412] (issue: {issue}10352[#10352])
* Add support for cluster state diffs {pull}10212[#10212]
* Add METADATA_READ and METADATA_WRITE blocks {pull}9203[#9203] (issues: {issue}10521[#10521], {issue}10522[#10522], {issue}2833[#2833], {issue}3703[#3703], {issue}5855[#5855], {issue}5876[#5876], {issue}8102[#8102])
* Don't mark cluster health as timed out if desired state is reached {pull}8683[#8683]
* Add missing cluster blocks handling for master operations {pull}7763[#7763] (issue: {issue}7740[#7740])
* Master election should demotes nodes which try to join the cluster for the first time {pull}7558[#7558] (issue: {issue}7493[#7493])
* Do not use a background thread to disconnect node which are removed from the ClusterState {pull}7543[#7543]
* Refactored ClusterStateUpdateTask protection against execution on a non master {pull}7511[#7511] (issue: {issue}7493[#7493])
* Remove unneeded cluster state serialization during cluster join {pull}6949[#6949]
* Resend failed shard messages when receiving a cluster state still referring to the failed shards {pull}6881[#6881]
* Send shard exists requests if shard exists locally but is not allocated to the node {pull}6870[#6870]
* Don't attempt to start or fail shard if no master node can be found {pull}6841[#6841]
* Improve handling of failed primary replica handling {pull}6825[#6825] (issue: {issue}6808[#6808])
* Add local node to cluster state {pull}6811[#6811]
* During relocation, process pending mapping update in phase 2 {pull}6762[#6762] (issue: {issue}6648[#6648])
* Improve pending api to include current executing class {pull}6744[#6744]
* Start Master|Node fault detection pinging immediately during discovery {pull}6706[#6706] (issue: {issue}6480[#6480])
* Clean shard bulk mapping update to only use type name {pull}6695[#6695]
* Ensure `index.version.created` is consistent {pull}6660[#6660]
* Refactored AckedClusterStateUpdateTask & co. to remove code repetitions in subclasses {pull}6559[#6559]
* Wait till node is part of cluster state for join process {pull}6480[#6480]
* Do not use versions to optimize cluster state copying for a first update from a new master {pull}6466[#6466]
* Improve cluster update settings api {pull}6244[#6244]
* When sending shard start/failed message due to a cluster state change, use the master indicated in the new state rather than current {pull}6189[#6189]
* Raise node disconnected even if the transport is stopped {pull}5918[#5918]
* Moved the updateMappingOnMaster logic into a single place. {pull}5850[#5850] (issue: {issue}5798[#5798])
* A new ClusterStateStatus to indicate cluster state life cycles {pull}5741[#5741]
* Optimize multiple cluster state processing on receiving nodes [ISSUE] {pull}5139[#5139]
* Introduced a new IMMEDIATE priority - higher than URGENT {pull}5098[#5098] (issue: {issue}5062[#5062])
* Bulk process of shard started/failed should not execute on already processed events [ISSUE] {pull}5061[#5061]

Core::
* Improve jvmcheck error failure {pull}12696[#12696]
* Use explict flag if index should be created on engine creation {pull}12671[#12671]
* Move Streams.copyTo(String|Bytes)FromClasspath() into StreamsUtils {pull}12598[#12598]
* Improve toString on EsThreadPoolExecutor {pull}12535[#12535] (issue: {issue}9732[#9732])
* Carry over shard exception failure to master node {pull}12263[#12263]
* Allow IBM J9 2.8+ in version check {pull}11850[#11850]
* Use System.nanoTime for ThreadPool's estimated time, since it's less likely to go backwards {pull}11626[#11626]
* Cleanup MergeScheduler infrastrucutre {pull}11602[#11602]
* Reduce shard inactivity timeout to 5m {pull}11479[#11479] (issues: {issue}11179[#11179], {issue}11336[#11336])
* Fail shard if search execution uncovers corruption {pull}11440[#11440] (issue: {issue}11419[#11419])
* Acquire IndexWriter's `write.lock` lock before shard deletion {pull}11127[#11127] (issue: {issue}11097[#11097])
* Ban PathUtils.get (for now, until we fix the two remaining issues) {pull}11069[#11069] (issues: {issue}11065[#11065], {issue}11068[#11068])
* Refactor SSD/FileStore logic out of NodeEnvironment {pull}10755[#10755] (issue: {issue}10717[#10717])
* Refactor TransportShardReplicationOperationAction {pull}10749[#10749] (issue: {issue}10032[#10032])
* Make getFileStore a bit more defensive {pull}10696[#10696]
* Ref count write operations on IndexShard {pull}10610[#10610]
* Rename START phase into VERIFY_INDEX {pull}10570[#10570]
* Refresh if many deletes in a row use up too much version map RAM {pull}10312[#10312] (issue: {issue}7052[#7052])
* Add before/afterIndexShardDelete callbacks to index lifecycle {pull}10173[#10173]
* Move GatewayShardsState logic into IndexShard {pull}10093[#10093]
* Don't rethrow already handled merge exceptions {pull}10083[#10083]
* NodeEnv should lock all shards for an index {pull}9799[#9799]
* Retry if shard deletes fail due to IOExceptions {pull}9784[#9784]
* Only do a single listAll from FileSwitchDir {pull}9666[#9666] (issue: {issue}6636[#6636])
* Consolidate index / shard deletion in IndicesService {pull}9605[#9605]
* Increase default xlog flush size from 200mb to 512 mb {pull}9341[#9341] (issue: {issue}9265[#9265])
* Pass through all exceptions in IndicesLifecycleListeners {pull}9330[#9330]
* Pass index settings to IndicesLifecycle#beforeIndexCreated and #afterIndexShardClosed {pull}9245[#9245]
* Delete shard content under lock {pull}9083[#9083] (issues: {issue}8608[#8608], {issue}9009[#9009])
* Remove IndexEngine {pull}8955[#8955]
* Remove Gateway abstraction {pull}8954[#8954]
* Use Lucene's defaults for compound file format {pull}8934[#8934] (issue: {issue}8919[#8919])
* Remove explicit .cleanUp() on cache clear {pull}8924[#8924]
* Cleanup LocalGatewayShardsState {pull}8852[#8852]
* Let Lucene kick off merges normally {pull}8643[#8643]
* Cut over MetaDataStateFormat to Path API in Gateway {pull}8609[#8609]
* Ensure shards are deleted under lock on close {pull}8579[#8579]
* Add before/after indexDeleted callbacks to IndicesLifecycle {pull}8569[#8569] (issue: {issue}8551[#8551])
* Free pending search contexts if index is closed {pull}8551[#8551]
* Ban all usage of Future#cancel(true) {pull}8494[#8494]
* Set bloom default to false even when Directory doesn't have a codecService {pull}8442[#8442]
* Introduce shard level locks to prevent concurrent shard modifications {pull}8436[#8436]
* Observe cluster state on health request {pull}8350[#8350]
* Remove usage of Directory#fileExists {pull}8233[#8233]
* Introduce a RefCounted interface and basic impl {pull}8210[#8210]
* Use 1 instead of 0 as filler version value for nested docs {pull}8145[#8145]
* Add cluster and index state checksums {pull}8010[#8010] (issue: {issue}7586[#7586])
* Resiliency: Perform write consistency check just before writing on the primary shard {pull}7873[#7873]
* Add ActionRunnable support to ThreadPool to simplify async operation on bounded threadpools {pull}7765[#7765]
* Change the default cache filter impl from FixedBitSet to WAH8DocIdSet {pull}7577[#7577] (issues: {issue}6280[#6280], {issue}7037[#7037])
* Verify checksums on merge {pull}7360[#7360]
* Change numeric data types to use SORTED_NUMERIC docvalues type {pull}6967[#6967]
* Disable loading of bloom filters by default {pull}6959[#6959] (issues: {issue}6298[#6298], {issue}6349[#6349])
* Don't close/reopen IndexWriter when changing RAM buffer size {pull}6856[#6856]
* Don't acquire dirtyLock on autoid for create {pull}6584[#6584]
* Reuse Lucene's TermsEnum for faster _uid/version lookup during indexing {pull}6298[#6298] (issue: {issue}6212[#6212])
* Entirely cut over to TopDocs#merge for merging shard docs in the reduce phase  {pull}6197[#6197]
* Don't use AllTokenStream if no fields were boosted [ISSUE] {pull}6187[#6187]
* Remove SerialMergeScheduler [ISSUE] {pull}6120[#6120]
* Throttling incoming indexing when Lucene merges fall behind [ISSUE] {pull}6066[#6066]
* Use Lucene built-in checksumming  [ISSUE] {pull}5924[#5924]
* Don't lookup version for auto generated id and create {pull}5917[#5917]
* Use Lucene's defaults for CMS settings {pull}5912[#5912] (issue: {issue}5882[#5882])
* Change default merge throttling to 50MB / sec {pull}5902[#5902]
* Don't lookup version for auto generated id and create {pull}5785[#5785]
* Prevent fsync from creating 0-byte files {pull}5746[#5746]
* Move to use serial merge schedule by default {pull}5447[#5447]
* Force merges to not happen when indexing a doc / flush {pull}5319[#5319]
* Reuse pages more agressively in BigArrays. {pull}5300[#5300] (issue: {issue}5299[#5299])

Dates::
* Default date formats to use underscores via PUT {pull}12509[#12509] (issue: {issue}12429[#12429])
* Allow for backwards compatibility for unix timestamp in pre 2.x indices {pull}11515[#11515] (issue: {issue}10971[#10971])
* Allow for negative unix timestamps {pull}11482[#11482] (issues: {issue}11478[#11478], {issue}11692[#11692])
* More strict parsing of ISO dates {pull}6227[#6227] (issue: {issue}6158[#6158])

Discovery::
* Wait on incoming joins before electing local node as master {pull}12161[#12161]
* Don't join master nodes or accept join requests of old and too new nodes {pull}11972[#11972] (issue: {issue}11924[#11924])
* Prevent over allocation for multicast ping request {pull}10896[#10896]
* Unicast Ping should close temporary connections after returning ping results {pull}10849[#10849]
* Prevent stale master nodes from sharing dated cluster states to nodes that have moved to a different master node {pull}9632[#9632]
* Publishing timeout to log at WARN and indicate pending nodes {pull}9551[#9551]
* Concurrent node failures can cause unneeded cluster state publishing {pull}8933[#8933] (issue: {issue}8804[#8804])
* Client: Only fetch the node info during node sampling {pull}8685[#8685]
* Don't wait joinThread when stopping {pull}8359[#8359] (issue: {issue}8327[#8327])
* Improve handling of multicast binding exceptions {pull}8243[#8243] (issue: {issue}8225[#8225])
* Simplify discovery node initialization if version is unknown {pull}8055[#8055] (issue: {issue}8051[#8051])
* Remove MasterFaultDetection.Listener.notListedOnMaster {pull}7995[#7995]
* Only accept unicast pings once started {pull}7950[#7950]
* Add a finalize round to multicast pinging {pull}7924[#7924]
* During discovery, master fault detection should fall back to cluster state thread upon error {pull}7908[#7908] (issue: {issue}7834[#7834])
* Close ping handler's executor service properly {pull}7903[#7903]
* NodesFD: simplify concurrency control to fully rely on a single map {pull}7889[#7889]
* During discovery, remove any local state and use clusterService.state instead {pull}7834[#7834]
* Update ZenDiscovery fields via the cluster service update task. {pull}7790[#7790]
* Give a unique id to each ping response  {pull}7769[#7769]
* UnicastZenPing don't rename configure host name {pull}7747[#7747] (issue: {issue}7719[#7719])
* Node join requests should be handled at lower priority than master election {pull}7733[#7733]
* Not all master election related cluster state update task use Priority.IMMEDIATE {pull}7718[#7718]
* Accumulated improvements to ZenDiscovery {pull}7493[#7493] (issue: {issue}2488[#2488])
* UnicastZenPing should also ping last known discoNodes {pull}7336[#7336]
* With unicast discovery, only disconnect from temporary connected nodes {pull}6966[#6966]
* During discovery, verify connect when sending a rejoin cluster request {pull}6779[#6779]
* Have a dedicated join timeout that is higher than ping.timeout for join {pull}6342[#6342]
* Unicast discovery enhancement {pull}5508[#5508]

Engine::
* Pre sync flush cleanups {pull}11252[#11252]
* Remove flushNeeded in favor of IW#hasUncommittedChanges() {pull}11225[#11225]
* Remove the ability to flush without flushing the translog {pull}11193[#11193]
* Make SearchFactory static class in InternalEngine {pull}11154[#11154]
* Move back to single EngineConfig {pull}10586[#10586] (issue: {issue}10584[#10584])
* Remove reflection call to waitForMerges {pull}10102[#10102]
* Always fail engine on corruption {pull}10092[#10092]
* Move InternalEngine.segmentStats() into abstract Engine {pull}9728[#9728] (issue: {issue}9727[#9727])
* Move more methods into abstract Engine {pull}9717[#9717]
* Move as much as possible into abstract Engine {pull}9678[#9678]
* Factor out settings updates from Engine {pull}9625[#9625]
* Close Engine immediately if a tragic event strikes. {pull}9616[#9616] (issue: {issue}9517[#9517])
* Refactor InternalEngine into abstract Engine and classes {pull}9585[#9585]
* Remove FlushType and make resources final in InternalEngine {pull}9565[#9565]
* Remove dirty flag and force boolean for refresh {pull}9484[#9484]
* Simplify Engine construction and ref counting {pull}9211[#9211]
* Fold engine into IndexShard {pull}9181[#9181]
* Don't acquire Engine's readLock in segmentsStats {pull}8910[#8910] (issue: {issue}8905[#8905])
* Remove engine related command classes {pull}8900[#8900]
* Allow InternalEngine to be stopped and started {pull}8784[#8784] (issue: {issue}8720[#8720])
* Flush IndexWriter to disk  on close and shutdown {pull}7563[#7563]
* Ensure close is called under lock in the case of an engine failure {pull}5800[#5800]
* Fail the engine/shard when refresh failed {pull}5633[#5633]

Exceptions::
* Improve startup exceptions (especially file permissions etc) {pull}13050[#13050]
* Fix formatting of startup/configuration errors {pull}13029[#13029]
* Add serialization support for InterruptedException {pull}12981[#12981]
* Include stacktrace in rendered exceptions {pull}12260[#12260] (issue: {issue}12239[#12239])
* Render structured exceptions in mget / mpercolate {pull}12240[#12240]
* Add index name to the upgrade exception {pull}12213[#12213]
* Promote headers to first class citizens on exceptions {pull}12006[#12006]
* Parameterized exception messages {pull}11981[#11981]
* Carry on rest status if exceptions are not serializable {pull}11973[#11973]
* Render strucutred exception in multi search {pull}11849[#11849]
* Reduce the size of the XContent parsing exception {pull}11642[#11642]
* Remove ElasticsearchIAE and ElasticsearchISE {pull}10862[#10862] (issue: {issue}10794[#10794])
* Improve exception handling in transport local execution {pull}10554[#10554]
* Fix typo when primary is not available to index a document (UnavailableShardsException) {pull}10140[#10140]
* Change IndexPrimaryShardNotAllocatedException from 409 to 500 {pull}7987[#7987] (issue: {issue}7632[#7632])
* Nest original exception while creating NoShardAvailableActionException {pull}7757[#7757] (issue: {issue}7756[#7756])
* Improve exception from Store.failIfCorrupted {pull}7695[#7695] (issue: {issue}7596[#7596])
* Introduced a new elasticsearch exception family that can hold headers {pull}7269[#7269]
* Better message for invalid internal transport message format {pull}6916[#6916]
* Function Score: Add missing whitespace in error message when throwing exception {pull}6155[#6155]

Fielddata::
* Consult field info before fetching field data {pull}12403[#12403]
* Remove the dependecy on IndexFielddataService from MapperService. {pull}12371[#12371]
* Enable doc values by default, when appropriate {pull}10209[#10209] (issue: {issue}8312[#8312])
* Change threshold value of fielddata.filter.frequency.max/min {pull}9522[#9522] (issue: {issue}9327[#9327])
* Fielddata: Remove custom comparators and use Lucene's instead {pull}6981[#6981] (issue: {issue}5980[#5980])
* Switch fielddata to use Lucene doc values APIs. {pull}6908[#6908]
* Make BytesValues.WithOrdinals more similar to Lucene's SortedSetDocValues {pull}6524[#6524]
* Don't expose hashes in Fielddata anymore. {pull}6500[#6500]
* Add a dedicated field data type for the _index field mapper. {pull}6073[#6073] (issue: {issue}5848[#5848])
* Provide meaningful error message if field has no fielddata type {pull}5979[#5979] (issue: {issue}5930[#5930])
* Use segment ordinals as global ordinals if possible {pull}5873[#5873] (issue: {issue}5854[#5854])
* Make use of global ordinals in parent/child queries {pull}5846[#5846]
* Added a AppendingDeltaPackedLongBuffer-based storage format to single value field data {pull}5706[#5706]
* Remove AtomicFieldData.isValuesOrdered. {pull}5688[#5688]
* Add global ordinals {pull}5672[#5672]
* Moved the decision to load p/c fielddata eagerly to a better place. {pull}5569[#5569]

Geo::
* Update ShapeBuilder and GeoPolygonQueryParser to accept non-closed GeoJSON {pull}11161[#11161] (issue: {issue}11131[#11131])
* Remove local Lucene Spatial package {pull}10966[#10966]
* Add merge conflicts to GeoShapeFieldMapper {pull}10533[#10533] (issues: {issue}10513[#10513], {issue}10514[#10514])
* Coordinates can contain more than two elements (x,y) in GeoJSON parser. {pull}9542[#9542] (issue: {issue}9540[#9540])
* Revert "[GEO] Update GeoPolygonFilter to handle ambiguous polygons" {pull}9463[#9463] (issues: {issue}5968[#5968], {issue}9304[#9304], {issue}9339[#9339], {issue}9462[#9462])
* Update GeoPolygonFilter to handle polygons crossing the dateline {pull}9339[#9339] (issues: {issue}5968[#5968], {issue}8672[#8672], {issue}9304[#9304])
* GeoPolygonFilter not properly handling dateline and pole crossing {pull}9171[#9171] (issue: {issue}5968[#5968])
* Removing unnecessary orientation enumerators {pull}9036[#9036] (issues: {issue}8978[#8978], {issue}9035[#9035])
* Add optional left/right parameter to GeoJSON {pull}8978[#8978] (issue: {issue}8764[#8764])
* Feature/Fix for OGC compliant polygons failing with ambiguity {pull}8762[#8762] (issue: {issue}8672[#8672])
* Fixes BoundingBox across complete longitudinal range {pull}7340[#7340] (issue: {issue}5218[#5218])
* Adds support for GeoJSON GeometryCollection {pull}7123[#7123] (issue: {issue}2796[#2796])
* Added caching support to geohash_filter {pull}6478[#6478]
* Allow to parse lat/lon as strings and coerce them {pull}5626[#5626]
* Improve error detection in geo_filter parsing {pull}5371[#5371] (issue: {issue}5370[#5370])
* Improve geo distance accuracy [ISSUE] {pull}5192[#5192]
* Add support for distances in nautical miles {pull}5088[#5088] (issue: {issue}5085[#5085])

Highlighting::
* Highlighting: keep track of the original query only in HighlighterContext {pull}11317[#11317]
* Make the HighlightQuery class public {pull}6446[#6446]
* Highlight fields in request order {pull}6178[#6178] (issue: {issue}4649[#4649])

Index APIs::
* Show human readable Elasticsearch version that created index and date when index was created {pull}11509[#11509] (issue: {issue}11484[#11484])
* Add check to MetaData#concreteIndices to prevent NPE {pull}10342[#10342] (issue: {issue}10339[#10339])
* Set maximum index name length to 255 bytes {pull}8158[#8158] (issue: {issue}8079[#8079])
* Add `wait_if_ongoing` option to _flush requests {pull}6996[#6996]
* Unified MetaData#concreteIndices methods into a single method that accepts indices (or aliases) and indices options {pull}6169[#6169]
* Fix detection of unsupported fields with validate API {pull}5782[#5782] (issue: {issue}5685[#5685])

Index Templates::
* Provide template usage information on index creation {pull}8646[#8646] (issue: {issue}7421[#7421])
* Unified PUT/POST behaviour in relation to create parameter {pull}6429[#6429]

Indexed Scripts/Templates::
* Indexed scripts/templates: return response body when script is not found {pull}10396[#10396] (issue: {issue}7325[#7325])
* Make sure headers are handed over to internal requests and streamline versioning support {pull}7569[#7569]
* Use preference("_local") on get calls. {pull}7477[#7477]
* Indexed Scripts/Templates: Return error message on 404 {pull}7335[#7335] (issue: {issue}7325[#7325])

Inner Hits::
* Nested parent field should be resolved based on the parent inner hit definition {pull}9251[#9251] (issue: {issue}8153[#8153])
* Added another more compact syntax for inner hits. {pull}8770[#8770]

Internal::
* Cleanup bootstrap package. {pull}13053[#13053] (issue: {issue}13044[#13044])
* Drop commons-lang dependency {pull}12972[#12972]
* Flatten IndicesModule and add tests {pull}12921[#12921] (issue: {issue}12783[#12783])
* Flatten ClusterModule and add more tests {pull}12916[#12916] (issue: {issue}12783[#12783])
* Allow a plugin to supply its own query cache implementation {pull}12881[#12881]
* Remove Environment.resolveConfig {pull}12872[#12872]
* Remove ClassLoader from Settings {pull}12868[#12868]
* Transport: allow to de-serialize arbitrary objects given their name {pull}12571[#12571]
* Add RealtimeRequest marker interface to group realtime operations together {pull}12537[#12537]
* Forbid Files.isHidden. {pull}12484[#12484] (issue: {issue}12465[#12465])
* Remove unused QueryParseContext argument in MappedFieldType#rangeQuery() {pull}12417[#12417]
* Simplify Replica Allocator {pull}12401[#12401]
* Replace primaryPostAllocated flag and use UnassignedInfo {pull}12374[#12374]
* Add the ability to wrap an index searcher. {pull}12364[#12364]
* Cleanup TransportSingleShardAction and TransportInstanceSingleOperationAction {pull}12361[#12361]
* Remove TransportSingleCustomOperationAction in favour of TransportSingleShardAction {pull}12350[#12350]
* updated the elasticsearch versioning format {pull}12210[#12210]
* Cleanup the data structures used in MetaData class for alias and index lookups {pull}12202[#12202]
* Make 2.0.0.beta1-SNAPSHOT the current version. {pull}12151[#12151] (issue: {issue}12148[#12148])
* Remove mapper references from Engines {pull}12130[#12130]
* Cleanup ShardRoutingState uses and hide implementation details of ClusterInfo {pull}12126[#12126]
* Consolidate ShardRouting construction {pull}12125[#12125]
* Change JarHell to operate on Path instead of URL {pull}12109[#12109]
* Refactor MetaData to split off the concrete index name logic to a dedicated service {pull}12058[#12058]
* really ban exitVM with security policy {pull}11982[#11982]
* Cut over to writeable for TransportAddress {pull}11949[#11949]
* Internal: make sure ParseField is always used in combination with parse flags {pull}11859[#11859]
* Remove XContentParser.map[Ordered]AndClose(). {pull}11846[#11846]
* Remove reroute with no reassign {pull}11804[#11804]
* Use abstract runnable in scheduled ping {pull}11795[#11795]
* Mark store as corrupted instead of deleting state file on engine failure {pull}11769[#11769]
* Add DateTime ctors without timezone to forbidden APIs {pull}11743[#11743]
* Fold ShardGetService creation away from Guice  into IndexShard {pull}11606[#11606]
* Create ShardSuggestService/Metrics manually outside of guice {pull}11605[#11605]
* Minimize the usage of guava classes in interfaces, return types, arguments {pull}11501[#11501]
* Make CompressedXContent.equals fast again. {pull}11428[#11428] (issue: {issue}11247[#11247])
* Consolidate shard level modules without logic into IndexShardModule {pull}11416[#11416]
* Serialization: Remove old version checks {pull}11397[#11397]
* Catch UnsatisfiedLinkError on JNA load {pull}11385[#11385]
* Deduplicate field names returned by simpleMatchToFullName & simpleMatchToIndexNames in FieldMappersLookup {pull}11377[#11377] (issue: {issue}10916[#10916])
* Rename TransportShardReplicationOperationAction to TransportReplicationAction {pull}11332[#11332]
* Absorb ImmutableSettings into Settings {pull}11321[#11321] (issue: {issue}7633[#7633])
* Make some sec mgr / bootup classes package private and final. {pull}11312[#11312]
* Tighten up our compression framework. {pull}11279[#11279]
* Uid#createTypeUids to accept a collection of ids rather than a list {pull}11263[#11263]
* Remove need for generics in ContextAndHeaderHolder {pull}11222[#11222]
* Remove dependency on hppc:esoteric. {pull}11144[#11144]
* Improve path mgmt on init, better error messages, symlink support {pull}11106[#11106]
* Ensure JNA is fully loaded when its available, but don't fail its not {pull}10989[#10989]
* Transport: read/writeGenericValue to support BytesRef {pull}10878[#10878]
* Remove Preconditions class {pull}10873[#10873]
* Remove index/indices replication infra code {pull}10861[#10861]
* Wait forever (or one day) for indices to close {pull}10833[#10833] (issue: {issue}10680[#10680])
* Reduce code duplication in TransportIndexAction/TransportShardBulkAction. {pull}10819[#10819]
* Don't create a new BigArrays instance for every call of `withCircuitBreaking` {pull}10800[#10800] (issue: {issue}10798[#10798])
* Change BigArrays to not extend AbstractComponent {pull}10798[#10798]
* Use Tuple only as return value in Bootstrap {pull}10784[#10784]
* CommitStats doesn't need to allow for null values in commit user data {pull}10774[#10774] (issue: {issue}10687[#10687])
* Prevent injection of unannotated dynamic settings {pull}10763[#10763] (issue: {issue}10614[#10614])
* Refactor and cleanup transport request handling {pull}10730[#10730]
* Add `fairness` option to KeyedLock. {pull}10703[#10703]
* Cleanup local code transport execution {pull}10582[#10582]
* Make APIs work per-segment like Lucene's Collector. {pull}10389[#10389]
* Transport: shortcut local execution {pull}10350[#10350] (issue: {issue}10247[#10247])
* Fix string comparisons {pull}10204[#10204]
* Remove unsafe field in BytesStreamInput {pull}10157[#10157]
* Make assert less strict to ensure local node is not null {pull}10076[#10076]
* Use provided cluster state for indices service validations {pull}10014[#10014]
* Fix Java 8 _ variable warning {pull}10013[#10013]
* Stop passing default cluster name to cluster state read operations {pull}9888[#9888]
* Add missing @Override annotations. {pull}9832[#9832]
* Some more simple fs cleanups. {pull}9827[#9827]
* Fix errors reported by error-prone {pull}9817[#9817]
* Remove redundant fs metadata ops. {pull}9807[#9807]
* Removed 'Master' from names.txt {pull}9698[#9698] (issue: {issue}9687[#9687])
* Remove XCollector. {pull}9677[#9677]
* Introduce TimedPrioritizedRunnable base class to all commands that go into InternalClusterService.updateTasksExecutor {pull}9671[#9671] (issues: {issue}8077[#8077], {issue}9354[#9354])
* Search: Reuse Lucene's MultiCollector. {pull}9549[#9549]
* Add `beforeIndexAddedToCluster` callback {pull}9514[#9514]
* Remove HandlesStreamInput/Output {pull}9486[#9486]
* Add AliasesRequest interface to mark requests that manage aliases {pull}9460[#9460]
* ClusterInfoService should wipe local cache upon unknown exceptions {pull}9449[#9449]
* Fix shard state tranport action names {pull}9440[#9440] (issue: {issue}7105[#7105])
* Minor hygiene, Removed Redundant inheritance {pull}9427[#9427]
* Clean up memory reuse a bit. {pull}9272[#9272]
* Remove includeExisting flag from adding ObjectMapper and FieldMapper listeners {pull}9184[#9184]
* Reduce the size of the search thread pool. {pull}9165[#9165] (issue: {issue}9135[#9135])
* Assert that we do not call blocking code from transport threads {pull}9164[#9164]
* Remove reduced stack size and use JVM default instead {pull}9158[#9158] (issue: {issue}9135[#9135])
* Remove IndexCloseListener & Store.OnCloseListener {pull}9009[#9009] (issues: {issue}8436[#8436], {issue}8608[#8608])
* Remove circular dependency between IndicesService and IndicesStore {pull}8918[#8918]
* Remove some Internal* abstractions {pull}8904[#8904]
* Remove action names bwc layer {pull}8758[#8758] (issue: {issue}7105[#7105])
* Add File.java to forbidden APIs {pull}8666[#8666]
* Inverse DocIdSets' heuristic to find out fast DocIdSets. {pull}8380[#8380]
* Temporarily ban buggy IOUtils methods with forbidden {pull}8375[#8375]
* Refactor shard recovery from anonymous class to ShardRecoveryHandler {pull}8363[#8363]
* Make indexQueryParserService available from ParseContext {pull}8252[#8252] (issue: {issue}8248[#8248])
* Allow to configure custom thread pools {pull}8247[#8247]
* Expose concurrency_level setting on all caches {pull}8112[#8112] (issue: {issue}7836[#7836])
* Resiliency: Be more conservative if index.version.created is not set {pull}8018[#8018]
* Split internal fetch request used within scroll and search {pull}7870[#7870] (issues: {issue}6933[#6933], {issue}7319[#7319], {issue}7856[#7856])
* Never send requests after transport service is stopped {pull}7862[#7862]
* Split internal free context request used after scroll and search {pull}7856[#7856] (issues: {issue}6933[#6933], {issue}7319[#7319])
* Clarify when a shard search request gets created to be only used locally {pull}7855[#7855]
* Add a listener thread pool {pull}7837[#7837]
* Remove unused ForceSyncDirectory {pull}7804[#7804]
* Force execution of delete index requests {pull}7799[#7799]
* Check if from + size don't cause overflow and fail with a better error {pull}7778[#7778] (issue: {issue}7774[#7774])
* Make sure that internally generated percolate request re-uses the original headers and request context {pull}7767[#7767]
* Make sure that update internal requests share the same original headers and request context {pull}7766[#7766]
* Make sure that all delete mapping internal requests share the same original headers and context {pull}7736[#7736]
* Added scrollId/s setters to the different scroll requests/responses {pull}7722[#7722]
* Make sure that original headers are used when executing search as part of put warmer {pull}7711[#7711]
* Refactor copy headers mechanism to not require a client factory {pull}7675[#7675] (issue: {issue}7594[#7594])
* In thread pools, use DirectExecutor instead of deprecated API {pull}7636[#7636]
* Change LZFCompressedStreamOutput to use buffer recycler when allocating encoder {pull}7613[#7613]
* Introduced a transient context to the rest request {pull}7610[#7610]
* Refactor copy headers mechanism in REST API {pull}7594[#7594] (issue: {issue}6513[#6513])
* Deduplicate useful headers that get copied from REST to transport layer {pull}7590[#7590]
* Remove DocSetCache. {pull}7582[#7582]
* Extract a common base class for (Master|Nodes)FaultDetection {pull}7512[#7512] (issue: {issue}7493[#7493])
* Removing useless methods and method parameters from ObjectMapper.java and TypeParsers.java {pull}7474[#7474] (issue: {issue}7271[#7271])
* Extended ActionFilter to also enable filtering the response side {pull}7465[#7465]
* Removed ConcurrentHashMapV8 {pull}7392[#7392] (issues: {issue}6400[#6400], {issue}7296[#7296])
* Move index templates api back to indices category and make put template and create index implement IndicesRequest {pull}7378[#7378]
* Make sure that multi_search request hands over its context and headers to its corresponding search requests {pull}7374[#7374]
* Make sure that multi_percolate request hands over its context and headers to its corresponding shard requests {pull}7371[#7371]
* Clarify XContentParser/Builder interface for binary vs. utf8 values {pull}7367[#7367]
* Remove CacheRecycler. {pull}7366[#7366]
* Get request while percolating existing documents to keep around headers and context of the original percolate request {pull}7333[#7333]
* Auto create index to keep around headers and context of the request that caused it {pull}7331[#7331]
* Switch to fixed thread pool by default for management threads {pull}7320[#7320] (issue: {issue}7318[#7318])
* Make sure that all shard level requests hold the original indices {pull}7319[#7319]
* Refactored TransportMessage context {pull}7303[#7303]
* Made it possible to disable the main transport handler in TransportShardSingleOperationAction {pull}7285[#7285]
* Adjusted BroadcastShardOperationResponse subclasses visibility {pull}7255[#7255]
* Add some @Nullable annotations and fix related compilation warnings. {pull}7251[#7251]
* Adjusted visibility for BroadcastShardOperationRequest subclasses and their constructors {pull}7235[#7235]
* Changed every single index operation to not replace the index within the original request {pull}7223[#7223]
* Adjusted TermVectorRequest serialization to not serialize and de-serialize the index twice {pull}7221[#7221]
* Refactored TransportSingleCustomOperationAction, subclasses and requests {pull}7214[#7214]
* Removed needless serialization code from TransportIndexReplicationAction and corresponding request object {pull}7211[#7211]
* Added transient header support for TransportMessage {pull}7187[#7187]
* Check for null references that may be returned due to concurrent changes or inconsistent cluster state {pull}7181[#7181]
* Better categorization for transport actions {pull}7105[#7105]
* Added a cli infrastructure {pull}7094[#7094]
* Introduced the notion of a FixedBitSetFilter that guarantees to produce a FixedBitSet {pull}7037[#7037] (issue: {issue}7031[#7031])
* Remove use of recycled set in filters eviction {pull}7012[#7012]
* Refactor TransportActions {pull}6989[#6989]
* Expose the indices names in every action relates to if applicable {pull}6933[#6933]
* Rename FieldMapper.termsFilter to fieldDataTermsFilter. {pull}6888[#6888]
* Make XContentBuilder Releasable {pull}6869[#6869]
* Remove (mostly) unused 'failure' member from ShardSearchFailure. {pull}6861[#6861] (issue: {issue}6837[#6837])
* Use KeyedLock in IndexFieldDataService {pull}6855[#6855]
* Cleanup of the transport request/response messages {pull}6834[#6834]
* Don't replace indices within ActionRequest and check blocks against concrete indices {pull}6777[#6777] (issues: {issue}1[#1], {issue}2[#2])
* Separate parsing implementation from setter in SearchParseElement {pull}6758[#6758] (issue: {issue}3602[#3602])
* Remove intern calls on FieldMapper#Names for better performance {pull}6747[#6747]
* Disable explicit GC by default {pull}6637[#6637]
* Make sure we don't reuse arrays when sending an error back {pull}6631[#6631]
* Wrap RateLimiter rather than copy RateLimitedIndexOutput {pull}6625[#6625]
* Re-shade MVEL as a dependency {pull}6570[#6570]
* Copy the headers from REST requests to the corresponding TransportRequest(s) {pull}6513[#6513] (issue: {issue}6464[#6464])
* Better default size for global index -> alias map {pull}6504[#6504]
* Use ConcurrentHashMapV8 for lower memory overhead {pull}6400[#6400]
* Made base64 decode parsing to detect more errors {pull}6348[#6348] (issue: {issue}6334[#6334])
* Change the default type of the page recycler to CONCURRENT instead of SOFT_CONCURRENT. {pull}6320[#6320]
* Some minor cleanups {pull}6210[#6210]
* Remove SoftReferences from StreamInput/StreamOutput {pull}6208[#6208]
* Use t-digest as a dependency. {pull}6142[#6142]
* Add support for Byte and BytesRef to the XContentBuilder {pull}6127[#6127]
* Remove unused dump infra {pull}6060[#6060]
* Made it mandatory to specify IndicesOptions when calling MetaData#concreteIndices {pull}6059[#6059]
* Limit the number of bytes that can be allocated to process requests. {pull}6050[#6050]
* Fix code typo in FieldSortBuilder.java {pull}5937[#5937]
* Improved bloom filter hashing {pull}5901[#5901]
* Field data diet. {pull}5874[#5874]
* Cleanup FileSystemUtils {pull}5806[#5806]
* Make writePrimitive*() and readPrimitive*() methods public. {pull}5710[#5710]
* LongHash add/key not consistent [ISSUE] {pull}5693[#5693]
* Releasable bytes output + use in transport / translog {pull}5691[#5691]
* Make Releasable extend AutoCloseable. {pull}5689[#5689]
* Replaces usage of `StringBuffer` with `StringBuilder` {pull}5606[#5606] (issue: {issue}5605[#5605])
* Internally manipulate the terms execution hint as an enum instead of a String. {pull}5530[#5530]
* Let ByteArray/BigByteArray.get() indicate whether a byte[] was materialized. {pull}5529[#5529]
* BytesReference.Helper should never materialize a byte[] array. {pull}5517[#5517]
* Clean the query parse context after usage {pull}5475[#5475]
* BytesReference usage to properly work when hasArray is not available {pull}5455[#5455]
* MulticastChannel returned wrong channel in shared mode {pull}5441[#5441]
* New class PagedBytesReference: BytesReference over pages {pull}5427[#5427] (issue: {issue}5420[#5420])
* Rewrite BytesStreamOutput on top of BigArrays/ByteArray. {pull}5331[#5331] (issue: {issue}5159[#5159])
* Add tracking of allocated arrays. {pull}5264[#5264]
* Remove thread local recycler {pull}5254[#5254]
* Recycler: better lifecycle control for pooled instances {pull}5217[#5217] (issue: {issue}5214[#5214])
* Remove useless URL instantiation {pull}5206[#5206]
* Variable renamings to reduce unnecessary variable naming diversity {pull}5075[#5075]
* Add RamUsageEstimator#sizeOf(Object) to forbidden APIs {pull}4975[#4975]
* Remove redundant version checks in transport serialisation {pull}4731[#4731]

Java API::
* PrefixQueryParser takes a String as value like its Builder {pull}12204[#12204] (issue: {issue}12032[#12032])
* Fix FuzzyQuery to properly handle Object, number, dates or String.  {pull}12020[#12020] (issue: {issue}11865[#11865])
* Treat path object as a simple value instead of Iterable in XContentBuilder {pull}11903[#11903] (issue: {issue}11771[#11771])
* IdsQueryBuilder: Allow to add a list in addition to array {pull}11409[#11409] (issue: {issue}5089[#5089])
* Fix typed parameters in IndexRequestBuilder and CreateIndexRequestBuilder {pull}11382[#11382] (issue: {issue}10825[#10825])
* Unify SearchResponse and BroadcastOperationResponse code around shards header {pull}11064[#11064]
* Remove duplicated buildAsBytes and corresponding toString methods {pull}11063[#11063]
* Remove duplicated consistency level and replication type setters {pull}10188[#10188]
* Package private getters to become public if there have corresponding public setters {pull}9273[#9273]
* Add internal liveness action to transport client {pull}8763[#8763]
* Added utility method {pull}8594[#8594]
* Enabled overriding the request headers in the clients {pull}8258[#8258]
* Adding setters or making them public in ActionRequests {pull}8123[#8123] (issue: {issue}8122[#8122])
* Add indices setter to IndicesRequest interface {pull}7734[#7734]
* Mark transport client as such when instantiating {pull}7552[#7552]
* Allow nullable queryBuilder in FilteredQueryBuilder to match rest api {pull}7398[#7398] (issue: {issue}7365[#7365])
* Some PercolateRequest "setters" allow for method chaining, some don't [ISSUE] {pull}7294[#7294]
* Throw IllegalStateException if you try to .addMapping for same type more than once {pull}7243[#7243] (issue: {issue}7231[#7231])
* XContentBuilder.map(Map) method modified to use a wildcard for value's type. {pull}7212[#7212]
* Add suggestRequest to Requests and fix broken javadocs in client {pull}7207[#7207] (issue: {issue}7206[#7206])
* Add index, type and id to ExplainResponse {pull}7201[#7201]
* Add a blocking variant of close() method to BulkProcessor {pull}6586[#6586] (issues: {issue}4158[#4158], {issue}6314[#6314])
* Client intermediate interfaces removal follow-up {pull}6563[#6563] (issue: {issue}6517[#6517])
* TransportClient: Improve logging, fix minor issue {pull}6376[#6376]
* `flush` method for BulkProcessor class. {pull}5575[#5575] (issue: {issue}5570[#5570])
* Add BoolFilterBuilder#hasClauses to be consitent with BoolQueryBuilder {pull}5476[#5476] (issue: {issue}5472[#5472])
* Allow iteration over MultiGetRequest#Item instances {pull}5470[#5470] (issue: {issue}3061[#3061])
* Java API does not have a way to set global highlighting settings [ISSUE] {pull}5281[#5281]

Logging::
* Adds a setting to control source output in indexing slowlog {pull}12806[#12806] (issue: {issue}4485[#4485])
* Add more debugging information to the Awareness Decider {pull}12490[#12490] (issue: {issue}12431[#12431])
* Add shadow indicator when using shadow replicas {pull}12399[#12399]
* Log warn message if leftover shard is detected {pull}11826[#11826]
* Add -XX:+PrintGCDateStamps when using GC Logs {pull}11735[#11735] (issue: {issue}11733[#11733])
* ClusterStateObserver should log on trace on timeout {pull}11722[#11722]
* Better error messages when mlockall fails {pull}11433[#11433]
* Display low disk watermark to be consistent with documentation {pull}11313[#11313] (issue: {issue}10588[#10588])
* Add logging for failed TTL purges {pull}11302[#11302] (issue: {issue}11019[#11019])
* Add index name to log statements when settings update fails {pull}11124[#11124]
* Add logging of slow cluster state tasks {pull}10907[#10907] (issue: {issue}10874[#10874])
* Logging: add the ability to specify an alternate logging configuration location {pull}10852[#10852] (issues: {issue}2044[#2044], {issue}7395[#7395])
* Log sending translog operation batches to nodes {pull}10544[#10544]
* Log only a summary line of filesystem detail for all path.data on node startup {pull}10527[#10527] (issue: {issue}10502[#10502])
* Add INFO logging saying whether each path.data is on an SSD {pull}10502[#10502]
* Use static logger name in Engine.java {pull}10497[#10497]
* Miscellaneous additional logging and cleanups {pull}10376[#10376]
* Fix logging a RoutingNode object, log an object with a good .toString instead {pull}9863[#9863]
* Logging: improve logging messages added in #9562 {pull}9603[#9603] (issue: {issue}9562[#9562])
* Change logging to warning to match pattern {pull}9593[#9593]
* Add logging around gateway shard allocation {pull}9562[#9562]
* Added a simple request tracer, logging incoming and outgoing Transport requests {pull}9286[#9286]
* Log when upgrade API starts and stops {pull}9229[#9229] (issue: {issue}9227[#9227])
* Reduce apache (cloud-aws) logging when rootLogger is DEBUG {pull}8856[#8856]
* Log byte and doc size for slow merges {pull}8855[#8855] (issue: {issue}8853[#8853])
* Separately log file deletions {pull}8662[#8662] (issue: {issue}8603[#8603])
* Clarify index removal log message {pull}8641[#8641]
* Add log4j-extras dependency {pull}8464[#8464] (issue: {issue}7927[#7927])
* Log how long IW.rollback took, and when MockFSDir starts its check index {pull}8388[#8388]
* Change log level for mpercolate {pull}8306[#8306]
* Suppress long mapping logging during mapping updates (unless in TRACE) {pull}7949[#7949]
* Add log4j-extras dependency {pull}7947[#7947] (issue: {issue}7927[#7927])
* Boostrap: Log startup exception to console if needed and to file as error {pull}6581[#6581]
* Log script change/add and removal at INFO level {pull}6104[#6104]
* Include thread name when logging IndexWriter's infoStream messages {pull}5973[#5973]
* Tie in IndexWriter's infoStream output to "lucene.iw" logger with level=TRACE {pull}5934[#5934] (issue: {issue}5891[#5891])
* Be less verbose logging ClusterInfoUpdateJob failures {pull}5222[#5222]
* Togglable stacktrace display {pull}5187[#5187] (issues: {issue}5102[#5102], {issue}5103[#5103])
* Add EnhancedPatternLayout to logging.yml options {pull}4991[#4991]

Mapping::
* Move the `_size` mapper to a plugin. {pull}12582[#12582]
* Remove index name from mapping parser {pull}12352[#12352]
* Remove AbstractFieldMapper {pull}12089[#12089]
* Completely move doc values and fielddata settings to field types {pull}12014[#12014]
* Move short name access out of field type {pull}11977[#11977]
* Rename "root" mappers to "metadata" mappers {pull}11962[#11962]
* Mappings: Remove close() from Mapper {pull}11863[#11863]
* Move merge simulation of fieldtype settings to fieldtype method {pull}11783[#11783] (issue: {issue}8871[#8871])
* Hide more fieldType access and cleanup null_value merging {pull}11770[#11770] (issue: {issue}11764[#11764])
* Replace fieldType access in mappers with getter {pull}11764[#11764]
* Remove SmartNameObjectMapper {pull}11686[#11686]
* Add equals/hashcode to fieldtypes {pull}11644[#11644]
* Shortcut `exists` and `missing` queries when no types/docs exist {pull}11586[#11586]
* Remove leftover sugar methods from FieldMapper {pull}11565[#11565]
* Make index level mapping apis use MappedFieldType {pull}11559[#11559]
* Move null value handling into MappedFieldType {pull}11544[#11544]
* Refactor core index/query time properties into FieldType {pull}11422[#11422] (issue: {issue}8871[#8871])
* Validate parsed document does not have trailing garbage that is invalid json {pull}11414[#11414] (issue: {issue}2315[#2315])
* Remove generics from FieldMapper {pull}11292[#11292]
* Cleanup field name handling {pull}11272[#11272]
* Remove document parse listener {pull}11243[#11243]
* Remove SmartNameFieldMappers {pull}11216[#11216]
* Make DocumentMapper.refreshSource() private. {pull}11209[#11209]
* Make mapping updates atomic wrt document parsing. {pull}11205[#11205]
* Remove the `ignore_conflicts` option. {pull}11203[#11203]
* Add back support for `enabled`/`includes`/`excludes` in `_source` field {pull}11171[#11171] (issue: {issue}11116[#11116])
* Make FieldNameAnalyzer less lenient. {pull}11141[#11141]
* Remove mapper listeners {pull}11045[#11045]
* Remove traverse functions from Mapper {pull}11027[#11027]
* Consolidate document parsing logic {pull}10802[#10802]
* Wait for required mappings to be available on the replica before indexing. {pull}10786[#10786]
* Join MergeResults with MergeContext since they are almost the same {pull}10765[#10765]
* Restrict murmur3 field type to sane options {pull}10738[#10738] (issue: {issue}10465[#10465])
* Simplify dynamic mappings updates. {pull}10720[#10720] (issue: {issue}10593[#10593])
* Simplified mapper lookups {pull}10705[#10705] (issue: {issue}8871[#8871])
* Remove dead code after previous refactorings {pull}10666[#10666] (issue: {issue}8877[#8877])
* Same code path for dynamic mappings updates and updates coming from the API. {pull}10593[#10593] (issues: {issue}8688[#8688], {issue}9364[#9364], {issue}9851[#9851])
* Add `enabled` flag for `_field_names` to replace disabling through `index:no` {pull}9893[#9893]
* Fix field mappers to always pass through index settings {pull}9780[#9780]
* Add `ignore_missing` option to `timestamp` {pull}9104[#9104] (issues: {issue}8882[#8882], {issue}9049[#9049])
* Include currentFieldName into ObjectMapper errors {pull}9020[#9020]
* Store `_timestamp` by default. {pull}8139[#8139]
* Better validation of mapping JSON {pull}7534[#7534] (issue: {issue}7205[#7205])
* Make lookup structures immutable. {pull}7486[#7486]
* Report conflict when merging `_all` field mapping and throw exception when doc_values specified {pull}7377[#7377] (issue: {issue}777[#777])
* Enforce non-null settings. {pull}7032[#7032]
* Control whether MapperService docMapper iterator should contain DEFAULT_MAPPING {pull}6793[#6793]
* Call callback on actual mapping processed {pull}6748[#6748]
* Improve performance for many new fields introduction in mapping {pull}6707[#6707]
* Better logic on sending mapping update new type introduction {pull}6669[#6669]
* Wait for mapping updates during local recovery {pull}6666[#6666]
* Check if root mapping is actually valid {pull}6093[#6093] (issues: {issue}4483[#4483], {issue}5864[#5864])
* Support empty properties array in mappings {pull}6006[#6006] (issue: {issue}5887[#5887])
* Update default precision step, modulo tests {pull}5908[#5908] (issue: {issue}5905[#5905])
* Add lucene LMSimilarity {pull}5701[#5701] (issue: {issue}5697[#5697])
* Support externalValue() in mappers {pull}4986[#4986]
* Norms disabling on existing fields [ISSUE] {pull}4813[#4813]

More Like This::
* Renamed `ignore_like` to `unlike` {pull}11117[#11117]
* Lenient default parameters {pull}9412[#9412]
* Remove MLT Field Query {pull}8238[#8238]
* Support for when all fields are deprecated {pull}8067[#8067]
* Add versatile 'like' parameter {pull}8039[#8039]
* Replace `percent_terms_to_match` with `minimum_should_match` {pull}7898[#7898]
* Default to all possible fields for items {pull}7382[#7382]
* Switch to using the multi-termvectors API {pull}7014[#7014]
* Fetch text from all possible fields if none are specified {pull}6740[#6740]
* Ensure selection of best terms is indeed O(n) {pull}6657[#6657]
* Create only one MLT query per field for all queried items {pull}6404[#6404]
* Add the ability to specify the analyzer used for each Field {pull}6329[#6329]
* Added syntax for single item specification. {pull}6311[#6311]
* Values of a multi-value fields are compared at the same level {pull}6310[#6310]
* Replaced `exclude` with `include` to avoid double negation {pull}6248[#6248]
* Allow for both `like_text` and `docs`/`ids` to be specified. {pull}6246[#6246]
* Added the ability to include the queried document for More Like This API. {pull}6067[#6067]
* Fix behavior on default boost factor for More Like This. {pull}6021[#6021]
* Added searching for multiple similar documents {pull}5857[#5857] (issue: {issue}4075[#4075])

NOT CLASSIFIED::
* Randomized testing version bump {pull}7138[#7138]
* Upgrade to Jackson 2.4.1.1 [ISSUE] {pull}6789[#6789]
* Upgrade to mvel 2.2.0.Final [ISSUE] {pull}5877[#5877]

Nested Docs::
* Add `min` score mode to `nested` query {pull}11909[#11909]
* Added nested scope to parse context that keeps track the current nested level during search request parsing {pull}9692[#9692] (issue: {issue}9305[#9305])
* Fix support for named filters/queries inside nested filters. {pull}6293[#6293]

Network::
* Don't print lots of noise on IPv4 only hosts. {pull}13026[#13026]
* Remove support for address resolving in InetSocketTransportAddress {pull}13020[#13020] (issue: {issue}13014[#13014])
* Log network configuration at debug level {pull}12979[#12979]
* Use preferIPv6Addresses for sort order, not preferIPv4Stack {pull}12951[#12951]
* Make sure messages are fully read even in case of EOS markers. {pull}11768[#11768] (issue: {issue}11748[#11748])
* Add profile name to TransportChannel {pull}11261[#11261] (issue: {issue}10483[#10483])
* Default value for socket reuse should not be null {pull}11255[#11255]
* Make Netty exceptionCaught method protected {pull}10464[#10464]
* Remove content thread safe from REST layer {pull}10429[#10429]
* Add getter for channel in NettyTransportChannel {pull}10319[#10319]
* Schedule transport ping interval {pull}10189[#10189]
* Return useful error message on potential HTTP connect to Transport port {pull}10108[#10108] (issue: {issue}2139[#2139])
* Change access modifiers to protected in Netty HTTP Transport {pull}9724[#9724]
* Add profiles to Netty transport infos {pull}9134[#9134]
* Support binding on multiple host/port pairs {pull}8098[#8098]
* Chunk direct buffer usage by networking layer {pull}7811[#7811]
* Make sure channel closing never happens on i/o thread {pull}7726[#7726]
* Support "default" for tcpNoDelay and tcpKeepAlive  {pull}7136[#7136] (issue: {issue}7115[#7115])
* Refactoring to make MessageChannelHandler extensible {pull}6915[#6915] (issue: {issue}6889[#6889])
* Refactoring to make Netty MessageChannelHandler extensible {pull}6889[#6889]
* Improve large bytes request handling by detecting content composite buffer {pull}6756[#6756]
* Use loopback when localhost is not resolved {pull}5719[#5719]

Packaging::
* Bats testing: Remove useless systemctl check {pull}12724[#12724] (issue: {issue}12682[#12682])
* improve sanity of securitymanager file permissions {pull}12609[#12609]
* Remove Core Lib directory {pull}12485[#12485] (issue: {issue}12010[#12010])
* Do not kill process on service shutdown {pull}12298[#12298] (issue: {issue}11248[#11248])
* Improve JVM Arch Detection {pull}12274[#12274] (issue: {issue}12256[#12256])
* fail plugins on version mismatch {pull}12221[#12221]
* Allow use of bouncycastle {pull}12102[#12102]
* Give a better exception when a jar contains same classfile twice. {pull}12093[#12093]
* Don't jarhell check system jars {pull}11979[#11979]
* detect jar hell before installing a plugin {pull}11963[#11963] (issue: {issue}11946[#11946])
* jar hell check should fail, if jars require higher java version {pull}11936[#11936]
* Fail startup (and tests) on jar hell {pull}11932[#11932] (issue: {issue}11926[#11926])
* Load plugins into classpath in bootstrap {pull}11918[#11918] (issue: {issue}11917[#11917])
* steps to remove dangerous security permissions {pull}11898[#11898]
* Packaging: Add LICENSE and NOTICE files for all core dependencies {pull}11705[#11705] (issues: {issue}10684[#10684], {issue}2794[#2794])
* Export hostname as environment variable for plugin manager {pull}11399[#11399] (issues: {issue}10902[#10902], {issue}9474[#9474])
* Use our provided JNA library, versus one installed on the system {pull}11163[#11163]
* Remove unnecessary permissions. {pull}11132[#11132]
* Tighten up script security more {pull}10999[#10999]
* Add pid file to Environment {pull}10986[#10986]
* Bail if ES is run as root {pull}10970[#10970]
* Remove exitVM permissions {pull}10963[#10963]
* Remove JNI permissions, improve JNI testing. {pull}10962[#10962]
* Remove shutdownHooks permission {pull}10953[#10953]
* Simplify securitymanager init {pull}10936[#10936]
* Exclude jackson-databind dependency {pull}10924[#10924]
* Remove reflection permission for sun.management. {pull}10848[#10848] (issue: {issue}10553[#10553])
* Security manager cleanups {pull}10844[#10844]
* Add common SystemD file for RPM/DEB package {pull}10725[#10725]
* Enable securitymanager {pull}10717[#10717]
* Remove working directory {pull}10672[#10672]
* Standardization of packages structure and install {pull}10595[#10595] (issue: {issue}10330[#10330])
* Add properties files to configure startup and installation scripts {pull}10330[#10330]
* Use direct mapping call in Kernel32Library {pull}9923[#9923] (issue: {issue}9802[#9802])
* service.bat file should explicitly use the Windows find command. {pull}9532[#9532]
* CliTool: Add command to warn on permission/owner change {pull}9508[#9508]
* Export the hostname as environment variable {pull}9474[#9474] (issue: {issue}8470[#8470])
* Windows: makes elasticsearch.bat more friendly to automated processes {pull}9160[#9160] (issue: {issue}8913[#8913])
* Shutdown: Add support for Ctrl-Close event on Windows platforms to grace... {pull}8993[#8993]
* Packaging: Add java7/8 java-package paths to init script {pull}8815[#8815] (issue: {issue}7383[#7383])
* Check if proc file exists before calling sysctl {pull}8793[#8793] (issue: {issue}4978[#4978])
* Factor out PID file creation and add tests {pull}8775[#8775] (issue: {issue}8771[#8771])
* deb: add systemd service config for upcoming Jessie {pull}8765[#8765] (issue: {issue}8493[#8493])
*  bin/elasticsearch: add help, fix endless loop {pull}8729[#8729] (issues: {issue}2168[#2168], {issue}7104[#7104])
* Allow configuration of the GC log file via an environment variable {pull}8479[#8479] (issues: {issue}8471[#8471], {issue}8479[#8479])
* Introduce elasticsearch.in.bat (i.e. es.in for Windows) {pull}8244[#8244] (issue: {issue}8237[#8237])
* Make .zip and .tar.gz release artifacts contain same files {pull}7578[#7578] (issue: {issue}2793[#2793])
* Add default oracle jdk 7 (x64) path to JDK_DIRS {pull}7132[#7132]
* Prevent init script from returning when the service isn't actually started {pull}6909[#6909]
* Windows: Modify command window title (windows) {pull}6752[#6752] (issue: {issue}6336[#6336])
* Remove java-6 directories from debian init script {pull}6350[#6350]
* Reset locale to C in bin/elasticsearch {pull}6047[#6047]
* Remove spaces from commented config lines in elasticsearch.yml and logging.yml [ISSUE] {pull}5842[#5842]
* Use the new command line syntax in the init script {pull}5033[#5033]
* Startup: Add ES_HOME to ES_INCLUDE search path {pull}4958[#4958]
* Mark 'lucene-expression' as 'provided' in pom.xml {pull}4861[#4861] (issues: {issue}4858[#4858], {issue}4859[#4859])
* Move systemd files from /etc to /usr/lib {pull}4029[#4029]

Parent/Child::
* Enforce _parent field resolution to be strict {pull}9521[#9521] (issue: {issue}9461[#9461])
* Reduce memory usage in top children query {pull}8165[#8165]
* Adding `min` score mode to parent-child queries {pull}7771[#7771] (issue: {issue}7603[#7603])
* Support `min_children` and `max_children` on `has_child` query/filter [ISSUE] {pull}6019[#6019]
* Fix P/C assertions for rewrite reader {pull}5731[#5731]
* Migrated p/c queries from id cache to field data. {pull}4878[#4878] (issue: {issue}4930[#4930])

Percolator::
* Don't cache percolator query on loading percolators {pull}12862[#12862]
* Change `percolator.getTime` -> `percolator.time` {pull}11954[#11954]
* The query parse context should be fetched from the IndexQueryParseService {pull}11929[#11929]
* Introduce index option named 'index.percolator.map_unmapped_fields_as_string' {pull}9054[#9054] (issues: {issue}9025[#9025], {issue}9053[#9053])
* Remove `index.percolator.allow_unmapped_fields` setting. {pull}8439[#8439]
* Percolator should cache index field data instances. {pull}7081[#7081] (issue: {issue}6806[#6806])
* Reuse IndexFieldData instances between percolator queries {pull}6845[#6845] (issue: {issue}6806[#6806])
* Add MemoryIndex reuse when percolating doc with nested type {pull}5332[#5332]

Plugin Cloud AWS::
* Don't show access_key and filter_key in S3 repository settings {pull}12845[#12845] (issues: {issue}11265[#11265], {issue}184[#184])
* Add support for base_path in elasticsearch.yml {pull}12761[#12761]
* Adding retry when checking s3 snapshot repository {pull}12498[#12498] (issue: {issue}12462[#12462])
* Upgrade AWS dependency to 1.10.0 {pull}11659[#11659]

Plugin Cloud GCE::
* Update to GCE API v1-rev71-1.20.0 [ISSUE] {pull}12835[#12835]

Plugins::
* Lucene SPI support for plugins. {pull}13051[#13051]
* Ensure additionalSettings() do not conflict {pull}12967[#12967]
* Validate checksums for plugins if available {pull}12888[#12888] (issue: {issue}12750[#12750])
* Expose zen ElectMasterService as a Discovery extension point {pull}12828[#12828]
* Introduce a formal ExtensionPoint class to stream line extensions {pull}12826[#12826]
* Flatten Allocation modules and add back ability to plugin ShardsAllocators {pull}12818[#12818] (issue: {issue}12781[#12781])
* Apply additional plugin settings only if settings are not explicit {pull}12796[#12796]
* PluginManager: Do not try other URLs if specific URL was passed {pull}12766[#12766]
* PluginManager: Fix elastic.co download URLs, add snapshot ones {pull}12641[#12641] (issue: {issue}12632[#12632])
* Fix plugin script to allow spaces in ES_HOME {pull}12610[#12610] (issue: {issue}12504[#12504])
* PluginManager: Add Support for basic auth {pull}12445[#12445]
* Ensure logging configuration is loaded in plugin manager {pull}12081[#12081] (issue: {issue}12064[#12064])
* Simplify Plugin Manager for official plugins {pull}11805[#11805]
* Allow security rule for advanced SSL configutation {pull}11751[#11751]
* Use of default CONF_DIR/CONF_FILE in plugin install {pull}10721[#10721] (issues: {issue}10673[#10673], {issue}7946[#7946])
* Always send current ES version when downloading plugins {pull}10131[#10131]
* FileSystemUtils: Only create backup copies if files differ {pull}9592[#9592]
* Add executable flag to every file in bin/ after install {pull}7177[#7177]
* Lucene version checker should use `Lucene.parseVersionLenient` {pull}7056[#7056]
* Introduced pluggable filter chain to be able to filter transport actions execution {pull}6921[#6921]
* Enables plugins to define default logging configuration for their needs. {pull}6805[#6805] (issue: {issue}6802[#6802])
* `bin/plugin` tests for missing plugin name when passing `--url` {pull}6013[#6013] (issues: {issue}5976[#5976], {issue}5977[#5977])
* Check plugin Lucene version {pull}4984[#4984]
* Serving _site plugins do not pick up on index.html for sub directories {pull}4850[#4850] (issue: {issue}4845[#4845])
* Add version to plugins {pull}4378[#4378] (issues: {issue}2668[#2668], {issue}2784[#2784])

Query DSL::
* Remove attemped (not working) support for array in not query parser {pull}12890[#12890]
* simple query string: remove (not working) support for alternate formats {pull}12798[#12798] (issue: {issue}12794[#12794])
* RegexpQueryParser takes a String as value like its Builder {pull}12200[#12200] (issue: {issue}11896[#11896])
* Expose Lucene's new TopTermsBlendedFreqScoringRewrite. {pull}12129[#12129]
* Default fuzzy transpositions to true {pull}12090[#12090] (issue: {issue}9278[#9278])
* Special case the `_index` field in queries {pull}12027[#12027] (issue: {issue}3316[#3316])
* Add support for query boost to SimpleQueryStringBuilder. {pull}11696[#11696] (issue: {issue}11274[#11274])
* Change geo filters into queries {pull}11137[#11137]
* Make the script filter a query. {pull}11126[#11126]
* Function score: Add `default` to `field_value_factor` {pull}10845[#10845] (issue: {issue}10841[#10841])
* Return positions of parse errors found in JSON {pull}10837[#10837] (issue: {issue}3303[#3303])
* Enable Lucene ranking behaviour for numeric term queries {pull}10790[#10790] (issue: {issue}10628[#10628])
* Add support for `minimum_should_match` to `simple_query_string` {pull}9864[#9864] (issue: {issue}6449[#6449])
* Raise an exception on an array of values being sent as the factor for a `field_value_factor` query {pull}9246[#9246] (issue: {issue}7408[#7408])
* function_score: use query and filter together {pull}8675[#8675] (issue: {issue}8638[#8638])
* Add option for analyzing wildcard/prefix to simple_query_strinq {pull}8422[#8422] (issue: {issue}787[#787])
* Expose `max_determinized_states` in regexp query, filter {pull}8384[#8384] (issue: {issue}8357[#8357])
* FunctionScore: RandomScoreFunction now accepts long, as well a strings. {pull}8311[#8311] (issue: {issue}8267[#8267])
* Be stricter parsing ids for ids query {pull}7945[#7945] (issue: {issue}7686[#7686])
* Function Score: Add optional weight parameter per function {pull}7137[#7137] (issue: {issue}6955[#6955])
* Add time zone setting for relative date math in range filter/query {pull}7113[#7113] (issue: {issue}3729[#3729])
* Add support for the `_name` parameter to the `simple_query_string` query {pull}6979[#6979]
* Function score parser should throw exception if both `functions:[]` and single `function` given {pull}5995[#5995]
* Refactor SimpleQueryParser settings into separate Settings class, add "lenient" option {pull}5208[#5208] (issue: {issue}5011[#5011])
* Throw parsing exception if terms filter or query has more than one field {pull}5137[#5137] (issue: {issue}5014[#5014])
* Add "locale" parameter to query_string and simple_query_string {pull}5131[#5131] (issue: {issue}5128[#5128])
* Add support for `lowercase_expanded_terms` flag to simple_query_string {pull}5126[#5126] (issue: {issue}5008[#5008])
* Add fuzzy/slop support to `simple_query_string` {pull}4985[#4985]
* Range filter no cache behaviour for `now` with rounding {pull}4955[#4955] (issues: {issue}4846[#4846], {issue}4947[#4947])
* Expose `dist`/`pre`/`post` options for SpanNotQuery {pull}4452[#4452]

REST::
* Suppress rest exceptions by default and log them instead {pull}12991[#12991]
* Create Snapshot: remove _create from POST path to match PUT {pull}11928[#11928] (issue: {issue}11897[#11897])
* Add `rewrite` query parameter to the `indices.validate_query` API spec {pull}11580[#11580] (issue: {issue}10147[#10147])
* Unify query_string parameters parsing {pull}11057[#11057]
* HttpServer: Support relative plugin paths {pull}10975[#10975] (issue: {issue}10958[#10958])
* Remove global `source` parameter from individual APIs in REST spec {pull}10863[#10863]
* Add more utilities for source/body handling in RestAction {pull}10724[#10724]
* Add option to only return simple exception messages {pull}10117[#10117]
* Better detection of CBOR {pull}10026[#10026] (issue: {issue}7640[#7640])
* Expose `master_timeout` flag on `GET _template` & `HEAD _template` {pull}9688[#9688]
* Add support for multi-index query parameters for `_cluster/state` {pull}9295[#9295] (issue: {issue}5229[#5229])
* Remove `indices_boost` URL param {pull}9244[#9244] (issue: {issue}6281[#6281])
* Support JSON request body in scroll, clear scroll, and analyze APIs {pull}9076[#9076] (issue: {issue}5866[#5866])
* Adds parameters to API endpoint cluster put settings specification {pull}8769[#8769]
* Added `_shards` header to all write responses. {pull}7994[#7994]
* Changed the root rest endpoint ('/') to use cluster service {pull}7933[#7933] (issue: {issue}7899[#7899])
* Add the cluster name to the "/" endpoint {pull}7524[#7524]
* A content decompressor that throws a human readable message when {pull}7241[#7241]
* Added missing percolate API parameters to the rest spec {pull}7173[#7173]
* Add REST API spec for /_search_shards endpoint {pull}5907[#5907]
* Rest layer refactoring phase 2 + recycling in http layer {pull}5708[#5708]
* Add `explain` flag support to the reroute API {pull}5027[#5027] (issues: {issue}2483[#2483], {issue}5169[#5169])
* Throw exception if an additional field was placed inside the "query" body {pull}4913[#4913] (issue: {issue}4895[#4895])
* REST API: Consistent get field mapping response {pull}4822[#4822] (issue: {issue}4738[#4738])
* Rest API: Ensure 503 signals ==  retry on another node [ISSUE] {pull}4066[#4066]

Recovery::
* Reduce cluster update reroutes with async fetch {pull}11421[#11421]
* Check if the index can be opened and is not corrupted on state listing {pull}11269[#11269] (issue: {issue}11226[#11226])
* No need to send mappings to the master node on phase 2. {pull}11207[#11207]
* Allow to recover into a folder containing a corrupted shard {pull}10558[#10558]
* Integrate translog recovery into Engine / InternalEngine {pull}10452[#10452]
* Only cancel recovery when primary completed relocation {pull}10218[#10218]
* Wipe shard state before switching recovered files live {pull}10179[#10179] (issue: {issue}10053[#10053])
* Engine: update index buffer size during recovery and allow configuring version map size {pull}10046[#10046] (issues: {issue}6363[#6363], {issue}6667[#6667])
* Unify RecoveryState management to IndexShard and clean up semantics {pull}9902[#9902] (issue: {issue}9503[#9503])
* Only iterate the files that we recovered from the commit {pull}9761[#9761]
* Add a timeout to local mapping change check {pull}9575[#9575]
* Node shut down during the last phase of recovery needlessly fails shard [ISSUE] {pull}9496[#9496]
* Flush immediately after a remote recovery finishes (unless there are ongoing ones) {pull}9439[#9439]
* Don't throttle recovery indexing operations {pull}9396[#9396] (issue: {issue}9394[#9394])
* Release store lock before blocking on mapping updates {pull}9102[#9102]
* Ensure shards are identical after recovery {pull}8723[#8723]
* Be more resilient to partial network partitions {pull}8720[#8720]
* Throw IndexShardClosedException if shard is closed {pull}8648[#8648]
* Allow to cancel recovery sources when shards are closed {pull}8555[#8555]
* Refactor RecoveryTarget state management {pull}8092[#8092] (issues: {issue}7315[#7315], {issue}7893[#7893])
* During recovery, mark last file chunk to fail fast if payload is truncated {pull}7830[#7830]
* Remove unneeded waits on recovery cancellation {pull}7717[#7717]
* Set a default of 5m to `recover_after_time` when any of the `expected*Nodes` is set {pull}6742[#6742]
* Add a best effort waiting for ongoing recoveries to cancel on close {pull}6741[#6741]
* Cancel recovery if shard on the target node closes during recovery operation {pull}6645[#6645]
* RecoveryID should not be a per JVM but per Node {pull}6207[#6207]
* Before deleting a local unused shard copy, verify we're connected to the node it's supposed to be on {pull}6191[#6191]
* Change default recovery throttling to 50MB / sec {pull}5913[#5913]
* Fail replica shards locally upon failures {pull}5847[#5847] (issue: {issue}5800[#5800])

Scripting::
* Allow scripts to expose whether they use the `_score`. {pull}12695[#12695]
* Add path.scripts directory {pull}12668[#12668]
* Simplify CacheKey used for scripts {pull}12092[#12092]
* Allow executable expression scripts for aggregations {pull}11689[#11689] (issue: {issue}11596[#11596])
* Unify script and template requests across codebase {pull}11164[#11164] (issues: {issue}10113[#10113], {issue}10810[#10810], {issue}11091[#11091])
* Minor TimeZone Fix {pull}10994[#10994]
* Run groovy scripts with no permissions {pull}10969[#10969]
* Add Field Methods {pull}10890[#10890]
* Remove groovy sandbox {pull}10480[#10480] (issue: {issue}10156[#10156])
* Allow plugins to define custom operations that they use scripts for {pull}10419[#10419] (issue: {issue}10347[#10347])
* Add String to the default whitelisted receivers {pull}9837[#9837] (issue: {issue}8866[#8866])
* Make `script.groovy.sandbox.method_blacklist_patch` truly append-only {pull}9473[#9473]
* Make groovy sandbox method blacklist dynamically additive {pull}9470[#9470]
* Add explicit error message when script_score script returns NaN {pull}8750[#8750] (issue: {issue}2426[#2426])
* Add explainable script again {pull}8665[#8665] (issues: {issue}7245[#7245], {issue}8561[#8561])
* Use groovy-x.y.z-indy jar for better scripting performance {pull}8183[#8183] (issue: {issue}8182[#8182])
* Add GroovyCollections to the sandbox whitelist {pull}7250[#7250] (issues: {issue}7088[#7088], {issue}7089[#7089])
* Make ScoreAccessor utility class publicly available for other script engines {pull}6898[#6898] (issue: {issue}6864[#6864])
* Remove setNextScore in SearchScript. {pull}6864[#6864]
* Add a transformer to translate constant BigDecimal to double {pull}6609[#6609]
* Add Groovy sandboxing for GString-based method invocation {pull}6596[#6596]
* Fix optional default script loading {pull}6582[#6582]
* Exposed _uid, _id and _type fields as stored fields (_fields notation) {pull}6406[#6406]

Search::
* Split SearchModule.configure() into separate methods {pull}12827[#12827]
* Only compute scores when necessary with FiltersFunctionScoreQuery. {pull}12707[#12707]
* Speed up the `function_score` query when scores are not needed. {pull}12693[#12693]
* Make fetch sub phases pluggable {pull}12400[#12400] (issue: {issue}10729[#10729])
* Add _replica and _replica_first as search preference. {pull}12244[#12244] (issue: {issue}12222[#12222])
* Add global search timeout setting {pull}12211[#12211] (issue: {issue}12149[#12149])
* Term Query: Be more strict during parsing {pull}12195[#12195] (issue: {issue}12184[#12184])
* Clean up handling of missing values when merging shard results on the coordinating node. {pull}12127[#12127] (issue: {issue}9155[#9155])
* Always return metadata in get/search APIs. {pull}11816[#11816] (issue: {issue}8068[#8068])
* Search `preference` based on node specification  {pull}11464[#11464] (issue: {issue}5925[#5925])
* Do not specialize TermQuery vs. TermsQuery. {pull}11308[#11308]
* Minor refactor of MultiValueMode removing apply and reduce {pull}11290[#11290]
* Make FilteredQuery a forbidden API. {pull}11224[#11224] (issue: {issue}6511[#6511])
* Count api to become a shortcut to the search api {pull}11198[#11198] (issues: {issue}9110[#9110], {issue}9117[#9117])
* Make SCAN faster. {pull}11180[#11180]
* Remove (dfs_)query_and_fetch from the REST API {pull}10864[#10864] (issue: {issue}9606[#9606])
* Cut over to IndexSearcher.count. {pull}10674[#10674]
* Single value numeric queries shouldn't be handled by NumericRangeQuery {pull}10648[#10648] (issue: {issue}10646[#10646])
* Query scoring change for single-value queries on numeric fields {pull}10631[#10631] (issue: {issue}10628[#10628])
* Remove unused normsField from MatchAllQuery {pull}10592[#10592]
* Replace deprecated filters with equivalent queries. {pull}10531[#10531] (issue: {issue}8960[#8960])
* Avoid calling DocIdSets.toSafeBits. {pull}9546[#9546]
* Merge `search_type=count` and `size=0`. {pull}9296[#9296] (issue: {issue}7630[#7630])
* Parse terms filters on a single term as a term filter. {pull}9014[#9014]
* Close active search contexts on SearchService#close() {pull}8947[#8947] (issue: {issue}8940[#8940])
* Surgically removed slow scroll {pull}8780[#8780]
* Filter cache: add a `_cache: auto` option and make it the default. {pull}8573[#8573] (issue: {issue}8449[#8449])
* Do not force the post-filter to be loaded into a BitSet. {pull}8488[#8488]
* Reduce memory usage during fetch source sub phase {pull}8138[#8138]
* Don't let `took` be negative. {pull}7968[#7968]
* Switch to Lucene QueryRescorer {pull}7707[#7707] (issue: {issue}6232[#6232])
* Use FixedBitSetFilterCache for delete-by-query {pull}7581[#7581] (issue: {issue}7037[#7037])
* Speed up string sort with custom missing value {pull}7005[#7005]
* Wrap filter only once in ApplyAcceptedDocsFilter {pull}6873[#6873]
* Remove Queries#optimizeQuery - already handled in BooleanQuery {pull}6743[#6743]
* Improve 404 on missing scroll id {pull}6063[#6063] (issue: {issue}6040[#6040])
* Return missing (404) if a scroll_id is cleared that no longer exists. {pull}5865[#5865] (issue: {issue}5730[#5730])
* Speed up `exists` and `missing` filters on high-cardinality fields [ISSUE] {pull}5659[#5659]
* Freq terms enum {pull}5597[#5597]
* Capture and set start time in Delete By Query operations {pull}5540[#5540]
* Add dedicated /_search/template endpoint for query templates {pull}5353[#5353]
* Add failures reason to delete by query response {pull}5095[#5095] (issue: {issue}5093[#5093])
* Use patched version of ReferenceManager to prevent infinite loop in ReferenceManager#acquire() {pull}5043[#5043]
* Improve scroll search by using IndexSearcher#searchAfter(...) {pull}4968[#4968] (issue: {issue}4940[#4940])

Settings::
*  Throw Exception for missing settings file {pull}12833[#12833] (issue: {issue}11510[#11510])
* Remove lenient store type parsing {pull}12735[#12735]
* Add `path.shared_data` {pull}12729[#12729] (issues: {issue}11065[#11065], {issue}12714[#12714])
* Add node setting to send SegmentInfos debug output to System.out {pull}11546[#11546]
* ResourceWatcher: Rename settings to prevent watcher clash {pull}11359[#11359] (issues: {issue}11033[#11033], {issue}11175[#11175])
* Die cwd die {pull}10923[#10923] (issue: {issue}10877[#10877])
* Remove `cluster.routing.allocation.balance.primary` {pull}9159[#9159]
* Add `http.publish_port` setting to the HTTP module {pull}8807[#8807] (issue: {issue}8137[#8137])
* Don't accept a dynamic update to `min_master_nodes` which is larger then current master node count {pull}8321[#8321]
* Validates bool values in yaml for node settings {pull}8186[#8186] (issue: {issue}8097[#8097])
* Security: Disable CORS by default {pull}7642[#7642] (issue: {issue}7151[#7151])
* Store index creation time in index metadata {pull}7218[#7218] (issue: {issue}7119[#7119])
* Make `cluster.routing.allocation.allow_rebalance` a dynamic setting {pull}7095[#7095] (issue: {issue}7092[#7092])
* Security: Allow to configure CORS allow-credentials header to work via SSL {pull}7059[#7059] (issue: {issue}6380[#6380])
* Allow `index.merge.scheduler.max_thread_count` to be dynamically changed {pull}6925[#6925] (issue: {issue}6882[#6882])
* Security: Support regular expressions for CORS allow-origin to match against {pull}6923[#6923] (issues: {issue}5601[#5601], {issue}6891[#6891])
* Added three frequency levels for resource watching {pull}6896[#6896]
* Added more utility methods to Settings {pull}6840[#6840]
* Improve Settings#get lookup for camel case support {pull}6765[#6765]
* Security: Make JSONP responses optional. {pull}6164[#6164]
* Allow to change concurrent merge scheduling setting dynamically {pull}6098[#6098]
* Trimmed the main `elasticsearch.yml` configuration file {pull}5861[#5861]
* Throw error when incorrect setting applied to `auto_expand_replicas` [ISSUE] {pull}5752[#5752]
* Add `getAsRatio` to Settings class, allow DiskThresholdDecider to take percentages {pull}5690[#5690]
* Corrected issue with throttle type setting not respected upon updates {pull}5392[#5392]
* Made possible to dynamically update `discovery.zen.publish_timeout` cluster setting {pull}5068[#5068] (issue: {issue}5063[#5063])

Shadow Replicas::
* Implement retries for ShadowEngine creation {pull}10688[#10688] (issue: {issue}10637[#10637])
* Allow relocating primary shards on shared filesystems without failing the shard [ISSUE] {pull}10469[#10469]
* Allow primary promotion on shadow replica without failing the shard {pull}9786[#9786]

Snapshot/Restore::
* Add support for bulk delete operation in snapshot repository {pull}12587[#12587] (issue: {issue}12533[#12533])
* Create a directory during repository verification {pull}12323[#12323] (issue: {issue}11611[#11611])
* Add validation of snapshot FileInfo during parsing {pull}12108[#12108]
* Add checksum to snapshot metadata files {pull}12002[#12002] (issue: {issue}11589[#11589])
* Snapshot info should contain version of elasticsearch that created the snapshot {pull}11985[#11985] (issue: {issue}11980[#11980])
* Extract all shard-level snapshot operation into dedicated SnapshotShardsService {pull}11756[#11756]
* Add snapshot name validation logic to all snapshot operations {pull}11617[#11617]
* Change metadata file format {pull}11507[#11507]
* Add support for applying setting filters when displaying repository settings {pull}11270[#11270] (issue: {issue}11265[#11265])
* Check that reading indices is allowed before creating their snapshots {pull}11133[#11133]
* Don't throw an exception if repositories are unregistered with `*` {pull}11113[#11113]
* Improve the error message when attempting to snapshot a closed index {pull}10608[#10608] (issue: {issue}10579[#10579])
* AbstractBlobContainer.deleteByPrefix() should not list all blobs {pull}10366[#10366] (issue: {issue}10344[#10344])
* Batching of snapshot state updates {pull}10295[#10295]
* Expand wildcards in snapshot {pull}9903[#9903] (issue: {issue}6097[#6097])
* Refactor how restore cleans up files after snapshot was restored {pull}9770[#9770]
* Add ability to retrieve currently running snapshots {pull}9400[#9400] (issues: {issue}7859[#7859], {issue}8782[#8782], {issue}8887[#8887])
* Add support for changing index settings during restore process {pull}9285[#9285] (issue: {issue}7887[#7887])
* Override write(byte[] b, int off, int len) in FilterOutputStream for better performance {pull}8749[#8749] (issue: {issue}8748[#8748])
* Allow custom metadata to specify whether or not it should be in a snapshot {pull}7901[#7901] (issue: {issue}7900[#7900])
* Add repository validation {pull}7680[#7680] (issue: {issue}7096[#7096])
* Write Snapshots directly to the blobstore stream {pull}7637[#7637]
* It should be possible to restore an index without restoring its aliases [ISSUE] {pull}6457[#6457]
* Snapshot/Restore: Add ability to restore partial snapshots {pull}6368[#6368] (issue: {issue}5742[#5742])
* Switch to shared thread pool for all snapshot repositories {pull}6182[#6182] (issue: {issue}6181[#6181])
* Improve speed of running snapshot cancelation {pull}5244[#5244] (issue: {issue}5242[#5242])
* Add ability to get snapshot status for running snapshots {pull}5123[#5123] (issue: {issue}4946[#4946])
* Add throttling to snaphost and restore operations {pull}4891[#4891] (issue: {issue}4855[#4855])

Stats::
* Refactor, remove _node/network and _node/stats/network.  {pull}12922[#12922] (issue: {issue}12889[#12889])
* Expose ClassloadingMXBean in Node Stats {pull}12764[#12764] (issue: {issue}12738[#12738])
* Count scans in search stats and add metrics for scrolls {pull}12069[#12069] (issue: {issue}9109[#9109])
* Field stats: added index_constraint option {pull}11259[#11259] (issue: {issue}11187[#11187])
* Add CommitStats to supply information about the current commit point {pull}10687[#10687]
* Add throttle stats to index stats and recovery stats {pull}10097[#10097]
* Recovery: add total operations to the `_recovery` API {pull}10042[#10042] (issue: {issue}9368[#9368])
* Add pending tasks count to cluster health {pull}9877[#9877]
* Hot threads should include timestamp and params {pull}9773[#9773]
* Added `verbose` option to segments api, with full ram tree as first additional element per segment {pull}9111[#9111]
* Add `ignore_idle_threads` (default: true) to hot threads {pull}8985[#8985] (issue: {issue}8908[#8908])
* Add more fine grained memory stats from Lucene segment reader to index stats {pull}8832[#8832]
* Add time in index throttle to index stats. {pull}7896[#7896] (issue: {issue}7861[#7861])
* Add `segments.index_writer_max_memory` to stats {pull}7440[#7440] (issues: {issue}6483[#6483], {issue}7438[#7438])
* Track the number of times the CircuitBreaker has been tripped {pull}6134[#6134] (issue: {issue}6130[#6130])
* Remove field names in stats url {pull}6054[#6054] (issue: {issue}5671[#5671])
* Add suggest stats {pull}5563[#5563] (issue: {issue}4032[#4032])
* Disable RAM usage estimation on Lucene 3.x segments. {pull}5202[#5202] (issue: {issue}5201[#5201])

Store::
* Fall back to reading SegmentInfos from Store if reading from commit fails {pull}11403[#11403] (issue: {issue}11361[#11361])
* Consolidate directory lock obtain code {pull}11390[#11390]
* Read segment info from latest commit whenever possible {pull}11361[#11361]
* Move to one data.path per shard {pull}10461[#10461] (issue: {issue}9498[#9498])
* Schedule pending delete if index store delete fails {pull}9856[#9856]
* Improve safety when deleting files from the store {pull}9801[#9801]
* Add simple cache for StoreStats {pull}9709[#9709] (issue: {issue}9683[#9683])
* Use Directory#fileLength() less during calculating checksums {pull}9689[#9689]
* Cache fileLength for fully written files {pull}9683[#9683]
* Populate metadata.writtenBy for pre 1.3 index files. {pull}9152[#9152]
* Expose ShardId via LeafReader rather than Directory API {pull}8812[#8812]
* Synchronize operations that modify file mappings on DistributorDirectory {pull}8408[#8408]
* Drop pre 0.90 compression BWC {pull}8385[#8385]
* Use DistributorDirectory only if there are more than one data direcotry {pull}8383[#8383]
* Cut over MetaDataStateFormat to NIO Path API {pull}8297[#8297]
* Remove special file handling from DistributorDirectory {pull}8276[#8276]
* Try to increment store before searcher is acquired {pull}7792[#7792]
* Fold two hashFile implemenation into one {pull}7720[#7720]
* Before deleting shard verify that another node holds an active shard instance {pull}6692[#6692]
* Make a hybrid directory default using `mmapfs` / `niofs` {pull}6636[#6636]

Suggesters::
* Remove filter from PhraseSuggester collate {pull}11195[#11195]
* Phrase Suggester Collate Enhancements {pull}10710[#10710] (issue: {issue}9377[#9377])
* Collate option in PhraseSuggester should allow returning phrases with no matching docs {pull}6929[#6929] (issue: {issue}6927[#6927])
* Speed up phrase suggestion scoring {pull}5396[#5396] (issue: {issue}5395[#5395])

Term Vectors::
* Only load term statistics if required {pull}11737[#11737]
* Requests are now timed {pull}9583[#9583]
* Support for shard level caching of term vectors {pull}8395[#8395]
* Add support for distributed frequencies {pull}8144[#8144]
* Add support for realtime term vectors {pull}7846[#7846]
* Support for custom analyzers in term vectors and MLT query {pull}7801[#7801]
* Support for artificial documents {pull}7530[#7530]
* Support for version and version_type {pull}7480[#7480]
* Return found: false for docs requested between index and refresh {pull}7124[#7124] (issue: {issue}7121[#7121])
* Adds support for wildcards in selected fields {pull}7061[#7061]
* Compute term vectors on the fly if not stored in index {pull}6567[#6567] (issue: {issue}5184[#5184])

Top Hits::
* In top_hits agg, when parent doc is found stop iterating over segments and continue with the next top matching child doc {pull}6895[#6895] (issue: {issue}1843[#1843])
* Added pagination support to `top_hits` aggregation by adding `from` option {pull}6312[#6312] (issue: {issue}6299[#6299])

Translog::
* Make translog file name parsing strict {pull}11875[#11875]
* Some smallish translog cleanups {pull}11200[#11200]
* Add translog checkpoints to prevent translog corruption {pull}11143[#11143] (issues: {issue}10933[#10933], {issue}11011[#11011])
* Make modifying operations durable by default. {pull}11011[#11011] (issue: {issue}10933[#10933])
* Use buffered translog type also when sync is set to 0 {pull}10993[#10993]
* Remove useless random translog directory selection {pull}10589[#10589]
* Handle truncated translog gracefully {pull}9797[#9797] (issue: {issue}9699[#9699])
* Don't rename recovery translog in gateway {pull}9719[#9719]
* Cut over to Path API {pull}8611[#8611]
* Refactor the Translog.read(Location) method {pull}7780[#7780]
* Write translog opSize twice {pull}7735[#7735]
* Remove unused stream {pull}7683[#7683]
* Clean up translog interface {pull}7564[#7564]
* Add translog checksums {pull}7232[#7232] (issue: {issue}6554[#6554])
* Set default translog `flush_threshold_ops` to unlimited, to flush by byte size by default and not penalize tiny documents {pull}6783[#6783] (issue: {issue}6443[#6443])
* Use unlimited `flush_threshold_ops` for translog (again) [ISSUE] {pull}6726[#6726]
* Raise proper failure if not fully reading translog entry {pull}6562[#6562]
* Use unlimited `flush_threshold_ops` for translog {pull}5900[#5900]
* Fix visibility in buffered translog {pull}5609[#5609]
* Use BytesReference to write to translog files {pull}5463[#5463]
* Don't throttle the translog stage of recovery [ISSUE] {pull}4890[#4890]

Tribe Node::
* Index level blocks, index conflict settings {pull}5501[#5501]

Upgrade API::
* Refactor upgrade API to use transport and write minimum compatible version that the index was upgraded to {pull}11333[#11333] (issues: {issue}11072[#11072], {issue}11095[#11095])
* Add upgrade_only_ancient_segments option to upgrade API {pull}10540[#10540] (issue: {issue}10213[#10213])
* Remove ability to run optimize and upgrade async {pull}9640[#9640] (issue: {issue}9638[#9638])


[[bug-2.0.0-beta1]]
[float]
=== Bug fixes

Aggregations::
* Aggregation: Fix AggregationPath.subPath() to not throw ArrayStoreException {pull}13035[#13035]
* Throw error if cardinality aggregator has sub aggregations {pull}12989[#12989] (issue: {issue}12988[#12988])
* Full path validation for pipeline aggregations {pull}12595[#12595] (issue: {issue}12360[#12360])
* Upgrade HDRHistogram to version 2.1.6. {pull}12554[#12554]
* Fixes serialization of HDRHistogram in percentiles aggregations {pull}12505[#12505]
* Fix cidr mask conversion issue for 0.0.0.0/0 and add tests #12005 {pull}12430[#12430] (issue: {issue}12005[#12005])
* Adds new script API to ValuesSourceMetricsAggregationBuilder {pull}12152[#12152]
* Aggregations: Makes SKIP Gap Policy work correctly for Bucket Script aggregation {pull}11970[#11970]
* `moving_avg` forecasts should not include current point {pull}11641[#11641]
* Allow aggregations_binary to build and parse {pull}11473[#11473] (issue: {issue}11457[#11457])
* Fix bug where moving_avg prediction keys are appended to previous prediction {pull}11465[#11465] (issue: {issue}11454[#11454])
* Sibling Pipeline Aggregations can now be nested in SingleBucketAggregations {pull}11380[#11380] (issue: {issue}11379[#11379])
* Fixed Moving Average prediction to calculate the correct keys {pull}11375[#11375] (issue: {issue}11369[#11369])
* Queries with `size:0` break aggregations that need scores {pull}11358[#11358] (issue: {issue}11119[#11119])
* Fix geo bounds aggregation when longitude is 0 {pull}11090[#11090] (issue: {issue}11085[#11085])
* Fixes Infinite values return from geo_bounds with non-zero bucket-ordinals {pull}10917[#10917] (issue: {issue}10804[#10804])
* Sampler agg could not be used with Terms agg’s order. {pull}10785[#10785] (issue: {issue}10719[#10719])
* Fix `_as_string` output to only show when format specified {pull}10571[#10571] (issue: {issue}10284[#10284])
* Fix multi-level breadth-first aggregations. {pull}10411[#10411] (issues: {issue}9544[#9544], {issue}9823[#9823])
* Be lenient when converting local to utc time in time zone roundings {pull}10031[#10031] (issue: {issue}10025[#10025])
* Prevent negative intervals in date_histogram {pull}9690[#9690] (issue: {issue}9634[#9634])
* Make the nested aggregation call sub aggregators with doc IDs in order {pull}9548[#9548] (issue: {issue}9547[#9547])
* Remove limitation on field access within aggs to the types provided in the search {pull}9487[#9487]
* Validate the aggregation order on unmapped terms in terms agg. {pull}8952[#8952] (issue: {issue}8946[#8946])
* Fix date_histogram issues during a timezone DST switch {pull}8655[#8655] (issue: {issue}8339[#8339])
* Fix geohash grid doc counts computation on multi-valued fields {pull}8574[#8574] (issue: {issue}8512[#8512])
* Parser throws NullPointerException when Filter aggregation clause is empty {pull}8527[#8527] (issue: {issue}8438[#8438])
* Fixes scripted metrics aggregation when used as a sub aggregation {pull}8037[#8037] (issue: {issue}8036[#8036])
* Makes script params consistent with other APIs in scripted_metric {pull}7969[#7969]
* Significant terms can throw error on index with deleted docs. {pull}7960[#7960] (issue: {issue}7951[#7951])
* Fixes resize bug in Geo bounds Aggregator {pull}7565[#7565] (issue: {issue}7556[#7556])
* The nested aggregator should iterate over the child doc ids in ascending order. {pull}7514[#7514] (issue: {issue}7505[#7505])
* Fixes pre and post offset serialisation for histogram aggs {pull}7313[#7313] (issue: {issue}7312[#7312])
* `key_as_string` only shown when format specified in terms agg {pull}7160[#7160] (issue: {issue}7125[#7125])
* Fixed value count so it can be used in terms order {pull}7051[#7051] (issue: {issue}7050[#7050])
* Fix infinite loop in the histogram reduce logic. {pull}7022[#7022] (issue: {issue}6965[#6965])
* More lenient type parsing in histo/cardinality aggs {pull}6948[#6948] (issue: {issue}6893[#6893])
* Fixed Histogram key_as_string bug {pull}6830[#6830] (issue: {issue}6655[#6655])
* Fix JSON response for significant terms {pull}6535[#6535]
* Fix reducing of range aggregations. {pull}6484[#6484] (issue: {issue}6435[#6435])
* Fix cardinality aggregation when doc values field is empty {pull}6413[#6413]
* Fixed conversion of date field values when using multiple date formats {pull}6266[#6266] (issue: {issue}6239[#6239])
* Fail queries that have two aggregations with the same name. {pull}6258[#6258] (issue: {issue}6255[#6255])
* Aggregations parsing is too lenient. {pull}5837[#5837] (issue: {issue}5827[#5827])
* Fix DateHistogramBuilder to use a String pre_offset and post_offset {pull}5587[#5587] (issue: {issue}5586[#5586])
* DateHistogram.Bucket should return the date key in UTC [ISSUE] {pull}5477[#5477]
* Fix cardinality memory-usage considerations. {pull}5452[#5452]
* Allow scripts to return more than 4 values in aggregations. {pull}5416[#5416] (issue: {issue}5414[#5414])
* Invoke postCollection on aggregation collectors {pull}5387[#5387]
* Fixed a bug in date_histogram aggregation parsing {pull}5379[#5379] (issue: {issue}5375[#5375])
* Fix NPE/AIOOBE when building a bucket which has not been collected. {pull}5250[#5250] (issue: {issue}5048[#5048])
* Changing the sorting for terms aggs, {pull}5237[#5237] (issue: {issue}5236[#5236])
* Changed the caching of FieldDataSource in aggs to be based on field name... {pull}5205[#5205] (issue: {issue}5190[#5190])
* date_histogram against empty index results in ArrayIndexOutOfBoundsException [ISSUE] {pull}5179[#5179]
* Fix BytesRef owning issue in string terms aggregations. {pull}5039[#5039] (issue: {issue}5021[#5021])
* Fix hashCode values of aggregations' BytesValues. {pull}5006[#5006] (issue: {issue}5004[#5004])
* Sorting terms agg by sub-aggegation doesn't respect asc/desc when executing on a single shard [ISSUE] {pull}4951[#4951]
* Fixed an issue where there are sub aggregations executing on a single shard {pull}4869[#4869] (issue: {issue}4843[#4843])

Aliases::
* Take into account `_default_ mapping` in index template when parsing alias filter in index templates. {pull}8577[#8577] (issue: {issue}8473[#8473])
* PUT /_aliases should accept a numeric routing value {pull}5471[#5471] (issue: {issue}5465[#5465])

Allocation::
* Fix messaging about delayed allocation {pull}12515[#12515] (issue: {issue}12456[#12456])
* ThrottlingAllocationDecider should not counting relocating shards {pull}12409[#12409]
* Shard Started messages should be matched using an exact match {pull}11999[#11999]
* Reroute after node join is processed {pull}11960[#11960] (issues: {issue}11776[#11776], {issue}11923[#11923])
* GatewayAllocator: reset rerouting flag after error {pull}11519[#11519] (issue: {issue}11421[#11421])
* Weight deltas must be absolute deltas {pull}9149[#9149] (issue: {issue}9023[#9023])
* Fix handling of `dangling_timeout` set to 0 and `auto_import_dangled` true {pull}8257[#8257]
* Enable ClusterInfoService by default {pull}8206[#8206]
* Improve handling of failed primary replica handling {pull}6816[#6816] (issue: {issue}6808[#6808])
* Do not ignore ConnectTransportException for shard replication operations {pull}6813[#6813]
* Failed shards could be re-assigned to the same nodes if multiple replicas failed at once {pull}5725[#5725]
* BalancedShardAllocator makes non-deterministic rebalance decisions [ISSUE] {pull}4867[#4867]

Analysis::
* Custom analyzer names and aliases must not start with _ {pull}11303[#11303] (issue: {issue}9596[#9596])
* Fix tokenizer settings in SynonymTokenFilterFactory {pull}10489[#10489]
* CharArraySet doesn't know how to lookup the original string in an ImmutableList. {pull}6238[#6238] (issue: {issue}6237[#6237])
* Analyze API: Default analyzer accidentally removed stopwords {pull}6043[#6043] (issue: {issue}5974[#5974])

Bulk::
* Fix: Use correct OpType on Failure in BulkItemResponse {pull}12060[#12060] (issue: {issue}9821[#9821])
* Allow null values in the bulk action/metadata line parameters {pull}11459[#11459] (issue: {issue}11458[#11458])
* Throw exception if unrecognized parameter in bulk action/metadata line {pull}11331[#11331] (issue: {issue}10977[#10977])
* `_default_` mapping should be picked up from index template during auto create index from bulk API  {pull}10762[#10762] (issue: {issue}10609[#10609])
* Removed duplicate timeout param {pull}10205[#10205]
* Handle failed request when auto create index is disabled {pull}8163[#8163] (issue: {issue}8125[#8125])
* Bulk operation can create duplicates on primary relocation {pull}7729[#7729]
* Cluster block with auto create index bulk action can cause bulk execution to not return {pull}7109[#7109] (issue: {issue}7086[#7086])
* Do not fail whole request on closed index {pull}6790[#6790] (issue: {issue}6410[#6410])
* Fix return of wrong request type on failed updates {pull}6646[#6646] (issue: {issue}6630[#6630])
* Bulk request which try and fail to create multiple indices may never return {pull}6436[#6436]
* Fix mapping creation on bulk request {pull}5623[#5623]
* Ensure that index specific failures do not affect whole request {pull}4995[#4995] (issue: {issue}4987[#4987])
* Failed preparsing does not fail whole bulk request {pull}4781[#4781] (issue: {issue}4745[#4745])

CAT API::
* _cat/nodes: Thread null handling through stats and info {pull}9938[#9938] (issue: {issue}6297[#6297])
* Fix NullPointerException in cat-recovery API {pull}6190[#6190]
* _cat/allocation returns -1 as disk.total for clients nodes [ISSUE] {pull}5948[#5948]
* ElasticsearchIllegalStateException when invoking _cat plugins [ISSUE] {pull}5715[#5715]
* Node version sometimes empty in _cat/nodes [ISSUE] {pull}5480[#5480]

CRUD::
* `detect_noop` now understands `null` as a valid value {pull}11210[#11210] (issue: {issue}11208[#11208])
* The parent option on update request should be used for upsert only. {pull}9612[#9612] (issue: {issue}4538[#4538])
* Don't throw DAEE on replica for create operation; use IW.updateDocument/s instead {pull}7146[#7146] (issue: {issue}7142[#7142])
* MultiGet: Fail when using no routing on an alias to an index that requires routing {pull}7145[#7145]
* Add parameter to GET API for checking if generated fields can be retrieved {pull}6973[#6973] (issue: {issue}6676[#6676])
* DocumentMissingException is also thrown on update retries {pull}6724[#6724] (issue: {issue}6355[#6355])

Cache::
* Store filter cache statistics at the shard level instead of index. {pull}11886[#11886]
* Don't use bitset cache for children filters. {pull}10663[#10663] (issues: {issue}10629[#10629], {issue}10662[#10662])
* Remove query-cache serialization optimization. {pull}9500[#9500] (issue: {issue}9294[#9294])
* Queries are never cached when date math expressions are used (including exact dates) {pull}9269[#9269] (issue: {issue}9225[#9225])
* Change default eager loading behaviour for nested fields and parent/child in bitset cache {pull}8440[#8440]
* Don't eagerly load NestedDocsFilter in bitset filter cache, because it is never used. {pull}8414[#8414] (issue: {issue}8394[#8394])
* Fixed bitset filter cache leftover in nested filter  {pull}8303[#8303]
* Cleanup non nested filter to not flip the FixedBitSet returned by the wrapped filter. {pull}8232[#8232] (issue: {issue}8227[#8227])
* Move the child filter over to the fixed bitset cache. {pull}8171[#8171]

Circuit Breakers::
* Make "noop" request breaker a non-dynamic setting {pull}8179[#8179]
* Only set `breaker` when stats are retrieved {pull}7721[#7721]
* Disable circuit breaking for BigArrays {pull}6381[#6381] (issue: {issue}6332[#6332])
* Percolator doesn't reduce CircuitBreaker stats in every case. {pull}5588[#5588]
* Fix possible discrepancy in circuit breaker in parent/child {pull}5526[#5526]
* Fix issue where circuit breaker was always reset to 80% upon startup {pull}5334[#5334]
* NullPointerException in RamAccounntingTermsEnum [ISSUE] {pull}5326[#5326]

Cluster::
* Changes in unassigned info and version might not be transferred as part of cluster state diffs {pull}12387[#12387]
* Rename cluster state uuid to updateId {pull}11862[#11862] (issue: {issue}11831[#11831])
* ClusterHealth shouldn't fail with "unexpected failure" if master steps down while waiting for events {pull}11493[#11493]
* Write state also on data nodes if not master eligible {pull}9952[#9952] (issue: {issue}8823[#8823])
* GatewayService should register cluster state listener before checking for current state {pull}8789[#8789]
* Extend refresh-mapping logic to the `_default_` type {pull}8413[#8413] (issue: {issue}4760[#4760])
* ClusterHealthAPI does not respect waitForEvents when local flag is set {pull}7731[#7731]
* Use node's cluster name as a default for an incoming cluster state who misses it {pull}7414[#7414] (issue: {issue}7386[#7386])
* Use the provided cluster state instead of fetching a new cluster state from cluster service. {pull}7013[#7013]
* During recovery, only send mapping updates to master if needed {pull}6772[#6772] (issue: {issue}6762[#6762])
* Check for index blocks against concrete indices on master operations [ISSUE] {pull}6694[#6694]
* Also send Refresh and Flush actions to relocation targets {pull}6545[#6545]
* Do not execute cluster state changes if current node is no longer master {pull}6230[#6230]
* Add cluster name to state {pull}5624[#5624] (issue: {issue}5622[#5622])
* TransportMasterNodeOperationAction: tighter check for postAdded cluster state change {pull}5548[#5548] (issue: {issue}5499[#5499])

Core::
* Remove Settings.getAsClass {pull}12744[#12744] (issues: {issue}12643[#12643], {issue}12656[#12656])
* ThreadPools: schedule a timeout check after adding command to queue {pull}12319[#12319]
* Throw LockObtainFailedException exception when we can't lock index directory {pull}12203[#12203]
* Only clear open search ctx if the index is delete or closed via API {pull}12199[#12199] (issue: {issue}12116[#12116])
* Close lock even if we fail to obtain {pull}11412[#11412]
* Balance new shard allocations more evenly on multiple path.data {pull}11185[#11185] (issue: {issue}11122[#11122])
* Use System.nanoTime for elapsed time {pull}11058[#11058]
* Increase default rate limiting for snapshot, restore and recovery to 40 MB/sec {pull}10185[#10185] (issue: {issue}6018[#6018])
* Also throttle delete by query when merges fall behind {pull}9986[#9986]
* Promptly cleanup updateTask timeout handler {pull}9621[#9621]
* Disable auto gen id optimization {pull}9468[#9468] (issue: {issue}8788[#8788])
* Verify the index state of concrete indices after alias resolution {pull}9057[#9057]
* `ignore_unavailable` shouldn't ignore closed indices {pull}9047[#9047] (issue: {issue}7153[#7153])
* Hard wire utf-8 encoding, so unicode filenames work {pull}8847[#8847]
* Remove unnecessary index removal on index creation {pull}8639[#8639]
* Remove _state directory if index has been deleted {pull}8610[#8610]
* Disable bloom filters {pull}8572[#8572] (issues: {issue}8564[#8564], {issue}8571[#8571])
* Return 0 instead of -1 for unknown/non-exposed ramBytesUsed() {pull}8291[#8291] (issue: {issue}8239[#8239])
* Don't catch FNF/NSF exception when reading metadata {pull}8207[#8207]
* Don't handle FNF exceptions when reading snapshot {pull}8086[#8086]
* Upgrade to Jackson Smile 2.4.1.1 {pull}7327[#7327] (issue: {issue}18[#18])
* Force refresh when versionMap is using too much RAM {pull}6443[#6443] (issue: {issue}6378[#6378])
* Use XNativeFSLockFactory instead of the buggy Lucene 4.8.1 version [ISSUE] {pull}6424[#6424]
* Restore shard routing. {pull}6393[#6393] (issues: {issue}5562[#5562], {issue}6391[#6391])
* Don't report terms as live if all it's docs are filtered out {pull}6221[#6221] (issue: {issue}6211[#6211])
* Ensure pending merges are updated on segment flushes {pull}5780[#5780] (issue: {issue}5779[#5779])

Dates::
* Add millisecond parser for dynamic date fields mapped from "yyyy/MM/dd" {pull}12977[#12977] (issue: {issue}12873[#12873])
* Query string time zone not working {pull}10883[#10883] (issue: {issue}10477[#10477])
* DateMath: Use time zone when rounding.  {pull}9885[#9885] (issue: {issue}9814[#9814])
* Resolve `now` in date ranges in percolator and alias filters at search time instead of parse time {pull}8534[#8534] (issue: {issue}8474[#8474])

Discovery::
* Make sure NodeJoinController.ElectionCallback is always called from the update cluster state thread {pull}12372[#12372]
* ZenDiscovery: #11960 failed to remove eager reroute from node join {pull}12019[#12019]
* Node receiving a cluster state with a wrong master node should reject and throw an error {pull}9963[#9963]
* Check index uuid when merging incoming cluster state into the local one {pull}9541[#9541] (issue: {issue}9489[#9489])
* Only retry join when other node is not (yet) a master {pull}8972[#8972]
* Removed unnecessary DiscoveryService reference from LocalDiscovery {pull}8415[#8415] (issue: {issue}8539[#8539])
* Improve the lifecycle management of the join control thread in zen discovery. {pull}8327[#8327]
* UnicastZenPing - use temporary node ids if can't resolve node by it's address {pull}7719[#7719]
* Transport client: Don't add listed nodes to connected nodes list in sniff mode {pull}7067[#7067] (issues: {issue}6811[#6811], {issue}6829[#6829], {issue}6894[#6894])
* Handle ConnectionTransportException during a Master/Node fault detection ping during Discovery {pull}6686[#6686]

Engine::
* Fix NPE when streaming commit stats {pull}11266[#11266]
* Sync translog before closing engine {pull}10484[#10484]
* Fixes InternalIndexShard callback handling of failure {pull}8644[#8644] (issue: {issue}5945[#5945])
* Add current translog ID to commit meta before closing {pull}8245[#8245]
* The `index.fail_on_corruption` setting is not updateable {pull}6941[#6941]
* Closing an IndexReader on an already relocated / closed shard can cause memory leaks [ISSUE] {pull}5825[#5825]

Exceptions::
* Use StartupError to format all exceptions hitting the console {pull}13041[#13041] (issue: {issue}13040[#13040])
* Improve console logging on startup exception {pull}12976[#12976]
* Don't special-case on ElasticsearchWrapperException in toXContent {pull}12015[#12015] (issue: {issue}11994[#11994])
* Implement toXContent on ShardOpertionFailureException {pull}11155[#11155] (issue: {issue}11017[#11017])
* Remove double exception handling that causes false replica failures {pull}10990[#10990]
* Fixing copy/paste mistake in SearchRequest.extraSource's exception message {pull}8118[#8118] (issue: {issue}8117[#8117])
* Turn unexpected exceptions when reading segments into CorruptedIndexException {pull}7693[#7693]
* Throw better error if invalid scroll id is used {pull}5738[#5738] (issue: {issue}5730[#5730])

Fielddata::
* Reclaim memory from fielddata synchronously when an explicit clear is performed. {pull}11697[#11697] (issue: {issue}11695[#11695])
* Load fielddata on behalf of scripts. {pull}10997[#10997]
* Fix iterator over global ordinals. {pull}8627[#8627] (issue: {issue}8580[#8580])
* Fix FieldDataWeighter generics to accept RamUsage instead of AtomicFieldData {pull}6262[#6262] (issue: {issue}6260[#6260])
* Eager fielddata loading not working {pull}5557[#5557]

Geo::
* Correct ShapeBuilder coordinate parser to ignore values in 3rd+ dimension {pull}10539[#10539] (issue: {issue}10510[#10510])
* Fix hole intersection at tangential coordinate {pull}10332[#10332] (issue: {issue}9511[#9511])
* Fix validate_* merge policy for GeoPointFieldMapper {pull}10165[#10165] (issue: {issue}10164[#10164])
* Correct bounding box logic for GeometryCollection type {pull}9550[#9550] (issue: {issue}9360[#9360])
* Throw helpful exception for Polygons with holes outside of shell {pull}9105[#9105] (issue: {issue}9071[#9071])
* GIS envelope validation {pull}9091[#9091] (issues: {issue}2544[#2544], {issue}8672[#8672], {issue}9067[#9067], {issue}9079[#9079], {issue}9080[#9080])
* Fix for NPE enclosed in SearchParseException for a "geo_shape" filter or query {pull}8785[#8785] (issue: {issue}8432[#8432])
* Fix for geohash neighbors when geohash length is even. {pull}8529[#8529] (issue: {issue}8526[#8526])
* Fix geohash grid aggregation on multi-valued fields. {pull}8513[#8513] (issue: {issue}8507[#8507])
* Fix for ArithmeticException[/ by zero] when parsing a polygon {pull}8475[#8475] (issue: {issue}8433[#8433])
* Remove unnecessary code from geo distance builder {pull}8338[#8338]
* Fix IndexedGeoBoundingBoxFilter to not modify the bits of other filters. {pull}8325[#8325]
* Fix circle radius calculation {pull}7338[#7338] (issue: {issue}7301[#7301])
* Improved error handling in geo_distance {pull}7272[#7272] (issue: {issue}7260[#7260])
* Fixes computation of geohash neighbours {pull}7247[#7247] (issue: {issue}7226[#7226])
* Better error for invalid multipolygon {pull}7190[#7190] (issue: {issue}7126[#7126])
* Fix geo_shapes which intersect dateline {pull}7188[#7188] (issue: {issue}7016[#7016])
* Fixes parse error with complex shapes {pull}6976[#6976] (issue: {issue}5773[#5773])
* Issue with polygons near date line {pull}6282[#6282] (issue: {issue}6179[#6179])
* `optimize_bbox` for geo_distance filters can cause missing results [ISSUE] {pull}6008[#6008]
* Add exceptions to GeoPointFieldMapper {pull}5403[#5403] (issue: {issue}5390[#5390])

Highlighting::
* Plain highlighter to use analyzer defined on a document level  {pull}6267[#6267] (issue: {issue}5497[#5497])
* Implement BlendedTermQuery#extractTerms to support highlighing. {pull}5247[#5247] (issue: {issue}5246[#5246])
* Made SearchContextHighlight.Field class immutable to prevent from unwanted updates {pull}5223[#5223] (issue: {issue}5175[#5175])
* Highlighting on a wildcard field name causes the wildcard expression to be returned rather than the actual field name [ISSUE] {pull}5221[#5221]
* Fixed multi term queries support in postings highlighter for non top-level queries {pull}5143[#5143] (issues: {issue}4052[#4052], {issue}5127[#5127])

Index APIs::
* Remove expansion of empty index arguments in RoutingTable {pull}10148[#10148] (issue: {issue}9081[#9081])
* Fix to make GET Index API consistent with docs {pull}9178[#9178] (issue: {issue}9148[#9148])
* Upsert does not use ttl value {pull}8715[#8715] (issue: {issue}3256[#3256])
* Fix GET index API always running all features {pull}8392[#8392]
* Fix optimize behavior with 'force' and 'flush' flags. {pull}7920[#7920] (issues: {issue}7886[#7886], {issue}7904[#7904])
* Fixed validate query parsing issues {pull}6114[#6114] (issues: {issue}6111[#6111], {issue}6112[#6112], {issue}6116[#6116])

Indexed Scripts/Templates::
* Fix updating templates. {pull}10526[#10526] (issue: {issue}10397[#10397])
* ScriptService can deadlock entire nodes if script index is recovering {pull}8901[#8901]
* GetIndexedScript call can deadlock {pull}8266[#8266]
* Make template params take arrays {pull}8255[#8255]
* Cleaned up various issues {pull}7787[#7787] (issues: {issue}7559[#7559], {issue}7560[#7560], {issue}7567[#7567], {issue}7568[#7568], {issue}7647[#7647])
* Change the default `auto_expand` for the `.scripts` index to `0-all` {pull}7502[#7502]
* Fix `.script` index template. {pull}7500[#7500]

Inner Hits::
* Reset the `ShardTargetType` after serializing inner hits. {pull}12261[#12261]
* Properly support named queries for both nested and parent child inner hits {pull}11880[#11880] (issues: {issue}10661[#10661], {issue}10694[#10694])
* Fix multi level parent/child bug {pull}11199[#11199]
* Make sure size=0 works on the inner_hits level. {pull}10388[#10388] (issue: {issue}10358[#10358])
* Make sure inner hits also works for nested fields defined in object field {pull}10353[#10353] (issue: {issue}10334[#10334])
* Fix bug where parse error is thrown if a inner filter is used in a nested filter/query. {pull}10309[#10309] (issue: {issue}10308[#10308])
* Fix nested stored field support. {pull}10235[#10235] (issue: {issue}9766[#9766])
* Don't fail if an object is specified as a nested value instead of an array. {pull}9743[#9743] (issue: {issue}9723[#9723])
* Make sure inner hits defined on has_parent query resolve hits properly {pull}9384[#9384]

Internal::
* Add plugin modules before (almost all) others {pull}13061[#13061] (issue: {issue}12783[#12783])
* Workaround JDK bug 8034057 {pull}12970[#12970]
* Fix concurrency issue in PrioritizedEsThreadPoolExecutor. {pull}12599[#12599]
* Fix ShardUtils#getElasticsearchDirectoryReader() {pull}12594[#12594]
* don't represent site plugins with 'null' anymore {pull}12577[#12577]
* IndicesStore shouldn't try to delete index after deleting a shard {pull}12494[#12494] (issue: {issue}12487[#12487])
* ShardUtils#getElasticsearchLeafReader() should use FilterLeafReader#getDelegate() instead of FilterLeafReader#unwrap {pull}12437[#12437]
* Fix serialization of IndexFormatTooNewException and IndexFormatTooOldException {pull}12277[#12277]
* Decode URL.getPath before resolving a real file {pull}11940[#11940]
* Fix FieldDataTermsFilter.equals. {pull}11835[#11835] (issue: {issue}11779[#11779])
* Add a null-check for XContentBuilder#field for BigDecimals {pull}11790[#11790] (issue: {issue}11699[#11699])
* AsyncShardFetch can hang if there are new nodes in cluster state {pull}11615[#11615]
* Make JNA optional for tests and move classes to bootstrap package {pull}11378[#11378] (issue: {issue}11360[#11360])
* Transport: remove support for reading/writing list of strings, use arrays instead {pull}11276[#11276] (issue: {issue}11056[#11056])
* Fix CompressedString.equals. {pull}11233[#11233]
* ThreadPool: make sure no leaking threads are left behind in case of initialization failure {pull}11061[#11061] (issue: {issue}9107[#9107])
* Propagate headers & contexts to sub-requests {pull}11060[#11060] (issue: {issue}10979[#10979])
* Fix NPE in PendingDelete#toString {pull}11032[#11032]
* Ensure that explanation descriptions are not null on serialization {pull}10689[#10689] (issue: {issue}10399[#10399])
* Fix possible NPE in InternalClusterService$NotifyTimeout, the `future` field is set from a different thread {pull}10630[#10630] (issue: {issue}3[#3])
* Allow ActionListener to be called on the network thread {pull}10573[#10573] (issue: {issue}10402[#10402])
* Add missing hashCode method to RecoveryState#File {pull}10501[#10501]
* Don't try to send a mapping refresh if there is no master {pull}10311[#10311] (issue: {issue}10283[#10283])
* Fix PageCacheRecycler's max page size computation. {pull}10087[#10087] (issue: {issue}10077[#10077])
* Close all resources if doStart fails {pull}9898[#9898]
* Snapshot status api: make sure headers are handed over to inner nodes request {pull}9409[#9409]
* Fix equality check of timevalue after serialization {pull}9218[#9218]
* AdapterActionFuture should not set currentThread().interrupt() {pull}9141[#9141] (issue: {issue}9001[#9001])
* PlainTransportFuture should not set currentThread().interrupt() {pull}9001[#9001]
* IndexService - synchronize  close to prevent race condition with shard creation {pull}8557[#8557]
* When corruption strikes, don't create exceptions with circular references {pull}8331[#8331]
* In fixed bitset service fix order where the warmer listener is added. {pull}8168[#8168] (issue: {issue}8140[#8140])
* Only schedule another refresh if `refresh_interval` is positive {pull}8087[#8087] (issue: {issue}8085[#8085])
* Fix serialization of PendingClusterTask.timeInQueue. {pull}8077[#8077]
* Dangling indices import ignores aliases {pull}8059[#8059]
* Fix serialization of short[] arays. {pull}8025[#8025] (issue: {issue}7845[#7845])
* Make close() synchronized during node shutdown {pull}7885[#7885]
* Ensure GroupShardsIterator is consistent across requests, to ensure consistent sorting {pull}7698[#7698]
* Fix ordering of Regex.simpleMatch() parameters {pull}7661[#7661] (issue: {issue}7651[#7651])
* Unify search context cleanup {pull}7643[#7643] (issue: {issue}7625[#7625])
* Use `SEARCH` threadpool for potentially blocking operations {pull}7624[#7624] (issue: {issue}7623[#7623])
* Make network interface iteration order consistent {pull}7494[#7494]
* Add all unsafe variants of LZF compress library functions to forbidden APIs. {pull}7468[#7468] (issue: {issue}8078[#8078])
* Wait until engine is started up when acquiring searcher {pull}7456[#7456] (issue: {issue}7455[#7455])
* Fix discovery.id.seed {pull}7439[#7439] (issue: {issue}7437[#7437])
* Made original indices optional for broadcast delete and delete by query shard requests {pull}7406[#7406]
* Force optimize was not passed to shard request {pull}7405[#7405] (issue: {issue}7404[#7404])
* Fixed a request headers bug in transport client {pull}7302[#7302]
* Fix explanation streaming {pull}7257[#7257]
* VerboseProgress(PrintWriter) does not set the writer {pull}7254[#7254]
* Fix a very rare case of corruption in compression used for internal cluster communication. {pull}7210[#7210]
* Fix BytesStreamInput(BytesReference) ctor with nonzero offset {pull}7197[#7197]
* Fix serialization bug in reroute API {pull}7135[#7135]
* Support parsing lucene minor version strings {pull}7055[#7055]
* Fix connect concurrency, can cause connection nodes to close {pull}6964[#6964]
* Drop UnsafeUtils {pull}6963[#6963] (issue: {issue}6962[#6962])
* When serializing HttpInfo, return null info if service is not started {pull}6906[#6906]
* Remove indicesLifecycle.Listener from IndexingMemoryController {pull}6892[#6892]
* Fix possible NPE during shutdown for requests using timeouts {pull}6849[#6849]
* Prevent NPE if engine is closed while version map is checked {pull}6786[#6786]
* If the node initialisation fails, make sure the node environment is closed correctly {pull}6715[#6715]
* IndexingMemoryController should only update buffer settings of fully recovered shards {pull}6667[#6667] (issue: {issue}6642[#6642])
* Fix possible race condition in checksum name generator {pull}6662[#6662]
* Allow to serialize negative thread pool sizes {pull}6486[#6486] (issues: {issue}5357[#5357], {issue}6325[#6325])
* The `ignore_unavailable` option should also ignore indices that are closed {pull}6475[#6475] (issue: {issue}6471[#6471])
* Guava doesn't explicitly remove entries when clearing the entire cache [ISSUE] {pull}6296[#6296]
* MetaData#concreteIndices to throw exception with a single index argument if allowNoIndices == false {pull}6137[#6137]
* Restore read/write visibility in PlainShardsIterator. {pull}6039[#6039] (issue: {issue}5561[#5561])
* Use TransportBulkAction for internal request from IndicesTTLService {pull}5795[#5795] (issue: {issue}5766[#5766])
* Take stream position into account when calculating remaining length {pull}5677[#5677] (issue: {issue}5667[#5667])
* Fix some warnings reported by Findbugs. {pull}5571[#5571]
* Assorted fixes for bugs in the PagedBytesReference tests {pull}5549[#5549]
* Fix for zero-sized content throwing off toChannelBuffer(). {pull}5543[#5543]
* Count latch down if sendsPing throws exception {pull}5440[#5440]
* Fix yamlBuilder() to return YAML builder instead of SMILE {pull}5186[#5186] (issue: {issue}5185[#5185])

Java API::
* Add missing support for escape to QueryStringQueryBuilder {pull}13016[#13016]
* Fix PrefixQueryBuilder to support an Object value {pull}12124[#12124] (issue: {issue}12032[#12032])
* Properly fix the default regex flag to ALL for RegexpQueryParser and Builder {pull}12067[#12067] (issue: {issue}11896[#11896])
* Java api: add missing support for boost to GeoShapeQueryBuilder and TermsQueryBuilder {pull}11810[#11810] (issue: {issue}11744[#11744])
* Add missing rewrite parameter to FuzzyQueryBuilder {pull}11139[#11139] (issue: {issue}11130[#11130])
* Ensure netty I/O thread is not blocked in TransportClient {pull}10644[#10644]
* toString for SearchRequestBuilder and CountRequestBuilder {pull}9944[#9944] (issues: {issue}5555[#5555], {issue}5576[#5576])
* Added missing module registration in TransportClient for Significant Terms {pull}7852[#7852] (issue: {issue}7840[#7840])
* Get indexed script shouldn't allow to set the index [ISSUE] {pull}7553[#7553]
* Add back string op type to IndexRequest {pull}7387[#7387]
* Fixed the node retry mechanism which could fail without trying all the connected nodes {pull}6829[#6829]
* Fix source excludes setting if no includes were provided [ISSUE] {pull}6632[#6632]
* BulkRequest#add(Iterable) to support UpdateRequests {pull}6551[#6551]
* Make sure afterBulk is always called in BulkProcessor {pull}6495[#6495] (issue: {issue}5038[#5038])
* JsonXContentGenerator#writeRawField produces invalid JSON if raw field is the first field in the json object [ISSUE] {pull}5514[#5514]
* Fix returning incorrect XContentParser {pull}5510[#5510]
* Enforce query instance checking before it wrapper as a filter {pull}5431[#5431]
* forceSource highlighting field option doesn't have any effect when set using the Java API [ISSUE] {pull}5220[#5220]
* BulkProcessor process every n+1 docs instead of n {pull}4265[#4265]

Logging::
* Use task's class name if not a TimedPrioritizeRunnable {pull}11610[#11610]
* Fix potential NPE in new tracer log if request timeout {pull}9994[#9994] (issue: {issue}9286[#9286])
* Fix example in logging daily rotate configuration {pull}8550[#8550] (issue: {issue}8464[#8464])
* Fix location information for loggers {pull}8052[#8052] (issue: {issue}5130[#5130])
* Fixes Logger class for BackgroundIndexer {pull}6781[#6781]
* Fix format string for DiskThresholdDecider reroute explanation {pull}5749[#5749]

Mapping::
* Move the `murmur3` field to a plugin and fix defaults. {pull}12931[#12931] (issue: {issue}12874[#12874])
* Fix field type compatiblity check to work when only one previous type exists {pull}12779[#12779] (issue: {issue}12753[#12753])
* `numeric_resolution` should only apply to dates provided as numbers. {pull}11002[#11002] (issue: {issue}10995[#10995])
* Wait for mappings to be available on the primary before indexing. {pull}10949[#10949]
* Fix `_field_names` to not have doc values {pull}10893[#10893] (issue: {issue}10892[#10892])
* Explicitly disallow multi fields from using object or nested fields {pull}10745[#10745]
* Unneccesary mapping refreshes caused by unordered fielddata settings {pull}10370[#10370] (issue: {issue}10318[#10318])
* Fixed an equality check in StringFieldMapper. {pull}10359[#10359] (issue: {issue}10357[#10357])
* Fix doc values representation to always serliaze if explicitly set {pull}10302[#10302] (issue: {issue}10297[#10297])
* Fix `_field_names` to be disabled on pre 1.3.0 indexes {pull}10268[#10268] (issue: {issue}9893[#9893])
* Fix `ignore_malformed` behaviour for ip fields {pull}10112[#10112]
* Update dynamic fields in mapping on master even if parsing fails for the rest of the doc {pull}9874[#9874] (issue: {issue}9851[#9851])
* Throw StrictDynamicMappingException exception if `dynamic:strict` and undeclared field value is `null` {pull}9445[#9445] (issue: {issue}9444[#9444])
* Using `default:null` for _timestamp field creates a index loss on restart {pull}9233[#9233] (issues: {issue}9104[#9104], {issue}9223[#9223])
* Reencode transformed result with same xcontent {pull}8974[#8974] (issue: {issue}8959[#8959])
* Serialize doc values settings for _timestamp {pull}8967[#8967] (issue: {issue}8893[#8893])
* Update cluster state with type mapping also for failed indexing request {pull}8692[#8692] (issue: {issue}8650[#8650])
* Fix conflict when updating mapping with _all disabled {pull}8426[#8426] (issues: {issue}7377[#7377], {issue}8423[#8423])
* Generate dynamic mappings for empty strings. {pull}8329[#8329] (issue: {issue}8198[#8198])
* Throw exception if null_value is set to `null` {pull}7978[#7978] (issue: {issue}7273[#7273])
* Posting a mapping with default analyzer fails {pull}7902[#7902] (issue: {issue}2716[#2716])
* Add explicit error when PUT mapping API is given an empty request body. {pull}7618[#7618] (issue: {issue}7536[#7536])
* Enable merging of properties in the `_timestamp` field {pull}7614[#7614] (issues: {issue}5772[#5772], {issue}6958[#6958], {issue}777[#777])
* Fix `index` setting in `_boost` field {pull}7557[#7557]
* Keep parameters in mapping for `_timestamp` and `_size` even if disabled {pull}7475[#7475]
* Report conflict when trying to disable `_ttl` {pull}7316[#7316] (issues: {issue}7293[#7293], {issue}777[#777])
* Make sure that multi fields are serialized in a consistent order. {pull}7220[#7220] (issue: {issue}7215[#7215])
* Fix dynamic mapping of geo_point fields {pull}7175[#7175] (issue: {issue}6939[#6939])
* Improve IP address validation {pull}7141[#7141] (issue: {issue}7131[#7131])
* Fix `copy_to` behavior on nested documents. {pull}7079[#7079] (issue: {issue}6701[#6701])
* Add multi_field support for Mapper externalValue (plugins) {pull}6867[#6867] (issue: {issue}5402[#5402])
* Fix possibility of losing meta configuration on field mapping update {pull}6550[#6550] (issue: {issue}5053[#5053])
* Allow _version to use `disk` as a doc values format. {pull}6523[#6523]
* Path-based routing doesn't work with doc values [ISSUE] {pull}5844[#5844]
* geo_point doesn't allow null values as of 1.1.0 [ISSUE] {pull}5680[#5680]
* Check "store" parameter for binary mapper and check "index_name" for all mappers {pull}5585[#5585] (issue: {issue}5474[#5474])
* Fix dynamic_type in dynamic_template {pull}5564[#5564] (issue: {issue}5256[#5256])
* Fix include_in_all for multi field {pull}5522[#5522] (issue: {issue}5364[#5364])
* merge GeoPoint specific mapping properties {pull}5506[#5506] (issue: {issue}5505[#5505])
* Merge `null_value` for boolean field and remove `include_in_all` for boolean field in doc {pull}5503[#5503] (issue: {issue}5502[#5502])
* Geo Point Fieldmapper: Allow distance for geohash precision {pull}5449[#5449] (issue: {issue}5448[#5448])
* Make sure get field mapping request is executed on node hosting the index {pull}5225[#5225] (issue: {issue}5177[#5177])
* Added `fields` support to `geo_point` and `completion` field type {pull}4963[#4963]

More Like This::
* Fix potentially unpositioned enum [ISSUE] {pull}12066[#12066]
* Fix `exclude` with artificial documents {pull}8679[#8679]
* Fixes many misbehaving user parameters {pull}8028[#8028] (issue: {issue}2914[#2914])
* Fix `percent_terms_to_match` {pull}7754[#7754]
* Remove unused `search_query_hint` parameter {pull}7691[#7691]
* More Like This API would not take into account size and from in request body {pull}5981[#5981]

NOT CLASSIFIED::
* Rivers might not get started due to missing _meta document [ISSUE] {pull}4864[#4864]

Nested Docs::
* Nested agg needs to reset root doc between segments. {pull}9441[#9441] (issues: {issue}9436[#9436], {issue}9437[#9437])
* Fix handling of multiple buckets being emitted for the same parent doc id in nested aggregation {pull}9346[#9346] (issues: {issue}8454[#8454], {issue}9317[#9317])
* In reverse nested aggregation, fix handling of the same child doc id being processed multiple times. {pull}9345[#9345] (issues: {issue}9263[#9263], {issue}9346[#9346])
* The parent filter of the nested aggregator isn't resolved correctly all the time {pull}9335[#9335] (issue: {issue}9280[#9280])
* Change nested agg to execute in doc id order {pull}8454[#8454]
* If the `_type` field isn't indexed nested inner docs must be filtered out. {pull}7410[#7410]
* The `nested` aggregator should also resolve and use the parentFilter of the closest `reverse_nested` aggregator. {pull}7048[#7048] (issue: {issue}6994[#6994])
* Allow sorting on nested sub generated field {pull}6151[#6151] (issue: {issue}6150[#6150])
* A nested `nested` aggregation falls outside of its parent `nested` aggregation bounds {pull}5728[#5728]

Network::
* Deduplicate addresses from resolver. {pull}12995[#12995]
* Remove usage of `InetAddress#getLocalHost` {pull}12959[#12959]
* Fix network binding for ipv4/ipv6 {pull}12942[#12942] (issues: {issue}12906[#12906], {issue}12915[#12915])
* Transport: Do not make the buffer skip while a stream is open. {pull}11988[#11988]
* Transport: fix racing condition in timeout handling {pull}10220[#10220] (issue: {issue}10187[#10187])
* Netty: Add HTTP pipelining support {pull}8299[#8299] (issue: {issue}2665[#2665])
* Fix NPE when initializing an accepted socket in NettyTransport. {pull}6144[#6144]

Packaging::
* Fix variable substitution for OS's using systemd  {pull}12909[#12909]
* Fix rpm -e removing /etc/elasticsearch {pull}12785[#12785]
* Makes sure all POMs contain a description {pull}12771[#12771] (issue: {issue}12550[#12550])
* use spaces liberally in integration tests and fix space handling {pull}12710[#12710] (issue: {issue}12709[#12709])
* rpm and deb create scripts directory {pull}12704[#12704] (issue: {issue}12702[#12702])
* Fix shaded jar packaging {pull}12589[#12589]
* Fix Bootstrap to not call System.exit {pull}12586[#12586]
* elasticsearch (again) adds CWD to classpath [ISSUE] {pull}12580[#12580]
* jsr166e was left out of shaded jar {pull}12194[#12194] (issue: {issue}12193[#12193])
* Don't add CWD to classpath when ES_CLASSPATH isn't set. {pull}12001[#12001] (issue: {issue}12000[#12000])
* Fix endless looping if starting fails {pull}11836[#11836]
* Postrm script should not fail {pull}11678[#11678] (issue: {issue}11373[#11373])
* Create PID_DIR in init.d script {pull}11674[#11674] (issue: {issue}11594[#11594])
* Fix missing dependencies for RPM/DEB packages {pull}11664[#11664] (issue: {issue}11522[#11522])
* Update project.name in bin/elasticsearch script {pull}11348[#11348]
* Add antlr and asm dependencies {pull}9696[#9696]
* Added quotes to allow spaces in installation path {pull}8428[#8428] (issue: {issue}8441[#8441])
* Move forbidden api signature files to dev-tools. {pull}7921[#7921] (issue: {issue}7917[#7917])
* Parsing command line args multiple times throws `AlreadySelectedException` {pull}7282[#7282]
* Don't remove ancestors on deb removal {pull}7078[#7078] (issue: {issue}5770[#5770])
* Shade mustache into org.elasticsearch.common package {pull}6193[#6193] (issue: {issue}6192[#6192])
* Export JAVA_HOME in RPM init script {pull}5434[#5434]
* Set permission in debian postinst script correctly {pull}5158[#5158] (issue: {issue}3820[#3820])
* RPMs: Add timeout to shutdown with KILL signal {pull}4721[#4721] (issue: {issue}5020[#5020])

Parent/Child::
* Explicitly disabled the query cache {pull}12955[#12955]
* Fix `_parent.type` validation {pull}11436[#11436]
* Fix 2 bugs in `children` agg {pull}10263[#10263] (issues: {issue}10158[#10158], {issue}9544[#9544], {issue}9958[#9958])
* Post collection the children agg should also invoke that phase on its wrapped child aggs. {pull}9291[#9291] (issue: {issue}9271[#9271])
* Fix concurrency issues of the _parent field data. {pull}9030[#9030] (issue: {issue}8396[#8396])
* Fixed p/c filters not being able to be used in alias filters. {pull}8649[#8649] (issues: {issue}5916[#5916], {issue}8628[#8628])
* Missing parent routing causes NullPointerException in Bulk API {pull}8506[#8506] (issue: {issue}8365[#8365])
* The `children` agg didn't take deleted document into account {pull}8180[#8180]
* Check if there is a search context, otherwise throw a query parse exception. {pull}8177[#8177] (issue: {issue}8031[#8031])
* `has_parent` filter must take parent filter into account when executing the inner query/filter {pull}8020[#8020] (issue: {issue}7362[#7362])
* A `has_child` or other p/c query wrapped in a query filter may emit wrong results {pull}7685[#7685]
* Add support for the field data loading option to the `_parent` field. {pull}7402[#7402] (issue: {issue}7394[#7394])
* If _parent field points to a non existing parent type, then skip the has_parent query/filter {pull}7362[#7362] (issue: {issue}7349[#7349])
* Disabled parent/child queries in the delete by query api. {pull}5916[#5916] (issue: {issue}5828[#5828])
* Parse has_child query/filter after child type has been parsed {pull}5838[#5838] (issue: {issue}5783[#5783])
* Parent / child queries should work with non-default similarities {pull}4979[#4979] (issue: {issue}4977[#4977])

Percolator::
* Support filtering percolator queries by date using `now` {pull}12215[#12215] (issue: {issue}12185[#12185])
* Fix NPE when percolating a document that has a _parent field configured in its mapping {pull}12214[#12214] (issue: {issue}12192[#12192])
* Load percolator queries before shard is marked POST_RECOVERY {pull}11799[#11799] (issue: {issue}10722[#10722])
* Fail nicely if `nested` query with `inner_hits` is used in a percolator query {pull}11793[#11793] (issue: {issue}11672[#11672])
* Prevent PercolateResponse from serializing negative VLong {pull}11138[#11138]
* Fix wrong use of currentFieldName outside of a parsing loop {pull}10307[#10307]
* Support encoded body as query string param consistently {pull}9628[#9628]
* Take filters from aliases into account {pull}9590[#9590] (issue: {issue}6241[#6241])
* Fixed bug when using multi percolate api with routing {pull}9161[#9161] (issue: {issue}6214[#6214])
* Pass down the types from the delete mapping request to the delete by query request {pull}7091[#7091] (issue: {issue}7087[#7087])
* Fix memory leak when percolating with nested documents {pull}6578[#6578]
* Fix handling of nested documents {pull}6544[#6544] (issue: {issue}6540[#6540])
* Percolator: Fix assertion in percolation with nested docs {pull}6263[#6263]
* Add num_of_shards statistic to percolate context {pull}6123[#6123] (issue: {issue}6037[#6037])
* The percolator needs to take deleted percolator documents into account. {pull}5843[#5843] (issue: {issue}5840[#5840])
* Propagate percolate mapping changes to cluster state {pull}5776[#5776]
* Fix highlighting in percolate existing doc api {pull}5108[#5108]
* Make highlight query also work in the percolate api {pull}5090[#5090]
* Percolator response always returns the `matches` key. {pull}4882[#4882] (issue: {issue}4881[#4881])

Plugin Cloud Azure::
* Correctly list blobs in Azure Storage to prevent snapshot corruption and do not unnecessarily duplicate Lucene segments in Azure Storage {pull}12380[#12380] (issues: {issue}51[#51], {issue}99[#99])

Plugin Delete By Query::
* Fix number of deleted/missing documents in Delete-By-Query {pull}11745[#11745]

Plugins::
* Fix automatically generated URLs for official plugins in PluginManager {pull}12885[#12885]
* Skip hidden files {pull}12465[#12465] (issue: {issue}12433[#12433])
* strip elasticsearch- and es- from any plugin name {pull}12160[#12160] (issues: {issue}12143[#12143], {issue}12158[#12158])
* remove elasticsearch- from name of official plugins {pull}12158[#12158] (issues: {issue}11805[#11805], {issue}12143[#12143])
* Fix pluginmanager permissions for bin/ scripts {pull}12157[#12157] (issue: {issue}12142[#12142])
* Only load a plugin once from the classpath {pull}11301[#11301]
* Let HTTPS work correctly {pull}10983[#10983]
* HTTP: Ensure url path expansion only works inside of plugins {pull}10815[#10815]
* Installation failed when directories are on different file systems {pull}9011[#9011] (issue: {issue}8999[#8999])
* NPE when plugins dir is inaccessible {pull}8839[#8839] (issue: {issue}8837[#8837])
* Plugins failed to load since #8666 {pull}8756[#8756]
* Support usage of ES_JAVA_OPTS in plugin commands {pull}8288[#8288]
* Fix config path extraction from plugin handle {pull}7935[#7935]
* Plugins with only  `bin` and `config` do not install correctly {pull}7154[#7154] (issue: {issue}7152[#7152])
* `bin/plugin` removes itself [ISSUE] {pull}6745[#6745]
* Removing plugin does not fail when plugin dir is read only {pull}6735[#6735] (issue: {issue}6546[#6546])
* Fix github download link when using specific version {pull}6321[#6321]
* Properly quote $JAVA in bin/plugin {pull}5765[#5765]
* NPE in PluginsService when starting elasticsearch with a wrong user {pull}5196[#5196] (issues: {issue}4186[#4186], {issue}5195[#5195])
* Upgrading analysis plugins fails {pull}5034[#5034] (issues: {issue}4936[#4936], {issue}5030[#5030])

Query DSL::
* Add support for `disable_coord` param to `terms` query {pull}12756[#12756] (issue: {issue}12755[#12755])
* Do not track named queries that are null {pull}12691[#12691] (issue: {issue}12683[#12683])
* `multi_match` query applies boosts too many times. {pull}12294[#12294]
* QueryString ignores maxDeterminizedStates when creating a WildcardQuery {pull}12269[#12269] (issue: {issue}12266[#12266])
* Rewrite set twice in WildcardQueryParser [ISSUE] {pull}12207[#12207]
* Fix RegexpQueryBuilder#maxDeterminizedStates {pull}12083[#12083] (issue: {issue}11896[#11896])
* CommonTermsQuery fix for ignored coordination factor {pull}11780[#11780] (issue: {issue}11730[#11730])
* Fix support for `_name` in some queries {pull}11694[#11694]
* Better exception if array passed to `term` query. {pull}11384[#11384] (issue: {issue}11246[#11246])
* Query DSL: Fix `bool` parsing. {pull}11120[#11120] (issue: {issue}10985[#10985])
* Score value is 0 in _explanation with random_score query [ISSUE] {pull}10742[#10742]
* Avoid NPE during query parsing {pull}10333[#10333]
* Function score: Apply `min_score` to sub query score if no function provided {pull}10326[#10326] (issue: {issue}10253[#10253])
* function_score: undo "Remove explanation of query score from functions" {pull}9826[#9826]
* Fix wrong error messages in MultiMatchQueryParser {pull}8597[#8597]
* DateMath: Fix semantics of rounding with inclusive/exclusive ranges. {pull}8556[#8556] (issue: {issue}8424[#8424])
* Minor fixes to the `match` query {pull}8352[#8352] (issue: {issue}6932[#6932])
* Make simple_query_string leniency more fine-grained {pull}8162[#8162] (issue: {issue}7967[#7967])
* Fix NumberFormatException in Simple Query String Query {pull}7876[#7876] (issue: {issue}7875[#7875])
* Empty bool {} should return match_all {pull}7347[#7347] (issue: {issue}7240[#7240])
* Function Score: Fix explain distance string {pull}7248[#7248]
* Function Score: Remove explanation of query score from functions {pull}7245[#7245]
* Cache range filter on date field by default {pull}7122[#7122] (issue: {issue}7114[#7114])
* Throw exception if function in function score query is null {pull}6784[#6784] (issue: {issue}6292[#6292])
* QueryParser can return null from a query {pull}6723[#6723] (issue: {issue}6722[#6722])
* Fix MatchQueryParser not parsing fuzzy_transpositions {pull}6300[#6300]
* Range/Term query/filter on dates fail to handle numbers properly {pull}5969[#5969]
* Fixing questionable PNRG behavior {pull}5613[#5613] (issues: {issue}5454[#5454], {issue}5578[#5578])
* Add slop to prefix phrase query after parsing query string {pull}5438[#5438] (issues: {issue}5005[#5005], {issue}5437[#5437])
* Allow edit distances > 2 on FuzzyLikeThisQuery {pull}5374[#5374] (issue: {issue}5292[#5292])
* Use FieldMapper to create the low level term queries in CommonTermQuery {pull}5273[#5273] (issue: {issue}5258[#5258])
* Make _exists_/_missing_ behave consistently with exists/missing. {pull}5145[#5145] (issue: {issue}5142[#5142])
* Allow specifying nested fields in simple_query_string {pull}5110[#5110] (issue: {issue}5091[#5091])
* Added exception to match and multi-match queries if passed an invalid type param {pull}4971[#4971] (issue: {issue}4964[#4964])
* Filtered query parses _name incorrectly [ISSUE] {pull}4960[#4960]
* Never cache a range filter that uses the `now` date expression. {pull}4828[#4828] (issue: {issue}4846[#4846])

Query Refactoring::
* Query DSL: don't cache type filter in DocumentMapper {pull}12447[#12447]

REST::
* Return `408 REQUEST_TIMEOUT` if `_cluster/health` times out {pull}12780[#12780]
* `fielddata_fields` query string parameter was ignored. {pull}11368[#11368] (issue: {issue}11025[#11025])
* Update RestRequest.java {pull}11305[#11305]
* Render non-elasticsearch exception as root cause {pull}10850[#10850] (issue: {issue}10836[#10836])
* Add `fielddata_fields` to the REST spec {pull}9399[#9399] (issues: {issue}4492[#4492], {issue}9398[#9398])
* Get field mapping api should honour pretty flag {pull}8806[#8806] (issue: {issue}6552[#6552])
* Passing `fielddata_fields` as a non array causes OOM {pull}8203[#8203]
* Reroute API response didn't filter metadata {pull}7523[#7523] (issue: {issue}7520[#7520])
* Allows all options for expand_wildcards parameter {pull}7290[#7290] (issue: {issue}7258[#7258])
* Added support for empty field arrays in mappings {pull}7271[#7271] (issue: {issue}6133[#6133])
* Empty HTTP body returned from _recovery API on empty cluster [ISSUE] {pull}5743[#5743]
* Search template: Put source param into template variable {pull}5598[#5598] (issue: {issue}5556[#5556])
* Fix possible exception in toCamelCase method {pull}5207[#5207]
* Source filtering with wildcards broken when given multiple patterns {pull}5133[#5133] (issue: {issue}5132[#5132])
* Ignore case when parsing `script_values_sorted|unique` in aggregations. {pull}5010[#5010] (issue: {issue}5009[#5009])
* scroll REST API should support source parameter {pull}4942[#4942] (issue: {issue}4941[#4941])
* Fix potential NPE when no source and no body {pull}4932[#4932] (issues: {issue}4892[#4892], {issue}4900[#4900], {issue}4901[#4901], {issue}4902[#4902], {issue}4903[#4903], {issue}4924[#4924])
* mtermvectors REST API should support source parameter {pull}4910[#4910] (issue: {issue}4902[#4902])
* percolate REST API should support source parameter {pull}4909[#4909] (issue: {issue}4903[#4903])
* mpercolate REST API should support source parameter {pull}4908[#4908] (issue: {issue}4900[#4900])
* msearch REST API should support source parameter {pull}4905[#4905] (issue: {issue}4901[#4901])
* mget REST API should support source parameter {pull}4893[#4893] (issue: {issue}4892[#4892])
* Cluster state toXContent serialization only returns needed data {pull}4889[#4889] (issue: {issue}4885[#4885])

Recovery::
* Endless recovery loop with `indices.recovery.file_chunk_size=0Bytes` {pull}12919[#12919]
* Rethrow exception during recovery finalization even if source is not broken {pull}12667[#12667]
* Check for incompatible mappings while upgrading old indices {pull}12406[#12406] (issue: {issue}11857[#11857])
* Fix MapperException detection during translog ops replay {pull}11583[#11583] (issue: {issue}11363[#11363])
* Fix recovered translog ops stat counting when retrying a batch {pull}11536[#11536] (issue: {issue}11363[#11363])
* Restart recovery upon mapping changes during translog replay {pull}11363[#11363] (issue: {issue}11281[#11281])
* Add engine failure on recovery finalization corruption back {pull}11241[#11241]
* Decrement reference even if IndexShard#postRecovery barfs {pull}11201[#11201]
* Fail recovery if retry recovery if resetRecovery fails {pull}11149[#11149]
* Refactor state format to use incremental state IDs {pull}10316[#10316]
* RecoveryState.File.toXContent reports file length as recovered bytes {pull}10310[#10310]
* Fail shard when index service/mappings fails to instantiate {pull}10283[#10283]
* Gateway: improve assertion at the end of shard recovery {pull}10028[#10028]
* Synchronize RecoveryState.timer methods {pull}9943[#9943]
* Don't recover from buggy version {pull}9925[#9925] (issues: {issue}7210[#7210], {issue}9922[#9922])
* Fix deadlock problems when API flush and finish recovery happens concurrently {pull}9648[#9648]
* Handle corruptions during recovery finalization {pull}9619[#9619]
* Mapping update task back references already closed index shard {pull}9607[#9607]
* Update access time of ongoing recoveries {pull}9506[#9506] (issue: {issue}8720[#8720])
* Cleaner interrupt handling during cancellation {pull}9000[#9000]
* Harden recovery for old segments {pull}8399[#8399]
* Prefer recovering the state file that uses the latest format. {pull}8343[#8343]
* Change check for finished to a ref count check {pull}8271[#8271] (issue: {issue}8092[#8092])
* RecoveriesCollection.findRecoveryByShard should call recoveryStatus.tryIncRef before accessing fields {pull}8231[#8231] (issue: {issue}8092[#8092])
* Mapping check during phase2 should be done in cluster state update task {pull}7744[#7744]
* Don't update indexShard if it has been removed before {pull}7509[#7509]
* Increment Store refcount on RecoveryTarget {pull}6844[#6844]
* Recovery from local gateway should re-introduce new mappings {pull}6659[#6659]
* Honor time delay when retrying recoveries {pull}6226[#6226]
* Do not start a recovery process if the primary shard is currently allocated on a node which is not part of the cluster state {pull}6024[#6024]

Scripting::
* Consistently name Groovy scripts with the same content {pull}12296[#12296] (issue: {issue}12212[#12212])
* Execute Scripting Engine before searching for inner templates in template query {pull}11512[#11512]
* Allow script language to be null when parsing {pull}10976[#10976] (issue: {issue}10926[#10926])
* File scripts cache key to include language and prevent conflicts {pull}10033[#10033]
* Avoid unnecessary utf8 conversion when creating ScriptDocValues for a string field. {pull}9557[#9557] (issue: {issue}6908[#6908])
* Disallow method pointer expressions in Groovy scripting {pull}9509[#9509]
* Make _score in groovy scripts comparable {pull}9094[#9094] (issue: {issue}8828[#8828])
* Function score and optional weight : avg score is wrong {pull}9004[#9004] (issue: {issue}8992[#8992])
* Return new lists on calls to getValues. {pull}8591[#8591] (issue: {issue}8576[#8576])
* Add score() back to AbstractSearchScript {pull}8417[#8417] (issues: {issue}8377[#8377], {issue}8416[#8416])
* Clear the GroovyClassLoader cache before compiling {pull}8062[#8062] (issues: {issue}7658[#7658], {issue}8073[#8073])
* Fix NPE in ScriptService when script file with no extension is deleted {pull}7953[#7953] (issue: {issue}7689[#7689])
* Scripting: Wrap groovy script exceptions in a serializable Exception object {pull}6628[#6628] (issue: {issue}6598[#6598])
* Remove ScriptDocValues.EMPTY. {pull}5650[#5650] (issue: {issue}5646[#5646])

Scroll::
* Append the shard top docs in such a way to prevent AOOBE {pull}11978[#11978] (issue: {issue}7926[#7926])

Search::
* Never cache match_all queries. {pull}13032[#13032]
* _all: Stop NPE querying _all when it doesn't exist {pull}12495[#12495] (issue: {issue}12439[#12439])
* Free all pending search contexts if index is closed or removed {pull}12180[#12180] (issue: {issue}12116[#12116])
* Release search contexts after failed dfs or query phase for dfs queries {pull}11434[#11434] (issue: {issue}11400[#11400])
* Don't truncate TopDocs after rescoring {pull}11342[#11342] (issues: {issue}11277[#11277], {issue}7707[#7707])
* Matched queries: Remove redundant and broken code {pull}10694[#10694] (issue: {issue}10661[#10661])
* Make sure that named filters/ queries defined in a wrapped query/filters aren't lost {pull}9166[#9166] (issue: {issue}6871[#6871])
* Fix paging on strings sorted in ascending order. {pull}9157[#9157] (issue: {issue}9136[#9136])
* Terms filter lookup caching should cache values, not filters. {pull}9027[#9027] (issues: {issue}1[#1], {issue}2[#2])
* Refactor term analysis for simple_query_string prefix queries {pull}8435[#8435]
* Use ConcurrentHashMap in SCAN search to keep track of the reader states. {pull}7499[#7499] (issue: {issue}7478[#7478])
* Make `ignore_unmapped` work for sorting cross-index queries. {pull}7039[#7039] (issue: {issue}2255[#2255])
* Query DSL: Improved explanation for match_phrase_prefix {pull}6767[#6767] (issue: {issue}2449[#2449])
* The query_string cache should returned cloned Query instances. {pull}6733[#6733] (issue: {issue}2542[#2542])
* Match query with operator and, cutoff_frequency and stacked tokens {pull}6573[#6573]
* XFilteredQuery default strategy prefers query first in the deleted docs ... {pull}6254[#6254] (issue: {issue}6247[#6247])
* `limit` filter returns wrong results if deleted document are present [ISSUE] {pull}6234[#6234]
* Use default forceAnalyzeQueryString if no query builder is present {pull}6217[#6217] (issue: {issue}6215[#6215])
* Read full message on free context {pull}6148[#6148] (issues: {issue}5730[#5730], {issue}6147[#6147])
* Missing scroll id now returns 404 {pull}6040[#6040] (issue: {issue}5729[#5729])
* Search might not return on thread pool rejection {pull}6032[#6032] (issue: {issue}4887[#4887])
* Scroll api reduce phase fails if shard failures occur {pull}6022[#6022]
* Fix setting of readerGen in BytesRefOrdValComparator on nested documents. {pull}5986[#5986]
* Improved SearchContext.addReleasable. {pull}5799[#5799] (issue: {issue}5703[#5703])
* Replace InternalSearchResponse#EMPTY with InternalSearchResponse#empty() {pull}5775[#5775]
* The clear scroll apis should optionally accepts a scroll_id in the request body. {pull}5734[#5734] (issue: {issue}5726[#5726])
*  Make sure successful operations are correct if second search phase is fast {pull}5713[#5713]
* Do not propagate errors from onResult to onFailure. {pull}5629[#5629]
* Fix IndexShardRoutingTable's shard randomization to not throw out-of-bounds exceptions. {pull}5561[#5561] (issue: {issue}5559[#5559])
* Convert TermQuery to PrefixQuery if PHRASE_PREFIX is set {pull}5553[#5553] (issue: {issue}5551[#5551])
* Use patched version of TermsFilter to prevent using wrong cached results {pull}5393[#5393] (issue: {issue}5363[#5363])
* Fix SearchContext occasionally closed prematurely  {pull}5170[#5170] (issue: {issue}5165[#5165])
* Exposed shard id related to a failure in delete by query {pull}5125[#5125] (issue: {issue}5095[#5095])
* Fix AndDocIdSet#IteratorBasedIterator to not violate initial doc state {pull}5070[#5070] (issue: {issue}5049[#5049])

Search Templates::
* Fix JSON encoding for Mustache templates. {pull}10820[#10820] (issue: {issue}5473[#5473])
* Ensure internal scope extrators are always operating on a Map {pull}6326[#6326] (issue: {issue}6318[#6318])
* Fix TemplateQueryParser swallows additional parameters {pull}5933[#5933]
* Made template endpoint compatible with search endpoint {pull}5619[#5619] (issue: {issue}5550[#5550])

Settings::
* Do not swallow exceptions thrown while parsing settings {pull}13039[#13039] (issue: {issue}13028[#13028])
* Add explicit check that we have reached the end of the settings stream when parsing settings {pull}12451[#12451] (issue: {issue}12382[#12382])
* Medium Interval time for ResourceWatcher should be 30 seconds {pull}12423[#12423]
* Copy the classloader from the original settings when checking for prompts {pull}12419[#12419] (issue: {issue}12340[#12340])
* Replace references to ImmutableSettings with Settings {pull}11843[#11843]
* Do not prompt for node name twice {pull}11668[#11668] (issue: {issue}11564[#11564])
* Always normalize root paths during resolution of paths {pull}11446[#11446] (issue: {issue}11426[#11426])
* Prevent changing the number of replicas on a closed index {pull}11410[#11410] (issue: {issue}9566[#9566])
* Read configuration file with .yaml suffix {pull}10909[#10909] (issue: {issue}9706[#9706])
* Validate number_of_shards/_replicas without index setting prefix {pull}10701[#10701] (issue: {issue}10693[#10693])
* Fix handling of IndicesOptions in update settings REST API {pull}10030[#10030]
* Reset TieredMP settings only if the value actually changed {pull}9497[#9497] (issue: {issue}8890[#8890])
* `cluster.routing.allocation.disk.threshold_enabled` accepts wrong values [ISSUE] {pull}9309[#9309]
* Ensure fields are overriden and not merged when using arrays {pull}8381[#8381] (issue: {issue}6887[#6887])
* Tab characters in YAML should throw an exception {pull}8355[#8355] (issue: {issue}8259[#8259])
* Dynamic changes to `max_merge_count` are now picked up by index throttling {pull}8136[#8136] (issue: {issue}8132[#8132])
* Validate create index requests' number of primary/replica shards {pull}7496[#7496] (issue: {issue}7495[#7495])
* LogConfigurator resolveConfig  also reads .rpmnew or .bak files {pull}7457[#7457]
* Fix bug in PropertyPlaceholder and add unit tests {pull}6034[#6034]

Shadow Replicas::
* Fail engine without marking it as corrupt when recovering on SharedFS {pull}11933[#11933] (issue: {issue}11788[#11788])

Snapshot/Restore::
* Improve repository verification failure message {pull}11925[#11925] (issue: {issue}11922[#11922])
* Improve logging of repository verification exceptions. {pull}11763[#11763] (issue: {issue}11760[#11760])
* Blob store shouldn't try deleting the write.lock file at the end of the restore process {pull}11517[#11517]
* Move in-progress snapshot and restore information from custom metadata to custom cluster state part {pull}11486[#11486] (issue: {issue}8102[#8102])
* Sync up snapshot shard status on a master restart {pull}11450[#11450] (issue: {issue}11314[#11314])
* Fix cluster state task name for update snapshot task {pull}11197[#11197]
* Don't reuse source index UUID on restore {pull}10367[#10367]
* Separate repository registration {pull}10354[#10354] (issue: {issue}10351[#10351])
* Automatically add "index." prefix to the settings are changed on restore if the prefix is missing {pull}10269[#10269] (issue: {issue}10133[#10133])
* Delete operation should ignore finalizing shards on nodes that no longer exist {pull}9981[#9981] (issue: {issue}9924[#9924])
* Allow deletion of snapshots with corrupted snapshot files {pull}9569[#9569] (issue: {issue}9534[#9534])
* Better handling of index deletion during snapshot {pull}9418[#9418] (issue: {issue}9024[#9024])
* Add validation of restored persistent settings {pull}9051[#9051] (issue: {issue}8830[#8830])
* Improve snapshot creation and deletion performance on repositories with large number of snapshots {pull}8969[#8969] (issue: {issue}8958[#8958])
* Switch to write once mode for snapshot metadata files {pull}8782[#8782] (issue: {issue}8696[#8696])
* Restore with `wait_for_completion:true` should wait for succesfully restored shards to get started {pull}8545[#8545] (issue: {issue}8340[#8340])
* Keep the last legacy checksums file at the end of restore {pull}8358[#8358] (issue: {issue}8119[#8119])
* Restore of indices that are only partially available in the cluster {pull}8341[#8341] (issue: {issue}8224[#8224])
* Fix snapshotting of a single closed index {pull}8047[#8047] (issue: {issue}8046[#8046])
* Make it possible to delete snapshots with missing metadata file {pull}7981[#7981] (issue: {issue}7980[#7980])
* Make sure indices cannot be renamed into restored aliases {pull}7918[#7918] (issue: {issue}7915[#7915])
* Allow to get metadata from arbitrary commit points {pull}7376[#7376]
* Improve recovery / snapshot restoring file identity handling {pull}7351[#7351]
* Fix NPE in SnapshotsService on node shutdown {pull}7322[#7322] (issue: {issue}6506[#6506])
* Fail restore if snapshot is corrupted {pull}6938[#6938]
* Add ability to snapshot replicating primary shards {pull}6139[#6139] (issue: {issue}5531[#5531])
* Fix for hanging aborted snapshot during node shutdown {pull}5966[#5966] (issue: {issue}5958[#5958])
* Fix snapshot status with empty repository {pull}5791[#5791] (issue: {issue}5790[#5790])
* Add retry mechanism to get snapshot method {pull}5411[#5411]
* Restore of an existing index using rename doesn't completly open the index after restore [ISSUE] {pull}5212[#5212]
* Restore process should replace the mapping and settings if index already exists {pull}5211[#5211] (issue: {issue}5210[#5210])
* Handle "true"/"false" in snapshot api for "include_global_state" {pull}4956[#4956] (issue: {issue}4949[#4949])

Stats::
* Use time with nanosecond resolution calculated at the executing node {pull}12346[#12346] (issue: {issue}12345[#12345])
* Failure during the fetch phase of scan should invoke the failed fetch… {pull}12087[#12087] (issue: {issue}12086[#12086])
* Fix wrong reused file bytes in Recovery API reports {pull}11965[#11965] (issue: {issue}11876[#11876])
* Fix RecoveryState timestamps {pull}11871[#11871] (issue: {issue}11870[#11870])
* Translog: stats fail to serialize size {pull}10105[#10105]
* Translog: make sure stats's op count and size are in sync {pull}10041[#10041]
* Fix open file descriptors count on Windows {pull}9397[#9397] (issue: {issue}1563[#1563])
* Relax restrictions on filesystem size reporting in DiskUsage {pull}9283[#9283] (issues: {issue}9249[#9249], {issue}9260[#9260])
* Fix wrong search stats groups in indices API {pull}8950[#8950] (issue: {issue}7644[#7644])
* Fix Bloom filter ram usage calculation {pull}8584[#8584] (issue: {issue}8564[#8564])
* Filter indices stats for translog {pull}8263[#8263] (issue: {issue}8262[#8262])
* Stats: _status with #shards >> queue capacity failing with BroadcastShardOperationFailedException [ISSUE] {pull}7916[#7916]
* Update action returns before updating stats for `NONE` operations {pull}7639[#7639]
* NPE in ShardStats when routing entry is not set yet on IndexShard {pull}7358[#7358] (issue: {issue}7356[#7356])
* Recovery API should also report ongoing relocation recoveries {pull}6585[#6585]
* Indices stats options {pull}6390[#6390]
* Fix recovery percentage > 100% {pull}6138[#6138] (issue: {issue}6113[#6113])
* Disabled query size estimation in percolator {pull}5372[#5372] (issue: {issue}5339[#5339])
* Use num of actual threads if busiestThreads is larger {pull}4928[#4928] (issue: {issue}4927[#4927])

Store::
* Ensure we mark store as corrupted if we fail to read the segments info {pull}11230[#11230] (issue: {issue}11226[#11226])
* Fix NPE when checking for active shards before deletion {pull}11110[#11110] (issue: {issue}10172[#10172])
* Shard not deleted after relocation if relocated shard is still in post recovery {pull}10172[#10172] (issue: {issue}10018[#10018])
* Only ack index store deletion on data nodes {pull}9672[#9672] (issue: {issue}9605[#9605])
* Only fail recovery if files are inconsistent {pull}8779[#8779]
* Use Lucene checksums if segment version is >= 4.9.0 {pull}8599[#8599] (issue: {issue}8587[#8587])
* Calculate Alder32 Checksums for legacy files in Store#checkIntegrity {pull}8407[#8407]
* Add BWC layer to .si / segments_N hashing to identify segments accurately {pull}7436[#7436] (issues: {issue}7351[#7351], {issue}7434[#7434])
* Ignore segments.gen on metadata snapshots {pull}7379[#7379]
* DistributorDirectory shouldn't search for directory when reading existing file {pull}7323[#7323] (issue: {issue}7306[#7306])
* Delete unallocated shards under a cluster state task {pull}6902[#6902]
* Searcher might not be closed if store hande can't be obtained {pull}5884[#5884]

Suggesters::
* Prevent DirectCandidateGenerator to reuse an unclosed analyzer {pull}12670[#12670]
* Ensure empty string completion inputs are not indexed {pull}11158[#11158] (issue: {issue}10987[#10987])
* Ensure collate option in PhraseSuggester only collates on local shard {pull}11156[#11156] (issue: {issue}9377[#9377])
* Make GeoContext mapping idempotent {pull}10602[#10602] (issues: {issue}10581[#10581], {issue}8937[#8937])
* Return an HTTP error code when a suggest request failed instead of 200 {pull}10104[#10104]
* Fix CompletionFieldMapper to correctly parse weight {pull}8197[#8197] (issue: {issue}8090[#8090])
* Infinite loop in GeolocationContextMapping [ISSUE] {pull}7433[#7433]
* Bugs with encoding multiple levels of geo precision {pull}7369[#7369] (issue: {issue}7368[#7368])
* Completion mapping type throws a misleading error on null value {pull}6926[#6926] (issue: {issue}6399[#6399])
* Tie-break suggestions by term {pull}5978[#5978]
* Fix Lucene's getFiniteStrings to not consume Java stack {pull}5927[#5927]
* Geo context suggester: Require precision in mapping {pull}5647[#5647] (issue: {issue}5621[#5621])
* ContextSuggester: Adding couple of tests to catch more bugs {pull}5596[#5596] (issue: {issue}5525[#5525])
* Category type should be called "category" instead of "field" in context suggester {pull}5469[#5469]
* Two bugfixes for the completion format {pull}4973[#4973]
* marvel.agent Background thread had an uncaught exception: java.lang.NullPointerException [ISSUE] {pull}4970[#4970]
* NullPointerException (NPE) in completion suggester requests [ISSUE] {pull}4788[#4788]

Term Vectors::
* Make sure filter is correctly parsed for multi-term vectors {pull}12312[#12312] (issue: {issue}12311[#12311])
* ShardTermVectorsService calls docFreq() on unpositioned TermsEnum [ISSUE] {pull}10660[#10660]

Top Hits::
* Protected against  `size` and `offset` larger than total number of document in a shard {pull}12518[#12518] (issue: {issue}12510[#12510])
* Inconsistent sorting of top_hits fixed [ISSUE] {pull}7697[#7697]
* Properly support top_hits aggregation in a nested and reverse_nested aggregations. {pull}7164[#7164] (issue: {issue}3022[#3022])
* Make `_source` parsing in `top_hits` aggregation consistent with the search api  {pull}6997[#6997]
* Track scores should be applied properly for `top_hits` aggregation. {pull}6934[#6934]

Translog::
* Ignore EngineClosedException during translog fysnc {pull}12384[#12384]
* Don't convert possibly corrupted bytes to UTF-8 {pull}11911[#11911]
* Mark translog as upgraded in the engine even if a legacy generation exists {pull}11860[#11860] (issue: {issue}11858[#11858])
* Fail #snapshot if translog is closed {pull}10809[#10809] (issue: {issue}10807[#10807])
* Translog leaks filehandles if it's corrupted or truncated {pull}8372[#8372]
* Better support for partial buffer reads/writes in translog infrastructure {pull}6576[#6576] (issue: {issue}6441[#6441])
* Lower the translog flush triggers to workaround #6363 [ISSUE] {pull}6377[#6377]

Tribe Node::
* System properties and configuration settings must not be forwarded to tribe clients {pull}9721[#9721] (issue: {issue}9576[#9576])
* Remove closed indices from cluster state {pull}9334[#9334]
* Fix possible NPE in TribeNodeService {pull}5645[#5645] (issue: {issue}5643[#5643])
* Blocking writes on a tribe node creates a "blocks" tribe [ISSUE] {pull}5389[#5389]

Upgrade API::
* Fix version check in bytes to upgrade that spans major versions {pull}9340[#9340]
* Fix upgrade logic to check for major version bump. {pull}8013[#8013]


[[regression-2.0.0-beta1]]
[float]
=== Regressions

CRUD::
* Indexing a document fails when setting `version=0` &  `version_type=external` [ISSUE] {pull}5662[#5662]

Core::
* Switch back to ConcurrentMergeScheduler as the default [ISSUE] {pull}5817[#5817]

Discovery::
* Restore preference to latest unicast pings describing the same node {pull}7702[#7702] (issues: {issue}5413[#5413], {issue}7558[#7558])

Internal::
* Restore streamInput() performance over PagedBytesReference. {pull}5589[#5589]

Mapping::
* Mapping With a `null` Default Timestamp Causes NullPointerException on Merge {pull}9205[#9205] (issue: {issue}9204[#9204])
* Object and Type parsing: Fix include_in_all in type {pull}6353[#6353] (issues: {issue}6093[#6093], {issue}6304[#6304])

Network::
* Only resolve host if explicitly allowed. {pull}12986[#12986]


[[upgrade-2.0.0-beta1]]
[float]
=== Upgrades

Core::
* Upgrade to Lucene 5.2.1. {pull}11662[#11662]
* Upgrade to Lucene 5.2 {pull}11534[#11534]
* Upgrade Jackson to 2.5.3 {pull}11307[#11307]
* Upgrade to lucene-5.2.0-snapshot-1681024 {pull}11296[#11296]
* Upgrade to lucene-5.2.0-snapshot-1680200. {pull}11218[#11218]
* Upgrade to lucene-5.2.0-snapshot-1678978. {pull}11125[#11125]
* Upgrade to HPPC 0.7.1 {pull}11035[#11035]
* Upgrade to lucene-5.2-snapshot-1675363. {pull}10727[#10727] (issue: {issue}10728[#10728])
* Upgrade to Lucene 5.2 r1675100 {pull}10699[#10699]
* Upgrade to Lucene-5.2-snapshot-1674183. {pull}10641[#10641]
* Upgrade to Lucene 5.2 r1673726 {pull}10612[#10612]
* Upgrade to lucene-5.2.0-snapshot-1673124. {pull}10562[#10562]
* Update forbiddenapis to version 1.8 {pull}10555[#10555]
* Upgrade to lucene-5.1.0-snapshot-1671894. {pull}10468[#10468]
* Update to Lucene 5.1 snapshot r1671277 {pull}10435[#10435]
* Upgrade to Jackson 2.5.1 {pull}10210[#10210]
* Upgrade to Jackson 2.5.1 {pull}10134[#10134]
* Upgrade to lucene r1662607 {pull}9915[#9915] (issue: {issue}1[#1])
* Upgrade to Lucene r1660560 {pull}9746[#9746]
* Upgrade to Lucene snapshot r1656366 {pull}9524[#9524] (issue: {issue}8870[#8870])
* Upgrade to lucene r1654549 snapshot {pull}9402[#9402]
* Upgrade to lucene-5.1.0-snapshot-1652032. {pull}9318[#9318]
* Upgrade to lucene 5 r1650327 {pull}9206[#9206]
* Upgrade to current Lucene 5.0.0 snapshot {pull}8588[#8588]
* Upgrade master to lucene 5.0 snapshot {pull}8347[#8347]
* Upgrade to Jackson 2.4.2 {pull}7934[#7934] (issue: {issue}7932[#7932])
* Upgrade to Lucene 4.10.1 snapshot {pull}7844[#7844] (issue: {issue}7905[#7905])
* Upgrade Guava to 18.0. {pull}7593[#7593] (issue: {issue}6268[#6268])
* Upgrade to Lucene 4.10 {pull}7584[#7584]
* Version bump HPPC to 0.6.0 {pull}7139[#7139]
* Upgrade Jackson to 2.4.1 {pull}6757[#6757]
* Upgrade to Lucene 4.9 {pull}6623[#6623]
* Upgrade to Guava 17 {pull}5953[#5953]
* Upgrade to Lucene 4.8.0 {pull}5932[#5932]
* Update forbidden-apis to 1.5.1 and remove the relaxed failOnMissingClasses setting, fix typo {pull}5863[#5863]
* Upgrade to Lucene 4.7.2 {pull}5802[#5802]
* Update JNA to 4.1.0, properly warn on error, hint at noexec mount {pull}5636[#5636] (issue: {issue}5493[#5493])
* Upgrade to Lucene 4.7.1 {pull}5635[#5635]
* Update to forbidden-apis 1.4.1 {pull}5495[#5495] (issue: {issue}5492[#5492])
* Move master to Java 1.7 {pull}5268[#5268] (issue: {issue}5267[#5267])
* Upgrade to Lucene 4.6.1 {pull}4898[#4898] (issue: {issue}4897[#4897])

Dates::
* Update joda-time to v2.7 {pull}9610[#9610]

Geo::
* Upgrade to Spatial4j 0.4.1 and JTS 1.13 {pull}5336[#5336] (issues: {issue}5279[#5279], {issue}5286[#5286])

Network::
* Update Netty to version 3.10.3.Final {pull}12310[#12310]
* Upgrade to Netty 3.10.3 {pull}11304[#11304]
* Upgrade netty to 3.10.0.Final {pull}9132[#9132]
* Upgrade to Apache HttpComponents client 4.3.5 {pull}7346[#7346] (issue: {issue}7342[#7342])
* Upgrade to Netty 3.9.3.Final {pull}7328[#7328]
* Upgrade to netty 3.9.1 {pull}6331[#6331]

Scripting::
* Upgrade groovy from 2.4.0 to 2.4.4 {pull}12288[#12288]
* Update Groovy dependency to 2.4.0 {pull}9520[#9520]


