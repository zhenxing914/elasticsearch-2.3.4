---
"Basic response":
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      indices.refresh: {}

  - do:
      update_by_query:
        index: test
  - is_false: timed_out
  - match: {updated: 1}
  - match: {version_conflicts: 0}
  - match: {batches: 1}
  - match: {failures: []}
  - match: {noops: 0}
  - gte: { took: 0 }
  # Update by query can't create
  - is_false: created
  - is_false: task

---
"wait_for_completion=false":
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      indices.refresh: {}

  - do:
      update_by_query:
        wait_for_completion: false
        index: test
  - match: {task: '/.+:\d+/'}
  - set: {task: task}
  - is_false: updated
  - is_false: version_conflicts
  - is_false: batches
  - is_false: failures
  - is_false: noops
  - is_false: took
  - is_false: created

  - do:
      tasks.list:
        wait_for_completion: true
        task_id: $task

---
"Response for version conflict":
  - do:
      indices.create:
        index: test
        body:
          settings:
            index.refresh_interval: -1
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      indices.refresh: {}
  # Creates a new version for reindex to miss on scan.
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test2" }

  - do:
      catch: conflict
      update_by_query:
        index: test
  - match: {updated: 0}
  - match: {version_conflicts: 1}
  - match: {batches: 1}
  - match: {failures.0.index:  test}
  - match: {failures.0.type:   foo}
  - match: {failures.0.id:     "1"}
  - match: {failures.0.status: 409}
  - match: {failures.0.cause.type:   version_conflict_engine_exception}
  # Use a regex so we don't mind if the current version isn't always 1. Sometimes it comes out 2.
  - match: {failures.0.cause.reason: "/\\[foo\\]\\[1\\]:.version.conflict,.current.\\[\\d+\\],.provided.\\[\\d+\\]/"}
  - match: {failures.0.cause.shard:  /\d+/}
  - match: {failures.0.cause.index:  test}
  - is_true: took

---
"Response for version conflict with conflicts=proceed":
  - do:
      indices.create:
        index: test
        body:
          settings:
            index.refresh_interval: -1
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      indices.refresh: {}
  # Creates a new version for reindex to miss on scan.
  - do:
      index:
        index:   test
        type:    foo
        id:      1
        body:    { "text": "test2" }

  - do:
      update_by_query:
        index: test
        conflicts: proceed
  - match: {updated: 0}
  - match: {version_conflicts: 1}
  - match: {batches: 1}
  - match: {noops: 0}
  - match: {failures: []}
  - is_true: took

---
"Limit by query":
  - do:
      index:
        index:   twitter
        type:    tweet
        id:      1
        body:    { "user": "kimchy" }
  - do:
      index:
        index:   twitter
        type:    tweet
        id:      2
        body:    { "user": "junk" }
  - do:
      indices.refresh: {}

  - do:
      update_by_query:
        index: twitter
        body:
          query:
            match:
              user: kimchy
  - match: {updated: 1}
  - match: {version_conflicts: 0}
  - match: {batches: 1}
  - match: {failures: []}
  - is_true: took

---
"Limit by size":
  - do:
      index:
        index:  twitter
        type:   tweet
        id:     1
        body:   { "user": "kimchy" }
  - do:
      index:
        index:  twitter
        type:   tweet
        id:     2
        body:   { "user": "kimchy" }
  - do:
      indices.refresh: {}

  - do:
      update_by_query:
        index: twitter
        size: 1
  - match: {updated: 1}
  - match: {version_conflicts: 0}
  - match: {batches: 1}
  - match: {failures: []}
  - is_true: took

---
"Can override scroll_size":
  - do:
      indices.create:
        index: test
        body:
          settings:
            number_of_shards: 1
  - do:
      cluster.health:
          wait_for_status: yellow
  - do:
      index:
        index:   test
        type:    foo
        body:    { "text": "test" }
  - do:
      index:
        index:   test
        type:    foo
        body:    { "text": "test" }
  - do:
      index:
        index:   test
        type:    foo
        body:    { "text": "test" }
  - do:
      indices.refresh: {}

  - do:
      update_by_query:
        index: test
        scroll_size: 1
  - match: {batches: 3}
